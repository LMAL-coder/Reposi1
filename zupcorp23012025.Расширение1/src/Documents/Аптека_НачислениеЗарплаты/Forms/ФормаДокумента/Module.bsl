Функция ПолучитьДанныеПоФЛ(СписокФЛ)
	запрос=новый запрос;
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);  
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("ФизЛицо",СписокФЛ);
	запрос.Текст="ВЫБРАТЬ
	             |	СУММА(ДанныеПоАптекам.ВремяДень) КАК ВремяДень,
	             |	СУММА(ДанныеПоАптекам.ВремяНочь) КАК ВремяНочь,
	             |	СУММА(ДанныеПоАптекам.ПраздникиВремяДень) КАК ПраздникиВремяДень,
	             |	СУММА(ДанныеПоАптекам.ПраздникиВремяНочь) КАК ПраздникиВремяНочь,
	             |	СУММА(ДанныеПоАптекам.БонусЗаОценку) КАК БонусЗаОценку,
	             |	СУММА(ДанныеПоАптекам.БонусСроковые) КАК БонусСроковые,
	             |	СУММА(ДанныеПоАптекам.БонусПоДМ) КАК БонусПоДМ,
	             |	СУММА(ДанныеПоАптекам.БонусМУ) КАК БонусМУ,
	             |	СУММА(ДанныеПоАптекам.БонусЗаЛичнуюВыручку) КАК БонусЗаЛичнуюВыручку,
	             |	ДанныеПоАптекам.ФизическоеЛицо КАК ФизическоеЛицо,
	             |	СУММА(ДанныеПоАптекам.БонусЗаСовмещение) КАК БонусЗаСовмещение,
	             |	СУММА(ДанныеПоАптекам.СуммаПродажТоваровНаПродвижении) КАК СуммаПродажТоваровНаПродвижении,
	             |	СУММА(ДанныеПоАптекам.СуммаПродажСрокиИЗМЗ) КАК СуммаПродажСрокиИЗМЗ,
	             |	СУММА(ДанныеПоАптекам.БонусЗаОптику) КАК БонусЗаОптику,
	             |	СУММА(ДанныеПоАптекам.КолПринятыхЗвонков) КАК КолПринятыхЗвонков,
	             |	СУММА(ДанныеПоАптекам.КолСобранныхУпаковок) КАК КолСобранныхУпаковок,
	             |	СУММА(ДанныеПоАптекам.БонусЗвонки) КАК БонусЗвонки,
	             |	СУММА(ДанныеПоАптекам.БонусСтрокиЗаказов) КАК БонусСтрокиЗаказов
	             |ИЗ
	             |	РегистрСведений.ДанныеПоАптекам КАК ДанныеПоАптекам
	             |ГДЕ
	             |	ДанныеПоАптекам.ФизическоеЛицо В(&ФизЛицо)
	             |	И ДанныеПоАптекам.ДатаС МЕЖДУ &ДатаС И &ДатаПо
	             |	И ДанныеПоАптекам.ДатаПо МЕЖДУ &ДатаС И &ДатаПо
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ДанныеПоАптекам.ФизическоеЛицо";
	//|	ДанныеПоАптекам.РазрядКатегория,
	//|	ДанныеПоАптекам.РазрядПодразделение";
	РезультатпоФЛ=запрос.Выполнить().Выгрузить();
	Возврат РезультатпоФЛ;
конецфункции
&НаСервере
Функция ПолучитьСотрудниковПоОсновному()
	//проверяем сотрудников,по которым уже выполнен расчет
	запрос=новый запрос;
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("Подразделение",Объект.Подразделение);
	запрос.УстановитьПараметр("Должность",Справочники.Должности.НайтиПоНаименованию("Заведующий аптекой"));
	запрос.Текст="ВЫБРАТЬ
	|	НачисленияЗППоАптекам.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.НачисленияЗППоАптекам КАК НачисленияЗППоАптекам
	|ГДЕ
	|	НачисленияЗППоАптекам.Период МЕЖДУ &ДатаС И &ДатаПо
	|	И  НачисленияЗППоАптекам.Должность<>&Должность";
	Если ЗначениеЗаполнено(Объект.Подразделение) тогда
		запрос.Текст=запрос.Текст+"
		|	И НачисленияЗППоАптекам.Подразделение = &Подразделение";
	конецесли;
	РезультатПрош=запрос.Выполнить().Выгрузить();
	МасФЛ=РезультатПрош.ВыгрузитьКолонку("ФизическоеЛицо");
	запрос=новый запрос;
	запрос.УстановитьПараметр("Подразделение",Объект.Подразделение);
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("ФЛ",МасФЛ);
	запрос.УстановитьПараметр("Завершено",Перечисления.ВидыСтатусов.Завершено);
	//Запрос.УстановитьПараметр("ПодразделениеРаботы",справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Аптечный отдел",истина));
	Запрос.УстановитьПараметр("Должность",справочники.Должности.НайтиПоНаименованию("Врач-офтальмолог",истина));
	//LMAL_05-07-2023Н делают группировку по ФизическоеЛицо,ТН, т.к. есть переводы сотрудников в середине месяца, поэтому создаются дубли строк.
	запрос.Текст="ВЫБРАТЬ
	|	ДанныеПоАптекам.Подразделение КАК Подразделение,
	|	ДанныеПоАптекам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеПоАптекам.Сотрудник.Код КАК ТН,
	|	ДанныеПоАптекам.Уволенная КАК Уволенная
	|ПОМЕСТИТЬ ВТ_Все
	|ИЗ
	|	РегистрСведений.ДанныеПоАптекам КАК ДанныеПоАптекам
	|ГДЕ
	|	ДанныеПоАптекам.ДатаС МЕЖДУ &ДатаС И &ДатаПо
	|	И ДанныеПоАптекам.ДатаПо МЕЖДУ &ДатаС И &ДатаПо
	|	И НЕ ДанныеПоАптекам.ФизическоеЛицо В (&ФЛ)
	|	И ДанныеПоАптекам.Статус = &Завершено
	|  И НЕ ДанныеПоАптекам.Должность=&Должность";
	//|	И ДанныеПоАптекам.ПодразделениеРаботы В ИЕРАРХИИ(&ПодразделениеРаботы)";
	Если ЗначениеЗаполнено(Объект.Подразделение)тогда
		запрос.Текст=запрос.Текст+"
		|	И ДанныеПоАптекам.Подразделение = &Подразделение";
	КонецЕсли;
	
	запрос.Текст=запрос.Текст+"
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоАптекам.ФизическоеЛицо,
	|	ДанныеПоАптекам.Сотрудник.Код,
	|	ДанныеПоАптекам.Подразделение,
	|	ДанныеПоАптекам.Уволенная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_Все.Подразделение) КАК Подразделение,
	|	ВТ_Все.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТ_Все.ТН КАК ТН,
	|	ВТ_Все.Уволенная КАК Уволенная,
	|	КОЛИЧЕСТВО(ВТ_Все.Подразделение) КАК Дубли
	|ИЗ
	|	ВТ_Все КАК ВТ_Все
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Все.ФизическоеЛицо,
	|	ВТ_Все.Уволенная,
	|	ВТ_Все.ТН";
	
	
	
	//LMAL_05-07-2023К
	ТаблицаСотрудников=запрос.Выполнить().Выгрузить();
	Возврат ТаблицаСотрудников;
конецфункции 
&НаСервере
Функция ПолучитьПараметры()
	Возврат КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();	
КонецФункции
Функция ПолучитьНормативы()
	запрос=новый запрос;
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
	запрос.Текст="ВЫБРАТЬ
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.НормаЧасов КАК НормаЧасов,
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.Минимум КАК Минимум,
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.Максимум КАК Максимум,
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьНочногоЧаса КАК СтоимостьНочногоЧаса,
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.Коэффициент КАК Коэффициент
	|ИЗ
	|	РегистрСведений.ПоказателиПоДолжностям.СрезПоследних(&ДатаС, ) КАК ДПО_ПоказателиПоДолжностямСрезПоследних";
	РезультатНормативы=запрос.Выполнить().Выгрузить();
	
	Возврат РезультатНормативы;
конецфункции
&НаСервере
Функция ПолучитьГраницыПоДолжности(Должность)
	запрос=новый запрос;
	запрос.УстановитьПараметр("Должность",Должность);
	запрос.Текст="ВЫБРАТЬ
	|	ТарифныеСтавки.ДиапазонС КАК ДиапазонС,
	|	ТарифныеСтавки.ДиапазонПо КАК ДиапазонПо,
	|	ТарифныеСтавки.Значение КАК Значение
	|ИЗ
	|	Справочник.ТарифныеСтавки КАК ТарифныеСтавки
	|ГДЕ
	|	ТарифныеСтавки.Должность = &Должность
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДиапазонС";
	Результат=запрос.Выполнить();//.Выгрузить();
	Если Результат.Пустой() Тогда
		Сообщить("Заполните тарифные ставки для должности "+Должность);
	КонецЕсли;
	Возврат Результат.Выгрузить();
конецфункции
//Функция ПроверитьПодрАкция(Аптека)
//		запрос=новый запрос;
//		запрос.УстановитьПараметр("Дата",Объект.ДатаС);
//		запрос.УстановитьПараметр("Аптека",Аптека);
//		запрос.Текст="ВЫБРАТЬ
//		             |	АкцииПоАптекамСрезПоследних.Акция КАК Акция
//		             |ИЗ
//		             |	РегистрСведений.АкцииПоАптекам.СрезПоследних(&Дата, Аптека = &Аптека) КАК АкцииПоАптекамСрезПоследних";
//		Результат=запрос.Выполнить().Выгрузить();
//		Если Результат.Количество()>0 тогда
//			Акция=Результат[0].Акция;
//		иначе
//			Акция=Справочники.РазрядыКатегорииДолжностей.ПустаяСсылка();
//		конецесли;
//		Возврат Акция;
//конецфункции


&НаСервере
Процедура РассчитатьДокумент() 
	
	////АК Начало Хаустов С.А.  
	////Удержания добавили 27-11-2023
	//Для каждого НоваяСтрока из Объект.ТЧАптека  цикл
	//	НоваяСтрока.Доплата2=0;
	//КонецЦикла;
	//ДозаполнитьТаблицуДаннымиПоУдержаниям();
	////АК Конец Хаустов С.А.	
	
	к=1;
	//ВводФЛ=ПолучитьДанныеПоФЛ(СписокФЛ);
	Для каждого НоваяСтрока из Объект.ТЧАптека  цикл 
		МасФЛ=ПолучитьДанныеПоФЛ(НоваяСтрока.Сотрудник);
		
		Коэффициент=1;
		НормаЧасовМесяц=166;
		Минимум=0;
		Максимум=0;
		СтоимостьДень=0;
		СтоимостьНочногоЧаса=0;
		СтоимостьПраздники=0;
		СтоимостьПраздникиНочь=0;
		ДоплатаЗаКатегорию=0;
		ПремияНочная=0;
		СтоимостьПринятогоЗвонка=0;
		СтоимостьСобраннойУпаковки=0;
		
		запрос=новый запрос;
		запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
		запрос.УстановитьПараметр("Должность",НоваяСтрока.Должность);
		запрос.УстановитьПараметр("КатегорияСотрудник",НоваяСтрока.РазрядКатегория);
		запрос.УстановитьПараметр("КатегорияАптеки",НоваяСтрока.РазрядПодразделение);
		запрос.Текст="ВЫБРАТЬ
		             |	ДПО_ПоказателиПоДолжностямСрезПоследних.Коэффициент КАК Коэффициент,
		             |	ДПО_ПоказателиПоДолжностямСрезПоследних.НормаЧасов КАК НормаЧасов,
		             |	ДПО_ПоказателиПоДолжностямСрезПоследних.Минимум КАК Минимум,
		             |	ДПО_ПоказателиПоДолжностямСрезПоследних.Максимум КАК Максимум,
		             |	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьДиапазонаЧасов1 КАК СтоимостьДиапазонаЧасов1,
		             |	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьНочногоЧаса КАК СтоимостьНочногоЧаса,
		             |	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьПраздники КАК СтоимостьПраздники,
		             |	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьПраздникиНочь КАК СтоимостьПраздникиНочь,
		             |	ДПО_ПоказателиПоДолжностямСрезПоследних.ДоплатаЗаКатегорию КАК ДоплатаЗаКатегорию,
		             |	ДПО_ПоказателиПоДолжностямСрезПоследних.ПремияНочная КАК ПремияНочная,
		             |	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьПринятогоЗвонка КАК СтоимостьПринятогоЗвонка,
		             |	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьСобраннойУпаковки КАК СтоимостьСобраннойУпаковки
		             |ИЗ
		             |	РегистрСведений.ПоказателиПоДолжностям.СрезПоследних(
		             |			&ДатаС,
		             |			КатегорияАптеки = &КатегорияАптеки
		             |				И КатегорияСотрудник = &КатегорияСотрудник
		             |				И Должность = &Должность) КАК ДПО_ПоказателиПоДолжностямСрезПоследних";
		//LMAL 05-07-2023_н
		Результат1=запрос.Выполнить();
		Если Результат1.Пустой() Тогда
			//Сообщить("Заполните Показатели по должностям для Категория сотрудника "+РазрядКатегория+" Категория аптеки "+РазрядПодразделение+" "+НоваяСтрока.Сотрудник);
			Сообщить("Не найдены параметры в настройках Показатели по должностям для: Должность="+НоваяСтрока.Должность+", РазрядКатегория="+НоваяСтрока.РазрядКатегория+", РазрядПодразделение="+НоваяСтрока.РазрядПодразделение+", НаДату="+Объект.ДатаС)
		КонецЕсли;
		РезультатНормативы=Результат1.Выгрузить();
		//LMAL 05-07-2023_к
		Для каждого Эл1 из РезультатНормативы цикл
			Если Эл1.НормаЧасов>0 Тогда
				НормаЧасовМесяц=Эл1.НормаЧасов;
			КонецЕсли;
			Коэффициент=Эл1.Коэффициент;
			Минимум=Эл1.Минимум;
			Максимум=Эл1.Максимум;
			СтоимостьДень=Эл1.СтоимостьДиапазонаЧасов1;
			СтоимостьНочногоЧаса=Эл1.СтоимостьНочногоЧаса;
			СтоимостьПраздники=Эл1.СтоимостьПраздники;
			СтоимостьПраздникиНочь=Эл1.СтоимостьПраздникиНочь;
			ДоплатаЗаКатегорию=Эл1.ДоплатаЗаКатегорию;
			ПремияНочная=Эл1.ПремияНочная;
			СтоимостьПринятогоЗвонка=Эл1.СтоимостьПринятогоЗвонка;
			СтоимостьСобраннойУпаковки=Эл1.СтоимостьСобраннойУпаковки;
		КонецЦикла;
		
		Попытка
			НоваяСтрока.МинимумПоСотруднику=Минимум;
			НоваяСтрока.МаксимумПоСотруднику=Максимум;
			НоваяСтрока.ИтогоБонусов=(МасФЛ[0].БонусЗаЛичнуюВыручку+МасФЛ[0].БонусПоДМ+МасФЛ[0].БонусЗаОптику)*Коэффициент;
			НоваяСтрока.БонусНеДТМ=МасФЛ[0].БонусЗаЛичнуюВыручку*Коэффициент;
			НоваяСтрока.БонусДТМ=МасФЛ[0].БонусПоДМ*Коэффициент;
			НоваяСтрока.БонусЗаОптику=МасФЛ[0].БонусЗаОптику*Коэффициент; 	
			
			НоваяСтрока.КолПринятыхЗвонков=МасФЛ[0].КолПринятыхЗвонков;
			НоваяСтрока.ПремияЗвонки=МасФЛ[0].БонусЗвонки*Коэффициент;
			НоваяСтрока.КолСобранныхУпаковок=МасФЛ[0].КолСобранныхУпаковок;
			НоваяСтрока.ПремияУпаковки=МасФЛ[0].БонусСтрокиЗаказов*Коэффициент;
			////находим пределы  
			//запрос=новый запрос;
			//запрос.УстановитьПараметр("Дата",Объект.ДатаС);
			//запрос.Текст="ВЫБРАТЬ
			//|	ПределыПремийСрезПоследних.ВидПремии КАК ВидПремии,
			//|	ПределыПремийСрезПоследних.ВеличинаПремии КАК ВеличинаПремии
			//|ИЗ
			//|	РегистрСведений.ПределыПремий.СрезПоследних(&Дата, ) КАК ПределыПремийСрезПоследних";
			//РезультатПП=запрос.Выполнить().Выгрузить();
			
			////Для "Продавец-консультант" свой расчет бонусов МУ и Сроки
			//Если НЕ НоваяСтрока.Должность=Справочники.Должности.НайтиПоНаименованию("Продавец-консультант",Истина) Тогда
			//	Отбор = Новый Структура;
			//	Отбор.Вставить("ВидПремии",Перечисления.ВидыПремий.ПремияМаркетинговыеАкции);
			//	МасМаркетинг=РезультатПП.НайтиСтроки(Отбор);
			//	Для каждого Эл из МасМаркетинг цикл
			//		Если МасФЛ[0].БонусМУ<=Эл.ВеличинаПремии тогда
			//			НоваяСтрока.БонусАкции=МасФЛ[0].БонусМУ*Коэффициент;
			//		иначе
			//			НоваяСтрока.БонусАкции=Эл.ВеличинаПремии*Коэффициент;
			//		конецесли;
			//	конеццикла;
			//	Отбор1 = Новый Структура;
			//	Отбор1.Вставить("ВидПремии",Перечисления.ВидыПремий.ПремияСроки);
			//	МасСроки=РезультатПП.НайтиСтроки(Отбор1);
			//	Для каждого Эл из МасСроки цикл
			//		Если МасФЛ[0].БонусСроковые<=Эл.ВеличинаПремии тогда
			//			НоваяСтрока.БонусЗМЗ=МасФЛ[0].БонусСроковые*Коэффициент;
			//		иначе
			//			НоваяСтрока.БонусЗМЗ=Эл.ВеличинаПремии*Коэффициент;
			//		конецесли;
			//	конеццикла; 
			//	
			//Иначе //расчет для "Продавец-консультант"
			НоваяСтрока.БонусАкции=ЗГ_ЗППроцедурыИФункцииСервер.ПолучитьРазмерПремии(МасФЛ[0].СуммаПродажТоваровНаПродвижении,Перечисления.ВидыПремий.ПремияМаркетинговыеАкции2,Объект.ДатаС)*Коэффициент;
			НоваяСтрока.БонусЗМЗ=ЗГ_ЗППроцедурыИФункцииСервер.ПолучитьРазмерПремии(МасФЛ[0].СуммаПродажСрокиИЗМЗ,Перечисления.ВидыПремий.ПремияСроки2,Объект.ДатаС)*Коэффициент;
			
			//КонецЕсли;
			
			
			//Отбор1 = Новый Структура;
			//Отбор1.Вставить("ВидПремии",Перечисления.ВидыПремий.ПремияЛичныеКачества);
			//МасОценка=РезультатПП.НайтиСтроки(Отбор1);
			//Для каждого Эл из МасОценка цикл
			//	Если МасФЛ[0].БонусЗаОценку<=Эл.ВеличинаПремии тогда
			//		НоваяСтрока.БонусОценка=МасФЛ[0].БонусЗаОценку*Коэффициент;
			//	иначе
			//		НоваяСтрока.БонусОценка=Эл.ВеличинаПремии*Коэффициент;
			//	конецесли;
			//конеццикла;
			
			НоваяСтрока.Доплата1=МасФЛ[0].БонусЗаСовмещение*Коэффициент;
			//НоваяСтрока.БонусОценка=МасФЛ[0].БонусЗаОценку;
			
			//LMAL 08-11-2023 Для "Продавец-консультант" расчитываем Праздники
			//Если не продавец-консультант
			//Если НЕ НоваяСтрока.Должность=Справочники.Должности.НайтиПоНаименованию("Продавец-консультант",Истина) Тогда 
			НоваяСтрока.Отработановсего=МасФЛ[0].ВремяДень+МасФЛ[0].ВремяНочь;
			
			ВремяНочь= МасФЛ[0].ВремяНочь-МасФЛ[0].ПраздникиВремяНочь;
			НоваяСтрока.Ночь_Часы=ВремяНочь;
			НоваяСтрока.Ночь_Сумма=ВремяНочь*СтоимостьНочногоЧаса*Коэффициент;
			
			ВремяДень=МасФЛ[0].ВремяДень-МасФЛ[0].ПраздникиВремяДень;
			НоваяСтрока.Оклад0_166_Часы=ВремяДень;
			НоваяСтрока.Оклад0_166Сумма=СтоимостьДень*ВремяДень*Коэффициент;
			
			НоваяСтрока.ПраздникиДеньЧасы=МасФЛ[0].ПраздникиВремяДень;
			НоваяСтрока.ПраздникиДеньСумма=МасФЛ[0].ПраздникиВремяДень*СтоимостьПраздники*Коэффициент; 
			
			НоваяСтрока.ПраздникиНочьЧасы=МасФЛ[0].ПраздникиВремяНочь;
			НоваяСтрока.ПраздникиНочьСумма=МасФЛ[0].ПраздникиВремяНочь*СтоимостьПраздникиНочь*Коэффициент; 
			
			//Премия за категорию не учитывая праздники
			НоваяСтрока.ПремияЗаКатегориюСтоимость=ДоплатаЗаКатегорию;
			НоваяСтрока.ДоплатаЗаКатегорию=ДоплатаЗаКатегорию*ВремяДень*Коэффициент;
			//Премия за ночь не учитывая праздники
			НоваяСтрока.ПремияНочнаяСтоимость=ПремияНочная;
			НоваяСтрока.ПремияНочнаяСумма=ПремияНочная*ВремяНочь*Коэффициент;
			//Если ВремяДень<=Граница2 тогда
			//	НоваяСтрока.Оклад0_166_Часы=ВремяДень-Граница1;
			//	НоваяСтрока.Оклад0_166Сумма=(Значение1*(ВремяДень-Граница1))*Коэффициент;
			//	НоваяСтрока.Оклад2Часы=0;
			//	НоваяСтрока.Оклад2Сумма=0; 
			//	
			//	НоваяСтрока.Оклад3_Часы=0;
			//	НоваяСтрока.Оклад3_Сумма=0;
			//	
			//	
			//Конецесли;
			//Если ВремяДень>=Граница3 и ВремяДень<=Граница4 тогда  
			//	НоваяСтрока.Оклад0_166_Часы=Граница2;
			//	НоваяСтрока.Оклад0_166Сумма=Значение1*Граница2*Коэффициент;
			//	НоваяСтрока.Оклад2Часы=(ВремяДень-Граница3)+1;
			//	НоваяСтрока.Оклад2Сумма=Коэффициент*Значение2*((ВремяДень-Граница3)+1); 
			//	НоваяСтрока.Оклад3_Часы=0;
			//	НоваяСтрока.Оклад3_Сумма=0;
			//Конецесли; 
			//
			//Если ВремяДень>=Граница5 и ВремяДень<=Граница6 тогда  
			//	НоваяСтрока.Оклад0_166_Часы=Граница2;
			//	НоваяСтрока.Оклад0_166Сумма=Значение1*Граница2*Коэффициент;
			//	НоваяСтрока.Оклад2Часы=(Граница4-Граница3)+1;
			//	НоваяСтрока.Оклад2Сумма=Значение2*(Граница4-Граница3+1)*Коэффициент; 
			//	
			//	НоваяСтрока.Оклад3_Часы=(ВремяДень-Граница5)+1;
			//	НоваяСтрока.Оклад3_Сумма=Значение3*((ВремяДень-Граница5)+1)*Коэффициент;
			//Конецесли; 
			//LMAL 12-07-2023_н Доплата  за категорию от нормы часов без повышения
			//ДоплатаЗаКатегорию1=ДоплатаЗаКатегорию*НоваяСтрока.Отработановсего/НормаЧасовМесяц;
			//Если ДоплатаЗаКатегорию1<ДоплатаЗаКатегорию Тогда
			//	НоваяСтрока.ДоплатаЗаКатегорию=ДоплатаЗаКатегорию1*Коэффициент;
			//Иначе
			//	НоваяСтрока.ДоплатаЗаКатегорию=ДоплатаЗаКатегорию*Коэффициент;
			//КонецЕсли;
			//LMAL 12-07-2023_К
			НоваяСтрока.ИтогоЗаОтработанноеВремя=НоваяСтрока.Оклад0_166Сумма+НоваяСтрока.Ночь_Сумма+НоваяСтрока.ПраздникиДеньСумма+НоваяСтрока.ПраздникиНочьСумма;                     
			//Lmal 16-05-2023_Н Убрали доплата1 Бонус за совмещение  из ИтогоДоГраниц и в конце добавляем доплата1
			//НоваяСтрока.ИтогоДоГраниц=НоваяСтрока.ИтогоЗаОтработанноеВремя+НоваяСтрока.ИтогоБонусов+НоваяСтрока.БонусАкции+НоваяСтрока.БонусЗМЗ+НоваяСтрока.БонусОценка+НоваяСтрока.Доплата1+НоваяСтрока.Доплата2;
			//НоваяСтрока.ИтогоДоГраниц=НоваяСтрока.ИтогоЗаОтработанноеВремя+НоваяСтрока.ИтогоБонусов+НоваяСтрока.БонусАкции+НоваяСтрока.БонусЗМЗ+НоваяСтрока.БонусОценка+НоваяСтрока.Доплата2+НоваяСтрока.ДоплатаЗаКатегорию;
			НоваяСтрока.ИтогоДоГраниц=НоваяСтрока.ИтогоЗаОтработанноеВремя+НоваяСтрока.ИтогоБонусов+НоваяСтрока.БонусАкции+НоваяСтрока.БонусЗМЗ+НоваяСтрока.ДоплатаЗаКатегорию
			+НоваяСтрока.ПремияНочнаяСумма+НоваяСтрока.ПремияЗвонки+НоваяСтрока.ПремияУпаковки;
			
			НоваяСтрока.МинимумПоФакту= Минимум*НоваяСтрока.ОтработаноВсего/НормаЧасовМесяц;
			НоваяСтрока.МаксимумПоФакту= Максимум*НоваяСтрока.ОтработаноВсего/НормаЧасовМесяц;
			НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.ИтогоДоГраниц;
			Если  НоваяСтрока.ИтогоДоГраниц<НоваяСтрока.МинимумПоФакту тогда
				НоваяСтрока.ПремияМин=НоваяСтрока.МинимумПоФакту-НоваяСтрока.ВсегоПоРасчету;
				
				НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.МинимумПоФакту;
			КонецЕсли;
			
			
			Если  НоваяСтрока.ИтогоДоГраниц>НоваяСтрока.МаксимумПоФакту тогда
				НоваяСтрока.ПремияМакс=НоваяСтрока.МаксимумПоФакту-НоваяСтрока.ВсегоПоРасчету;
				
				НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.МаксимумПоФакту;
			конецесли;
			//Добавляем Доплата1   и удержания (доплата2)
			НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.ВсегоПоРасчету+НоваяСтрока.Доплата1+НоваяСтрока.Доплата2; 
			//добавил два поля
			//НоваяСтрока.ОкладПоЧасам=НоваяСтрока.ОтработаноВсего*Значение1;
			//НоваяСтрока.ОбщаяПремия=НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.ОкладПоЧасам;
			
			//Lmal 16-05-2023_К
			//lmal 28-09-2023_н Добавил два поля Статус2 ((командировки+такси это бонус за совмещение)+сумма больше 200часов+доплата за категорию) и статус1 (Всего-Статус2) 
			Если Коэффициент=1 Тогда //с коэффициентом 0,85 все во второй статус
				НоваяСтрока.Статус2=0;
				НоваяСтрока.Статус1=НоваяСтрока.ВсегоПоРасчету;
				////22-04-2024 Переносим часть в статус2 кратно переработанному времени больше 200ч. (Оклад3_Часы уже перенесены в Статус2, но не учтено времяНочь)
				//Если НоваяСтрока.Отработановсего>200 Тогда
				//	ВремяПереработки=НоваяСтрока.Отработановсего-200-НоваяСтрока.Оклад3_Часы;//Общее время отрботаное больше 200 часов за вычетом Оклад3_Часы
				//	k3=ВремяПереработки/НоваяСтрока.Отработановсего;
				//	НоваяСтрока.Статус2=НоваяСтрока.Статус2+ОКР(НоваяСтрока.Статус1*k3,0);
				//	НоваяСтрока.Статус1=НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.Статус2;
				//КонецЕсли;
			Иначе
				НоваяСтрока.Статус2=НоваяСтрока.ВсегоПоРасчету;
				НоваяСтрока.Статус1=0;
			КонецЕсли;
			
			//НоваяСтрока.Статус2=НоваяСтрока.Доплата1+НоваяСтрока.Оклад3_Сумма+НоваяСтрока.ДоплатаЗаКатегорию;
			//НоваяСтрока.Статус1=НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.Статус2;
			//lmal 28-09-2023_к
			////////////////////////////////////////////////////////////////////
			//Иначе  //Для продавец-консультант учитываем праздники
			//	НоваяСтрока.Отработановсего=МасФЛ[0].ВремяДень+МасФЛ[0].ВремяНочь;
			//	НоваяСтрока.ПраздникиДеньЧасы=МасФЛ[0].ПраздникиВремяДень;
			//	НоваяСтрока.ПраздникиДеньСумма=МасФЛ[0].ПраздникиВремяДень*Значение1*Коэффициент;  //доплата столько же, в сумме даст двойную оплату
			//	НоваяСтрока.ПраздникиНочьЧасы=МасФЛ[0].ПраздникиВремяНочь;
			//	НоваяСтрока.ПраздникиНочьСумма=МасФЛ[0].ПраздникиВремяНочь*СтоимостьНочногоЧаса*Коэффициент; //доплата столько же, в сумме даст двойную оплату
			//	НоваяСтрока.Ночь_Часы=МасФЛ[0].ВремяНочь;
			//	НоваяСтрока.Ночь_Сумма=НоваяСтрока.Ночь_Часы*СтоимостьНочногоЧаса*Коэффициент;
			//	ВремяДень=МасФЛ[0].ВремяДень;
			//	Если ВремяДень<=Граница2 тогда
			//		НоваяСтрока.Оклад0_166_Часы=ВремяДень-Граница1;
			//		НоваяСтрока.Оклад0_166Сумма=(Значение1*(ВремяДень-Граница1))*Коэффициент;
			//		НоваяСтрока.Оклад2Часы=0;
			//		НоваяСтрока.Оклад2Сумма=0; 
			//		
			//		НоваяСтрока.Оклад3_Часы=0;
			//		НоваяСтрока.Оклад3_Сумма=0;
			//		
			//		
			//	Конецесли;
			//	Если ВремяДень>=Граница3 и ВремяДень<=Граница4 тогда  
			//		НоваяСтрока.Оклад0_166_Часы=Граница2;
			//		НоваяСтрока.Оклад0_166Сумма=Значение1*Граница2*Коэффициент;
			//		НоваяСтрока.Оклад2Часы=(ВремяДень-Граница3)+1;
			//		НоваяСтрока.Оклад2Сумма=Коэффициент*Значение2*((ВремяДень-Граница3)+1); 
			//		НоваяСтрока.Оклад3_Часы=0;
			//		НоваяСтрока.Оклад3_Сумма=0;
			//	Конецесли; 
			//	
			//	Если ВремяДень>=Граница5 и ВремяДень<=Граница6 тогда  
			//		НоваяСтрока.Оклад0_166_Часы=Граница2;
			//		НоваяСтрока.Оклад0_166Сумма=Значение1*Граница2*Коэффициент;
			//		НоваяСтрока.Оклад2Часы=(Граница4-Граница3)+1;
			//		НоваяСтрока.Оклад2Сумма=Значение2*(Граница4-Граница3+1)*Коэффициент; 
			//		
			//		НоваяСтрока.Оклад3_Часы=(ВремяДень-Граница5)+1;
			//		НоваяСтрока.Оклад3_Сумма=Значение3*((ВремяДень-Граница5)+1)*Коэффициент;
			//	Конецесли; 
			//	//LMAL 12-07-2023_н Доплата  за категорию от нормы часов без повышения
			//	ДоплатаЗаКатегорию1=ДоплатаЗаКатегорию*НоваяСтрока.Отработановсего/Объект.НормаЧасовМесяц;
			//	Если ДоплатаЗаКатегорию1<ДоплатаЗаКатегорию Тогда
			//		НоваяСтрока.ДоплатаЗаКатегорию=ДоплатаЗаКатегорию1*Коэффициент;
			//	Иначе
			//		НоваяСтрока.ДоплатаЗаКатегорию=ДоплатаЗаКатегорию*Коэффициент;
			//	КонецЕсли;
			//	//LMAL 12-07-2023_К
			//	НоваяСтрока.ИтогоЗаОтработанноеВремя=НоваяСтрока.Оклад3_Сумма+НоваяСтрока.Оклад2Сумма+НоваяСтрока.Оклад0_166Сумма+НоваяСтрока.Ночь_Сумма;                     
			//	//Lmal 16-05-2023_Н Убрали доплата1 Бонус за совмещение  из ИтогоДоГраниц и в конце добавляем доплата1
			//	//НоваяСтрока.ИтогоДоГраниц=НоваяСтрока.ИтогоЗаОтработанноеВремя+НоваяСтрока.ИтогоБонусов+НоваяСтрока.БонусАкции+НоваяСтрока.БонусЗМЗ+НоваяСтрока.БонусОценка+НоваяСтрока.Доплата1+НоваяСтрока.Доплата2;
			//	НоваяСтрока.ИтогоДоГраниц=НоваяСтрока.ИтогоЗаОтработанноеВремя+НоваяСтрока.ИтогоБонусов+НоваяСтрока.БонусАкции+НоваяСтрока.БонусЗМЗ+НоваяСтрока.БонусОценка+НоваяСтрока.Доплата2+НоваяСтрока.ДоплатаЗаКатегорию+НоваяСтрока.ПраздникиДеньСумма+НоваяСтрока.ПраздникиНочьСумма;
			//	НоваяСтрока.МинимумПоФакту= Минимум*НоваяСтрока.ОтработаноВсего/Объект.НормаЧасовМесяц;
			//	НоваяСтрока.МаксимумПоФакту= Максимум*НоваяСтрока.ОтработаноВсего/Объект.НормаЧасовМесяц;
			//	НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.ИтогоДоГраниц;
			//	Если  НоваяСтрока.ИтогоДоГраниц<НоваяСтрока.МинимумПоФакту тогда
			//		НоваяСтрока.ПремияМин=НоваяСтрока.МинимумПоФакту-НоваяСтрока.ВсегоПоРасчету;
			//		
			//		НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.МинимумПоФакту;
			//	конецесли;
			//	
			//	
			//	Если  НоваяСтрока.ИтогоДоГраниц>НоваяСтрока.МаксимумПоФакту тогда
			//		НоваяСтрока.ПремияМакс=НоваяСтрока.МаксимумПоФакту-НоваяСтрока.ВсегоПоРасчету;
			//		
			//		НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.МаксимумПоФакту;
			//	конецесли;
			//	//Добавляем Доплата1
			//	НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.ВсегоПоРасчету+НоваяСтрока.Доплата1; 
			//	//добавил два поля
			//	НоваяСтрока.ОкладПоЧасам=НоваяСтрока.ОтработаноВсего*Значение1;
			//	НоваяСтрока.ОбщаяПремия=НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.ОкладПоЧасам;
			//	
			//	//Lmal 16-05-2023_К
			//	//НоваяСтрока.Статус2=0; 
			//	//НоваяСтрока.Статус1=НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.Статус2;
			//	Если Коэффициент=1 Тогда //с коэффициентом 0,85 все во второй статус
			//		НоваяСтрока.Статус2=0;
			//		НоваяСтрока.Статус1=НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.Статус2;
			//	Иначе
			//		НоваяСтрока.Статус2=НоваяСтрока.ВсегоПоРасчету;
			//		НоваяСтрока.Статус1=0;
			
			//	КонецЕсли
			//КонецЕсли;//Конец для продавец-консультант учитываем праздники	
		Исключение
		КонецПопытки;
		
	КонецЦикла;
КонецПроцедуры
&НаКлиенте
Процедура Рассчитать(Команда)
	РассчитатьДокумент();
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьТЧСотрудников(ПризнакУволенного)
	// Вставить содержимое обработчика.
	Объект.ТЧАптека.Очистить();
	
	Сотр=ПолучитьСотрудниковПоОсновному();
	//LMAL_05-07-2023, закоментировал эту строку Сотр.Свернуть("ФизическоеЛицо,Подразделение,ТН");
	Для каждого Эл из Сотр  цикл
		запрос=новый запрос;
		запрос.УстановитьПараметр("ФЛ",Эл.ФизическоеЛицо);
		запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
		запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
		запрос.УстановитьПараметр("Истина",Истина);
		//LMAL 14-04-2023 Н_
		запрос.Текст= "ВЫБРАТЬ
		              |	ДанныеПоАптекам.Должность КАК Должность,
		              |	ДанныеПоАптекам.РазрядКатегория КАК РазрядКатегория,
		              |	ДанныеПоАптекам.РазрядПодразделение КАК РазрядПодразделение,
		              |	ДанныеПоАптекам.Подразделение КАК Подразделение,
		              |	ДанныеПоАптекам.ПодразделениеРаботы КАК ПодразделениеРаботы,
		              |	ДанныеПоАптекам.ФизическоеЛицо КАК ФизическоеЛицо,
		              |	ДанныеПоАптекам.Уволенная КАК Уволенная
		              |ПОМЕСТИТЬ ВТ_ВсеДанные
		              |ИЗ
		              |	РегистрСведений.ДанныеПоАптекам КАК ДанныеПоАптекам
		              |ГДЕ
		              |	ДанныеПоАптекам.ФизическоеЛицо = &ФЛ
		              |	И ДанныеПоАптекам.ДатаС = &ДатаС
		              |	И ДанныеПоАптекам.ДатаПо = &ДатаПо";
		Если ПризнакУволенного=истина тогда
			запрос.Текст=запрос.Текст+"
			|	И ДанныеПоАптекам.Уволенная = &Истина";
		конецесли;
		запрос.Текст=запрос.Текст+"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанные.Должность КАК Должность,
		|	ВТ_ВсеДанные.РазрядКатегория КАК РазрядКатегория,
		|	ВТ_ВсеДанные.РазрядПодразделение КАК РазрядПодразделение,
		|	ВТ_ВсеДанные.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ПодразделениеОсновное
		|ИЗ
		|	ВТ_ВсеДанные КАК ВТ_ВсеДанные
		|ГДЕ
		|	ВТ_ВсеДанные.Подразделение = ВТ_ВсеДанные.ПодразделениеРаботы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЕСТЬNULL(ВТ_ПодразделениеОсновное.Должность, ВТ_ВсеДанные.Должность) КАК Должность,
		|	ЕСТЬNULL(ВТ_ПодразделениеОсновное.РазрядКатегория, ВТ_ВсеДанные.РазрядКатегория) КАК РазрядКатегория,
		|	ЕСТЬNULL(ВТ_ПодразделениеОсновное.РазрядПодразделение, ВТ_ВсеДанные.РазрядПодразделение) КАК РазрядПодразделение
		|ИЗ
		|	ВТ_ВсеДанные КАК ВТ_ВсеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодразделениеОсновное КАК ВТ_ПодразделениеОсновное
		|		ПО ВТ_ВсеДанные.ФизическоеЛицо = ВТ_ПодразделениеОсновное.ФизическоеЛицо";
		//LMAL 14-04-2023 К
		РезультатФЛ=запрос.Выполнить().Выгрузить();
		Если ПризнакУволенного=истина и РезультатФЛ.Количество()=0 тогда
			Продолжить;
		конецесли;
		
		НоваяСтрока=Объект.ТЧАптека.Добавить();
		НоваяСтрока.ТН=Эл.ТН;
		НоваяСтрока.ИНН=Эл.ФизическоеЛицо.ИНН;
		НоваяСтрока.Уволенная=Эл.Уволенная;
		//НоваяСтрока.РазрядПодразделение=Эл.РазрядПодразделение;
		//НоваяСтрока.ОсновноеМестоРаботы=истина;
		НоваяСтрока.ОсновнаяАптека=Эл.Подразделение;
		//LMAL 05-07-2023_н Если были дубли то проверяем Подразделение
		Если Эл.Дубли>1 Тогда
			МассивФизЛиц = Новый Массив;
			МассивФизЛиц.Добавить(Эл.ФизическоеЛицо);
			Период=Объект.ДатаПо;
			ОсновныеСотрудники=КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(МассивФизЛиц, Истина,,Период); 
			Для Каждого СтрокаСотрудник Из ОсновныеСотрудники Цикл
				МассивСотрудников1 = Новый Массив;
				МассивСотрудников1.Добавить(СтрокаСотрудник.Сотрудник.ГоловнойСотрудник);
				КадровыеДанные = "Подразделение"; 
				КадровыеДанныеСотрудников1 = КадровыйУчет.КадровыеДанныеСотрудников(Истина, МассивСотрудников1, КадровыеДанные,Период);
				Для Каждого Строка Из КадровыеДанныеСотрудников1 Цикл
					НоваяСтрока.ОсновнаяАптека= Строка.Подразделение;
				КонецЦикла;
			КонецЦикла;	
		КонецЕсли; 
		//LMAL 05-07-2023_К
		//НоваяСтрока.Должность=Справочники.Должности.НайтиПоНаименованию("Фармацевт");
		Для каждого ЭлД из РезультатФЛ цикл
			//LMAL_06-04-2023_Н
			//Должность=ЭлД.Должность;
			//РазрядКатегория=ЭлД.РазрядКатегория;
			//РазрядПодразделение=ЭлД.РазрядПодразделение;
			НоваяСтрока.Должность=ЭлД.Должность;	
			НоваяСтрока.РазрядКатегория=ЭлД.РазрядКатегория;
			НоваяСтрока.РазрядПодразделение=ЭлД.РазрядПодразделение;
		КонецЦикла;
		НоваяСтрока.Сотрудник=Эл.ФизическоеЛицо;
		//НоваяСтрока.Должность=Должность;	
		//НоваяСтрока.РазрядКатегория=РазрядКатегория;
		//НоваяСтрока.РазрядПодразделение=РазрядПодразделение;
		//LMAL_06-04-2023_К
		
	КонецЦикла; 
	
	//АК Начало Хаустов С.А.  
	//Удержания добавили 27-11-2023
	Для каждого НоваяСтрока из Объект.ТЧАптека  цикл
		НоваяСтрока.Доплата2=0;
	КонецЦикла;
	ДозаполнитьТаблицуДаннымиПоУдержаниям();
	//АК Конец Хаустов С.А.
	
	
	Объект.ТЧАптека.Сортировать("Сотрудник");
КонецПроцедуры
&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьТЧСотрудников(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУволенным(Команда)
	// Вставить содержимое обработчика.
	ЗаполнитьТЧСотрудников(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьXML(Команда)
	ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогСохраненияФайла.ПолноеИмяФайла="Сотрудники.XML";
	ДиалогСохраненияФайла.Заголовок = "Выберите файл"; 
	Если ДиалогСохраненияФайла.Выбрать() Тогда 
		ТекДок = Новый ТекстовыйДокумент;
		ТекДок.ДобавитьСтроку(ПолучитьXMLНаСервере());
		ТекДок.Записать(ДиалогСохраненияФайла.ПолноеИмяФайла);
	КонецЕсли;
КонецПроцедуры 
&НаСервере
Функция ПолучитьXMLНаСервере()
	//Выгуржаем  xml_  
	//ПутьКФайлуДляЗаписи="\\10.3.7.12\project\Exchange\OUT\test\1.xml";
	ЗаписьXML = Новый ЗаписьXML;
	//ЗаписьXML.ОткрытьФайл("E:\temp\10\test_data.xml", "UTF-8", Истина); нелья, т.к. в этом случае запись на сервере делает
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьОбъявлениеXML();    
	ЗаписьXML.ЗаписатьНачалоЭлемента("Таблица");
	Таблица1=Объект.ТЧАптека.Выгрузить();
	Для каждого Строка1 из Таблица1 Цикл    
		ЗаписьXML.ЗаписатьНачалоЭлемента("СтрокаТаблицы");// Сотрудник
		//ЗаписьXML.ЗаписатьАтрибут("НомерСтроки", Строка(Строка1.НомерСтроки));
		//ЗаписьXML.ЗаписатьАтрибут("ФИО", Строка(Строка1.Сотрудник));
		//ЗаписьXML.ЗаписатьАтрибут("ИНН", Строка(Строка1.ИНН));
		
		Для Каждого Столбец1 Из Таблица1.Колонки Цикл
			Значение1=Строка1[Таблица1.Колонки.Индекс(Столбец1)]; 
			Если ТипЗнч(Значение1)=Тип("Число") Тогда
				Значение1=Формат(Значение1,"ЧН=; ЧГ=");
			КонецЕсли;
			ЗаписьXML.ЗаписатьАтрибут(Строка(Столбец1.Имя), Строка(Значение1));	
		КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Сотрудник
	КонецЦикла;
	ЗаписьXML.ЗаписатьКонецЭлемента(); // Сотрудники
	СтрокаXML=ЗаписьXML.Закрыть();
	Возврат СтрокаXML;
	//_xml	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика
	Объект.ТЧАптека.Сортировать("Сотрудник");
КонецПроцедуры

//АК Начало Хаустов С.А.

//&НаСервере
//Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
//	
//	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтаФорма);
//	
//КонецПроцедуры

//#Область СтандартныеПодсистемыПодключаемыеКоманды

//&НаКлиенте
//Процедура Подключаемый_ВыполнитьКоманду(Команда)
//	
//	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
//	
//КонецПроцедуры 

//#КонецОбласти

&НаСервере
Процедура ДозаполнитьТаблицуДаннымиПоУдержаниям()
	
		
	//т.к. в данном документе могут быть несколько строк по одному физлицу, то вешаем сумму на первое найденное физлицо
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗГ_УдержанияСотрудниковОрганизацииОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЗГ_УдержанияСотрудниковОрганизацииОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ЗГ_УдержанияСотрудниковОрганизации.Остатки(&КонецПериода, ФизическоеЛицо В (&СписокФизическихЛиц)) КАК ЗГ_УдержанияСотрудниковОрганизацииОстатки";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.ДатаПо) + 1);
	Запрос.УстановитьПараметр("СписокФизическихЛиц", Объект.ТЧАптека.Выгрузить().ВыгрузитьКолонку("Сотрудник"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ДолжностьЗавед=Справочники.Должности.НайтиПоНаименованию("Заведующий аптекой");
	
	Пока Выборка.Следующий() Цикл
		
		//Проверяем на Заведующих чтобы по ним не брать удержания
		НеВыгружать=Ложь;
		
		МассивФизЛица=Новый Массив;
		МассивФизЛица.Добавить(Выборка.ФизическоеЛицо);
		КадровыеДанные = "Должность,РазрядКатегория,ВидЗанятости";
		ОсновныеСотрудникиФизЛица=КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(МассивФизЛица, Истина, , Объект.ДатаС);
		МассивСотрудников=ОсновныеСотрудникиФизЛица.ВыгрузитьКолонку("Сотрудник");
		
		КадровыеДанныеСотрудников = КадровыйУчет.КадровыеДанныеСотрудников(Истина, МассивСотрудников, КадровыеДанные, Объект.ДатаС);
		Для каждого сотр1 ИЗ КадровыеДанныеСотрудников Цикл
			Если Сотр1.ВидЗанятости=Перечисления.ВидыЗанятости.ОсновноеМестоРаботы И Сотр1.Должность=ДолжностьЗавед Тогда
				НеВыгружать=Истина;
			КонецЕсли
		КонецЦикла;

		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Сотрудник", Выборка.ФизическоеЛицо);
		
		НайденныеСтроки = Объект.ТЧАптека.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 И НЕ НеВыгружать Тогда
			НайденныеСтроки[0].Доплата2 = - Выборка.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧАптекаДоплата2ПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТЧАптека.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ТекущиеДанные.ИтогоДоГраниц = ТекущиеДанные.ИтогоЗаОтработанноеВремя + ТекущиеДанные.ИтогоБонусов + ТекущиеДанные.БонусАкции + ТекущиеДанные.БонусЗМЗ
		+ ТекущиеДанные.БонусОценка + ТекущиеДанные.Доплата1 + ТекущиеДанные.Доплата2;
		
		ТекущиеДанные.ВсегоПоРасчету = ТекущиеДанные.ИтогоДоГраниц;
		
		Если  ТекущиеДанные.ИтогоДоГраниц < ТекущиеДанные.МинимумПоФакту Тогда
			
			ТекущиеДанные.ПремияМин = ТекущиеДанные.МинимумПоФакту - ТекущиеДанные.ВсегоПоРасчету;			
			ТекущиеДанные.ВсегоПоРасчету = ТекущиеДанные.МинимумПоФакту;
			
		КонецЕсли;
		
		
		Если ТекущиеДанные.ИтогоДоГраниц > ТекущиеДанные.МаксимумПоФакту Тогда
			
			ТекущиеДанные.ПремияМакс = ТекущиеДанные.МаксимумПоФакту - ТекущиеДанные.ВсегоПоРасчету;			
			ТекущиеДанные.ВсегоПоРасчету = ТекущиеДанные.МаксимумПоФакту;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаДублейНаСервере()
	
	Если ОтборДублейУстановлен Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДанныеТабличнойЧасти.Сотрудник КАК Сотрудник,
		|	1 КАК Количество
		|ПОМЕСТИТЬ ВТ_ДанныеТабличнойЧасти
		|ИЗ
		|	&ДанныеТабличнойЧасти КАК ДанныеТабличнойЧасти
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеТабличнойЧасти.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_ДанныеТабличнойЧасти.Количество) КАК Количество
		|ИЗ
		|	ВТ_ДанныеТабличнойЧасти КАК ВТ_ДанныеТабличнойЧасти
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДанныеТабличнойЧасти.Сотрудник
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВТ_ДанныеТабличнойЧасти.Количество) > 1";
		
		Запрос.УстановитьПараметр("ДанныеТабличнойЧасти", Объект.ТЧАптека.Выгрузить());
		
		Результат = Запрос.Выполнить();
		МассивФизическихЛиц = Результат.Выгрузить().ВыгрузитьКолонку("Сотрудник");
		//Для каждого ФизЛицо из МассивФизическихЛиц Цикл	
		//	//Красим поля	
		//Элемент = УсловноеОформление.Элементы.Добавить();
		//
		//ПолеЭлемента1 = Элемент.Поля.Элементы.Добавить();
		//ПолеЭлемента1.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТЧАптекаСотрудник.Имя);
		
		//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ТЧАптека.Сотрудник");
		//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//ОтборЭлемента.ПравоеЗначение =ФизЛицо; //Справочники.Должности.НайтиПоНаименованию("Горничная",истина);
		//Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона",Новый Цвет(250,0,0));
		//КонецЦикла;	
		Для каждого Строка1 из Объект.ТЧАптека Цикл
			Если НЕ МассивФизическихЛиц.Найти(Строка1.Сотрудник)=Неопределено Тогда
				Строка1.ЭлементВыбран=Истина;
			Иначе
				Строка1.ЭлементВыбран=Ложь;
			КонецЕсли;
		КонецЦикла;
		СтруктураФ=Новый ФиксированнаяСтруктура("ЭлементВыбран", Истина);
		Элементы.ТЧАптека.ОтборСтрок =СтруктураФ;
	Иначе
		
		Элементы.ТЧАптека.ОтборСтрок = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаДублей(Команда)
	
	ОтборДублейУстановлен = НЕ ОтборДублейУстановлен; 
	
	ПроверкаДублейНаСервере();
	
	Элементы.ТЧАптекаПроверкаДублей.Заголовок = ?(ОтборДублейУстановлен, "Отключить отбор дублей", "Показать дубли");
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьПоАптекамНаСервере(ОсновнаяАптека)
	//Разбиваем файл на аптеки и выкладываем в папки
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Аптека_НачислениеЗарплатыТЧАптека.Ссылка КАК Ссылка,
	|	Аптека_НачислениеЗарплатыТЧАптека.НомерСтроки КАК НомерСтроки,
	|	Аптека_НачислениеЗарплатыТЧАптека.Сотрудник КАК Сотрудник,
	|	Аптека_НачислениеЗарплатыТЧАптека.Должность КАК Должность,
	|	Аптека_НачислениеЗарплатыТЧАптека.РазрядКатегория КАК РазрядКатегория,
	|	Аптека_НачислениеЗарплатыТЧАптека.РазрядПодразделение КАК РазрядПодразделение,
	|	Аптека_НачислениеЗарплатыТЧАптека.МинимумПоСотруднику КАК МинимумПоСотруднику,
	|	Аптека_НачислениеЗарплатыТЧАптека.МаксимумПоСотруднику КАК МаксимумПоСотруднику,
	|	Аптека_НачислениеЗарплатыТЧАптека.ВсегоПоРасчету КАК ВсегоПоРасчету,
	|	Аптека_НачислениеЗарплатыТЧАптека.МинимумПоФакту КАК МинимумПоФакту,
	|	Аптека_НачислениеЗарплатыТЧАптека.МаксимумПоФакту КАК МаксимумПоФакту,
	|	Аптека_НачислениеЗарплатыТЧАптека.ИтогоДоГраниц КАК ИтогоДоГраниц,
	|	Аптека_НачислениеЗарплатыТЧАптека.ОтработаноВсего КАК ОтработаноВсего,
	|	Аптека_НачислениеЗарплатыТЧАптека.ИтогоЗаОтработанноеВремя КАК ИтогоЗаОтработанноеВремя,
	|	Аптека_НачислениеЗарплатыТЧАптека.Минимум КАК Минимум,
	|	Аптека_НачислениеЗарплатыТЧАптека.Оклад0_166_Часы КАК Оклад0_166_Часы,
	|	Аптека_НачислениеЗарплатыТЧАптека.Оклад0_166Сумма КАК Оклад0_166Сумма,
	|	Аптека_НачислениеЗарплатыТЧАптека.Оклад2Часы КАК Оклад2Часы,
	|	Аптека_НачислениеЗарплатыТЧАптека.Оклад2Сумма КАК Оклад2Сумма,
	|	Аптека_НачислениеЗарплатыТЧАптека.Оклад3_Часы КАК Оклад3_Часы,
	|	Аптека_НачислениеЗарплатыТЧАптека.Оклад3_Сумма КАК Оклад3_Сумма,
	|	Аптека_НачислениеЗарплатыТЧАптека.Ночь_Часы КАК Ночь_Часы,
	|	Аптека_НачислениеЗарплатыТЧАптека.Ночь_Сумма КАК Ночь_Сумма,
	|	Аптека_НачислениеЗарплатыТЧАптека.ИтогоБонусов КАК ИтогоБонусов,
	|	Аптека_НачислениеЗарплатыТЧАптека.БонусНеДТМ КАК БонусНеДТМ,
	|	Аптека_НачислениеЗарплатыТЧАптека.БонусДТМ КАК БонусДТМ,
	|	Аптека_НачислениеЗарплатыТЧАптека.БонусАкции КАК БонусАкции,
	|	Аптека_НачислениеЗарплатыТЧАптека.БонусЗМЗ КАК БонусЗМЗ,
	|	Аптека_НачислениеЗарплатыТЧАптека.БонусОценка КАК БонусОценка,
	|	Аптека_НачислениеЗарплатыТЧАптека.Доплата1 КАК Доплата1,
	|	Аптека_НачислениеЗарплатыТЧАптека.Доплата2 КАК Доплата2,
	|	Аптека_НачислениеЗарплатыТЧАптека.ПремияМин КАК ПремияМин,
	|	Аптека_НачислениеЗарплатыТЧАптека.ПремияМакс КАК ПремияМакс,
	|	Аптека_НачислениеЗарплатыТЧАптека.ОсновнаяАптека КАК ОсновнаяАптека,
	|	Аптека_НачислениеЗарплатыТЧАптека.ТН КАК ТН,
	|	Аптека_НачислениеЗарплатыТЧАптека.ИНН КАК ИНН,
	|	Аптека_НачислениеЗарплатыТЧАптека.Уволенная КАК Уволенная,
	|	Аптека_НачислениеЗарплатыТЧАптека.ОкладПоЧасам КАК ОкладПоЧасам,
	|	Аптека_НачислениеЗарплатыТЧАптека.ОбщаяПремия КАК ОбщаяПремия,
	|	Аптека_НачислениеЗарплатыТЧАптека.ДоплатаЗаКатегорию КАК ДоплатаЗаКатегорию,
	|	Аптека_НачислениеЗарплатыТЧАптека.Статус1 КАК Статус1,
	|	Аптека_НачислениеЗарплатыТЧАптека.Статус2 КАК Статус2,
	|	Аптека_НачислениеЗарплатыТЧАптека.ПраздникиДеньЧасы КАК ПраздникиДеньЧасы,
	|	Аптека_НачислениеЗарплатыТЧАптека.ПраздникиДеньСумма КАК ПраздникиДеньСумма,
	|	Аптека_НачислениеЗарплатыТЧАптека.ПраздникиНочьЧасы КАК ПраздникиНочьЧасы,
	|	Аптека_НачислениеЗарплатыТЧАптека.ПраздникиНочьСумма КАК ПраздникиНочьСумма,
	|	Аптека_НачислениеЗарплатыТЧАптека.ЭлементВыбран КАК ЭлементВыбран,
	|	Аптека_НачислениеЗарплатыТЧАптека.Сотрудник.Наименование КАК СотрудникНаименование
	|ИЗ
	|	Документ.Аптека_НачислениеЗарплаты.ТЧАптека КАК Аптека_НачислениеЗарплатыТЧАптека
	|ГДЕ
	|	Аптека_НачислениеЗарплатыТЧАптека.Ссылка = &Ссылка
	|	И Аптека_НачислениеЗарплатыТЧАптека.ОсновнаяАптека = &ОсновнаяАптека
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникНаименование";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ОсновнаяАптека", ОсновнаяАптека);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	//Пока ВыборкаОсновнаяАптека.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаОсновнаяАптека 
	//	ОсновнаяАптека=ВыборкаОсновнаяАптека.ВыборкаОсновнаяАптека;
	МассивСотр=Новый Массив;
	//ВыборкаДетальныеЗаписи = ВыборкаОсновнаяАптека.Выбрать();
	k=1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Стр=Новый Структура;
		Стр.Вставить("НомерСтроки",k);
		k=k+1;
		Стр.Вставить("Сотрудник",ВыборкаДетальныеЗаписи.Сотрудник);
		Стр.Вставить("Должность",ВыборкаДетальныеЗаписи.Должность);
		Стр.Вставить("РазрядКатегория",ВыборкаДетальныеЗаписи.РазрядКатегория);
		//Стр.Вставить("РазрядПодразделение",ВыборкаДетальныеЗаписи.РазрядПодразделение);
		Стр.Вставить("Статус1",ВыборкаДетальныеЗаписи.Статус1);
		Стр.Вставить("Статус2",ВыборкаДетальныеЗаписи.Статус2);
		Стр.Вставить("МинимумПоСотруднику",ВыборкаДетальныеЗаписи.МинимумПоСотруднику);
		Стр.Вставить("МинимумПоФакту",ВыборкаДетальныеЗаписи.МинимумПоФакту);
		Стр.Вставить("МаксимумПоСотруднику",ВыборкаДетальныеЗаписи.МаксимумПоСотруднику);
		Стр.Вставить("МаксимумПоФакту",ВыборкаДетальныеЗаписи.МаксимумПоФакту);
		Стр.Вставить("ВсегоПоРасчету",ВыборкаДетальныеЗаписи.ВсегоПоРасчету);
		Стр.Вставить("ИтогоДоГраниц",ВыборкаДетальныеЗаписи.ИтогоДоГраниц);
		Стр.Вставить("ОтработаноВсего",ВыборкаДетальныеЗаписи.ОтработаноВсего);
		Стр.Вставить("ИтогоЗаОтработанноеВремя",ВыборкаДетальныеЗаписи.ИтогоЗаОтработанноеВремя);
		Стр.Вставить("Оклад0_166_Часы",ВыборкаДетальныеЗаписи.Оклад0_166_Часы);
		Стр.Вставить("Оклад0_166Сумма",ВыборкаДетальныеЗаписи.Оклад0_166Сумма);
		Стр.Вставить("Оклад2Часы",ВыборкаДетальныеЗаписи.Оклад2Часы);
		Стр.Вставить("Оклад2Сумма",ВыборкаДетальныеЗаписи.Оклад2Сумма);
		Стр.Вставить("Оклад3_Часы",ВыборкаДетальныеЗаписи.Оклад3_Часы);
		Стр.Вставить("Оклад3_Сумма",ВыборкаДетальныеЗаписи.Оклад3_Сумма);
		Стр.Вставить("Ночь_Часы",ВыборкаДетальныеЗаписи.Ночь_Часы);
		Стр.Вставить("Ночь_Сумма",ВыборкаДетальныеЗаписи.Ночь_Сумма);
		Стр.Вставить("ИтогоБонусов",ВыборкаДетальныеЗаписи.ИтогоБонусов);
		Стр.Вставить("БонусНеДТМ",ВыборкаДетальныеЗаписи.БонусНеДТМ);
		Стр.Вставить("БонусДТМ",ВыборкаДетальныеЗаписи.БонусДТМ);
		Стр.Вставить("БонусАкции",ВыборкаДетальныеЗаписи.БонусАкции);
		Стр.Вставить("БонусЗМЗ",ВыборкаДетальныеЗаписи.БонусЗМЗ);
		Стр.Вставить("БонусОценка",ВыборкаДетальныеЗаписи.БонусОценка);
		Стр.Вставить("Доплата1",ВыборкаДетальныеЗаписи.Доплата1);
		Стр.Вставить("Доплата2",ВыборкаДетальныеЗаписи.Доплата2);
		Стр.Вставить("ПремияМин",ВыборкаДетальныеЗаписи.ПремияМин);
		Стр.Вставить("ПремияМакс",ВыборкаДетальныеЗаписи.ПремияМакс);
		Стр.Вставить("ОсновнаяАптека",ВыборкаДетальныеЗаписи.ОсновнаяАптека);
		Стр.Вставить("ТН",ВыборкаДетальныеЗаписи.ТН);
		Стр.Вставить("ИНН",ВыборкаДетальныеЗаписи.ИНН);
		Стр.Вставить("Уволенная",ВыборкаДетальныеЗаписи.Уволенная);
		Стр.Вставить("ОкладПоЧасам",ВыборкаДетальныеЗаписи.ОкладПоЧасам);
		Стр.Вставить("ОбщаяПремия",ВыборкаДетальныеЗаписи.ОбщаяПремия);
		Стр.Вставить("ДоплатаЗаКатегорию",ВыборкаДетальныеЗаписи.ДоплатаЗаКатегорию);
		Стр.Вставить("ПраздникиДеньЧасы",ВыборкаДетальныеЗаписи.ПраздникиДеньЧасы);
		Стр.Вставить("ПраздникиДеньСумма",ВыборкаДетальныеЗаписи.ПраздникиДеньСумма);
		Стр.Вставить("ПраздникиНочьЧасы",ВыборкаДетальныеЗаписи.ПраздникиНочьЧасы);
		Стр.Вставить("ПраздникиНочьСумма",ВыборкаДетальныеЗаписи.ПраздникиНочьСумма);
		МассивСотр.Добавить(Стр);
		
	КонецЦикла;
	Возврат МассивСотр;
	//ВыгрузитьТЗвФайл(МассивСотр);
	//КонецЦикла;
КонецФункции

&НаКлиенте
//Разбиваем файл на аптеки и выкладываем в папки
Процедура ВыгрузитьПоАптекам(Команда)
	СписокАптек=ПолучитьСписокАптек();
	Для Каждого Ап ИЗ СписокАптек Цикл
		Мас=ВыгрузитьПоАптекамНаСервере(Ап);
		ВыгрузитьТЗвФайл(Мас);
	КонецЦикла;
	//ВыгрузитьПоАптекамНаСервере();
КонецПроцедуры
&НаСервере
Функция ПолучитьСписокАптек()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Аптека_НачислениеЗарплатыТЧАптека.ОсновнаяАптека КАК ОсновнаяАптека,
	|	Аптека_НачислениеЗарплатыТЧАптека.ОсновнаяАптека.Код КАК ОсновнаяАптекаКод,
	|	Аптека_НачислениеЗарплатыТЧАптека.ОсновнаяАптека.Наименование КАК ОсновнаяАптекаНаименование
	|ИЗ
	|	Документ.Аптека_НачислениеЗарплаты.ТЧАптека КАК Аптека_НачислениеЗарплатыТЧАптека
	|ГДЕ
	|	Аптека_НачислениеЗарплатыТЧАптека.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОсновнаяАптекаКод";
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса.ВыгрузитьКолонку("ОсновнаяАптека");
	
	
КонецФункции
&НаКлиенте
Процедура ВыгрузитьТЗвФайл(Массив1)
	//ПолучитьТаблицу();
	//OpenOffice Calc///////////////////////////////////////////////////////////////////////////
	Попытка
		ServiceManager = Новый COMОбъект("com.sun.star.ServiceManager");
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки() + Символы.ПС + "программа LibreOffice не установлена на данном компьютере! Причина может быть связана с незарегистрированными в системе компонентами — comcntr.dll";
		Сообщение.Сообщить();
		Возврат;
	КонецПопытки;
	Desktop = ServiceManager.createInstance("com.sun.star.frame.Desktop");
	Свойства = ServiceManager.Bridge_GetStruct("com.sun.star.beans.PropertyValue");
	Свойства.Name = "AsTemplate";
	Свойства.Value = Истина;
	Args = Новый COMSafeArray("VT_VARIANT", 3);
	Args.SetValue(0, Свойства);
	Свойства1 = ServiceManager.Bridge_GetStruct("com.sun.star.beans.PropertyValue");
	Свойства1.Name = "Hidden";
	Свойства1.Value = Истина;
	Args.SetValue(1, Свойства1);
	Document = Desktop.LoadComponentFromURL("private:factory/scalc", "_blank", 0, Args);
	
	Sheets = Document.getSheets();
	Sheet = Sheets.getByIndex(0);
	мИтКол = 0;
	Строка1=Массив1[0];
	Для каждого эл из Строка1 Цикл
		Sheet.getCellByPosition(мИтКол,0).setString(эл.Ключ);
		мИтКол = мИтКол + 1;
	КонецЦикла;
	ВсегоСтрок = Массив1.Количество();
	ВсегоКолонок = Строка1.Количество();
	МассивКОМ = Новый COMSafeArray("VT_VARIANT", ВсегоСтрок,ВсегоКолонок);
	иткол = 0;
	итстр = 0;
	
	Для каждого стр из Массив1 Цикл
		Для каждого кол из стр Цикл
			стрРез = СокрЛП(кол.Значение);
			МассивКОМ.SetValue(итстр,иткол,стрРез);
			иткол = иткол+1;
		КонецЦикла;
		иткол = 0;
		итстр = ?(итстр=ВсегоСтрок,0,итстр+1);
	КонецЦикла;
	begCol = 0;
	begRow = 1;
	endCol = ВсегоКолонок-1;
	endRow = ВсегоСтрок;
	Range = Sheet.getCellRangeByPosition(begCol, begRow, endCol, endRow);
	Range.setDataArray(МассивКОМ);
	
	НомерАП=ПолучитьНомерАП(Массив1[0].ОсновнаяАптека);
	
	ПутьКФайлу="\\10.3.7.14\zp_a"+НомерАП;
	Файл = Новый Файл(ПутьКФайлу);
	Если НЕ Файл.Существует() тогда
		Сообщить(Строка(Массив1[0].ОсновнаяАптека)+" Не удалось записать в папку: "+ПутьКФайлу);
		Возврат;
	КонецЕсли;
	ИмяФайла="\ЗП_АП"+НомерАП+"_период_"+Формат(Год(Объект.ДатаС),"ЧГ=")+"-"+Месяц(Объект.ДатаС)+"_"+Формат(ТекущаяДата(),"ДФ=yyyy-MM-dd ЧЧ:мм:сс")+".xls";
	Document.storeToURL(ПривестиФайлКУРЛ(ПутьКФайлу),Args);
	
	Свойства2 = ServiceManager.Bridge_GetStruct("com.sun.star.beans.PropertyValue");
	Свойства2.Name = "FilterName";
	Свойства2.Value = "MS Excel 97";
	Args.SetValue(2,Свойства2);
	
	
КонецПроцедуры
Функция ПривестиФайлКУРЛ(ПутьКФайлу)
	
	ПутьКФайлу = СтрЗаменить(ПутьКФайлу," ","%20");
	ПутьКФайлу = СтрЗаменить(ПутьКФайлу,"\","/");
	Возврат "file:/" + "/localhost/" + ПутьКФайлу;
	
Конецфункции  
&НаСервере
Функция ПолучитьНомерАП(Ссылка)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство КАК Свойство,
	|	ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК Значение
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
	|ГДЕ
	|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка = &Ссылка
	|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Наименование = &Свойство";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Свойство", "Сокращенное наименование (Подразделения)");	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	НомерАП="";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если СтрДлина(ВыборкаДетальныеЗаписи.Значение)=4 Тогда
			НомерАП=Прав(ВыборкаДетальныеЗаписи.Значение,2);
		КонецЕсли
	КонецЦикла;
	Возврат НомерАП;
КонецФункции



//АК Конец Хаустов С.А.

