Функция ПолучитьДанныеПоФЛ(СписокФЛ)
	запрос=новый запрос;
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);  
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("ФизЛицо",СписокФЛ);
	запрос.Текст="ВЫБРАТЬ
	             |	СУММА(ДанныеПоАптекам.ВремяДень) КАК ВремяДень,
	             |	СУММА(ДанныеПоАптекам.ВремяНочь) КАК ВремяНочь,
				 |	СУММА(ДанныеПоАптекам.ВыходныеВремяДень) КАК ВыходныеВремяДень,
	             |	СУММА(ДанныеПоАптекам.ПраздникиВремяДень) КАК ПраздникиВремяДень,
	             |	СУММА(ДанныеПоАптекам.ПраздникиВремяНочь) КАК ПраздникиВремяНочь,
	             |	СУММА(ДанныеПоАптекам.СуммаУслугВрача) КАК СуммаУслугВрача,
	             |	СУММА(ДанныеПоАптекам.БонусЗаУслугиВрача) КАК БонусЗаУслугиВрача,
	             |	СУММА(ДанныеПоАптекам.СуммаОчковыеЛинзы) КАК СуммаОчковыеЛинзы,
	             |	СУММА(ДанныеПоАптекам.БонусЗаОчковыеЛинзы) КАК БонусЗаОчковыеЛинзы,
	             |	ДанныеПоАптекам.ФизическоеЛицо КАК ФизическоеЛицо
	             |ИЗ
	             |	РегистрСведений.ДанныеПоАптекам КАК ДанныеПоАптекам
	             |ГДЕ
	             |	ДанныеПоАптекам.ФизическоеЛицо В(&ФизЛицо)
	             |	И ДанныеПоАптекам.ДатаС МЕЖДУ &ДатаС И &ДатаПо
	             |	И ДанныеПоАптекам.ДатаПо МЕЖДУ &ДатаС И &ДатаПо
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ДанныеПоАптекам.ФизическоеЛицо,
	             |	ДанныеПоАптекам.БонусЗвонки,
	             |	ДанныеПоАптекам.БонусСтрокиЗаказов";
	//|	ДанныеПоАптекам.РазрядКатегория,
	//|	ДанныеПоАптекам.РазрядПодразделение";
	РезультатпоФЛ=запрос.Выполнить().Выгрузить();
	Возврат РезультатпоФЛ;
конецфункции
&НаСервере
Функция ПолучитьСотрудниковПоОсновному()
	//проверяем сотрудников,по которым уже выполнен расчет
	запрос=новый запрос;
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("Подразделение",Объект.Подразделение);
	запрос.Текст="ВЫБРАТЬ
	|	НачисленияЗППоАптекам.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.НачисленияЗППоАптекам КАК НачисленияЗППоАптекам
	|ГДЕ
	|	НачисленияЗППоАптекам.Период МЕЖДУ &ДатаС И &ДатаПо";
	Если ЗначениеЗаполнено(Объект.Подразделение) тогда
		запрос.Текст=запрос.Текст+"
		|	И НачисленияЗППоАптекам.Подразделение = &Подразделение";
	конецесли;
	РезультатПрош=запрос.Выполнить().Выгрузить();
	МасФЛ=РезультатПрош.ВыгрузитьКолонку("ФизическоеЛицо");
	запрос=новый запрос;
	запрос.УстановитьПараметр("Подразделение",Объект.Подразделение);
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("ФЛ",МасФЛ);
	запрос.УстановитьПараметр("Завершено",Перечисления.ВидыСтатусов.Завершено);
	Запрос.УстановитьПараметр("ПодразделениеРаботы",справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Аптечный отдел",истина));
	Запрос.УстановитьПараметр("Должность",справочники.Должности.НайтиПоНаименованию("Врач-офтальмолог",истина));
	//LMAL_05-07-2023Н делают группировку по ФизическоеЛицо,ТН, т.к. есть переводы сотрудников в середине месяца, поэтому создаются дубли строк.
	запрос.Текст="ВЫБРАТЬ
	             |	ДанныеПоАптекам.Подразделение КАК Подразделение,
	             |	ДанныеПоАптекам.ФизическоеЛицо КАК ФизическоеЛицо,
	             |	ДанныеПоАптекам.Сотрудник.Код КАК ТН
	             |ПОМЕСТИТЬ ВТ_Все
	             |ИЗ
	             |	РегистрСведений.ДанныеПоАптекам КАК ДанныеПоАптекам
	             |ГДЕ
	             |	ДанныеПоАптекам.ДатаС МЕЖДУ &ДатаС И &ДатаПо
	             |	И ДанныеПоАптекам.ДатаПо МЕЖДУ &ДатаС И &ДатаПо
	             |	И НЕ ДанныеПоАптекам.ФизическоеЛицо В (&ФЛ)
	             |	И ДанныеПоАптекам.Статус = &Завершено
				 |  И ДанныеПоАптекам.Должность=&Должность
				 |	И ДанныеПоАптекам.ПодразделениеРаботы В ИЕРАРХИИ(&ПодразделениеРаботы)";
	Если ЗначениеЗаполнено(Объект.Подразделение)тогда
		запрос.Текст=запрос.Текст+"
		|	И ДанныеПоАптекам.Подразделение = &Подразделение";
	КонецЕсли;
		
	запрос.Текст=запрос.Текст+"
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоАптекам.ФизическоеЛицо,
	|	ДанныеПоАптекам.Сотрудник.Код,
	|	ДанныеПоАптекам.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_Все.Подразделение) КАК Подразделение,
	|	ВТ_Все.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТ_Все.ТН КАК ТН,
	|	КОЛИЧЕСТВО(ВТ_Все.Подразделение) КАК Дубли
	|ИЗ
	|	ВТ_Все КАК ВТ_Все
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Все.ФизическоеЛицо,
	|	ВТ_Все.ТН";
	
	
	
	//LMAL_05-07-2023К
	ТаблицаСотрудников=запрос.Выполнить().Выгрузить();
	Возврат ТаблицаСотрудников;
конецфункции 
&НаСервере
Функция ПолучитьПараметры()
	Возврат КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();	
КонецФункции
Функция ПолучитьНормативы()
	запрос=новый запрос;
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
	запрос.Текст="ВЫБРАТЬ
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.НормаЧасов КАК НормаЧасов,
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.Минимум КАК Минимум,
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.Максимум КАК Максимум,
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьНочногоЧаса КАК СтоимостьНочногоЧаса,
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.Коэффициент КАК Коэффициент
	|ИЗ
	|	РегистрСведений.ПоказателиПоДолжностям.СрезПоследних(&ДатаС, ) КАК ДПО_ПоказателиПоДолжностямСрезПоследних";
	РезультатНормативы=запрос.Выполнить().Выгрузить();
	
	Возврат РезультатНормативы;
конецфункции
&НаСервере
Функция ПолучитьГраницыПоДолжности(Должность)
	запрос=новый запрос;
	запрос.УстановитьПараметр("Должность",Должность);
	запрос.Текст="ВЫБРАТЬ
	|	ТарифныеСтавки.ДиапазонС КАК ДиапазонС,
	|	ТарифныеСтавки.ДиапазонПо КАК ДиапазонПо,
	|	ТарифныеСтавки.Значение КАК Значение
	|ИЗ
	|	Справочник.ТарифныеСтавки КАК ТарифныеСтавки
	|ГДЕ
	|	ТарифныеСтавки.Должность = &Должность
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДиапазонС";
	Результат=запрос.Выполнить();//.Выгрузить();
	Если Результат.Пустой() Тогда
		Сообщить("Заполните тарифные ставки для должности "+Должность);
	КонецЕсли;
	Возврат Результат.Выгрузить();
конецфункции
//Функция ПроверитьПодрАкция(Аптека)
//		запрос=новый запрос;
//		запрос.УстановитьПараметр("Дата",Объект.ДатаС);
//		запрос.УстановитьПараметр("Аптека",Аптека);
//		запрос.Текст="ВЫБРАТЬ
//		             |	АкцииПоАптекамСрезПоследних.Акция КАК Акция
//		             |ИЗ
//		             |	РегистрСведений.АкцииПоАптекам.СрезПоследних(&Дата, Аптека = &Аптека) КАК АкцииПоАптекамСрезПоследних";
//		Результат=запрос.Выполнить().Выгрузить();
//		Если Результат.Количество()>0 тогда
//			Акция=Результат[0].Акция;
//		иначе
//			Акция=Справочники.РазрядыКатегорииДолжностей.ПустаяСсылка();
//		конецесли;
//		Возврат Акция;
//конецфункции


&НаСервере
Процедура РассчитатьДокумент() 
		
	//АК Начало Хаустов С.А.  
	//Удержания добавили 27-11-2023
	//!!!!!!!!!!!!!!!!!!!!!!!!!!ДозаполнитьТаблицуДаннымиПоУдержаниям();
	//АК Конец Хаустов С.А.	
	
	к=1;
	//ВводФЛ=ПолучитьДанныеПоФЛ(СписокФЛ);
	Для каждого НоваяСтрока из Объект.ТЧАптека  цикл 
		МасФЛ=ПолучитьДанныеПоФЛ(НоваяСтрока.Сотрудник);
		//РазрядКатегория=МасФЛ[0].РазрядКатегория;  lmal Убрал 17-10-2023
		//РазрядПодразделение=МасФЛ[0].РазрядПодразделение;
		Минимум=0;
		Максимум=0;
		//LMAL 05-07-2023_н
		СтоимостьНочногоЧаса=0;
		Коэффициент=1;
		ДоплатаЗаКатегорию=0;
		СтоимостьВыходные=0;
		//LMAL 05-07-2023_к	
		запрос=новый запрос;
		запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
		запрос.УстановитьПараметр("Должность",НоваяСтрока.Должность);
		запрос.УстановитьПараметр("КатегорияСотрудник",НоваяСтрока.РазрядКатегория);
		запрос.УстановитьПараметр("КатегорияАптеки",НоваяСтрока.РазрядПодразделение);
		запрос.Текст="ВЫБРАТЬ
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.НормаЧасов КАК НормаЧасов,
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.Минимум КАК Минимум,
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.Максимум КАК Максимум,
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьНочногоЧаса КАК СтоимостьНочногоЧаса,
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.Коэффициент КАК Коэффициент,
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.ДоплатаЗаКатегорию КАК ДоплатаЗаКатегорию,
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.ДиапазонЧасов1До КАК ДиапазонЧасов1До,
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьДиапазонаЧасов1 КАК СтоимостьДиапазонаЧасов1,
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.ДиапазонЧасов2До КАК ДиапазонЧасов2До,
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьДиапазонаЧасов2 КАК СтоимостьДиапазонаЧасов2,
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.ДиапазонЧасов3До КАК ДиапазонЧасов3До,
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьДиапазонаЧасов3 КАК СтоимостьДиапазонаЧасов3,
		|	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьВыходные КАК СтоимостьВыходные
		|ИЗ
		|	РегистрСведений.ПоказателиПоДолжностям.СрезПоследних(
		|			&ДатаС,
		|			КатегорияАптеки = &КатегорияАптеки
		|				И КатегорияСотрудник = &КатегорияСотрудник
		|				И Должность = &Должность) КАК ДПО_ПоказателиПоДолжностямСрезПоследних";
		//LMAL 05-07-2023_н
		Результат1=запрос.Выполнить();
		Если Результат1.Пустой() Тогда
			//Сообщить("Заполните Показатели по должностям для Категория сотрудника "+РазрядКатегория+" Категория аптеки "+РазрядПодразделение+" "+НоваяСтрока.Сотрудник);
			Сообщить("Не найдены параметры в настройках Показатели по должностям для: Должность="+НоваяСтрока.Должность+", РазрядКатегория="+НоваяСтрока.РазрядКатегория+", РазрядПодразделение="+НоваяСтрока.РазрядПодразделение+", НаДату="+Объект.ДатаС)
		КонецЕсли;
		РезультатНормативы=Результат1.Выгрузить();
		//LMAL 05-07-2023_к
		Для каждого Эл1 из РезультатНормативы цикл
			НормаЧасовМесяц=Эл1.НормаЧасов;
			Минимум=Эл1.Минимум;
			Максимум=Эл1.Максимум;
			СтоимостьНочногоЧаса=Эл1.СтоимостьНочногоЧаса;
			Коэффициент=Эл1.Коэффициент;
			//LMAL добавил доплату к тарифной ставке сумму 5000 
			ДоплатаЗаКатегорию=Эл1.ДоплатаЗаКатегорию;
			//LMAL_12-09-2023 получаем границы и стоимость часа.
			Граница1=0;
			Граница2=Эл1.ДиапазонЧасов1До;
			Значение1=Эл1.СтоимостьДиапазонаЧасов1;
			Граница3=Эл1.ДиапазонЧасов1До+1;
			Граница4=Эл1.ДиапазонЧасов2До;
			Значение2=Эл1.СтоимостьДиапазонаЧасов2;
			Граница5=Эл1.ДиапазонЧасов2До+1;
			Граница6=Эл1.ДиапазонЧасов3До;
			Значение3=Эл1.СтоимостьДиапазонаЧасов3;
			СтоимостьВыходные=Эл1.СтоимостьВыходные;
		КонецЦикла;
		Попытка
			НоваяСтрока.МинимумПоСотруднику=Минимум;
			НоваяСтрока.МаксимумПоСотруднику=Максимум;
			НоваяСтрока.ОтработаноВсего=МасФЛ[0].ВремяДень+МасФЛ[0].ПраздникиВремяДень+МасФЛ[0].ВыходныеВремяДень;
			НоваяСтрока.Оклад0_166_Часы=МасФЛ[0].ВремяДень;
			НоваяСтрока.Оклад0_166Сумма=Значение1*МасФЛ[0].ВремяДень*Коэффициент;
			НоваяСтрока.ВыходныеДеньЧасы=МасФЛ[0].ВыходныеВремяДень;
			НоваяСтрока.ВыходныеДеньСумма=СтоимостьВыходные*МасФЛ[0].ВыходныеВремяДень*Коэффициент;
			НоваяСтрока.ПраздникиДеньЧасы=МасФЛ[0].ПраздникиВремяДень;
			НоваяСтрока.ПраздникиДеньСумма=СтоимостьВыходные*МасФЛ[0].ПраздникиВремяДень*Коэффициент;
			
			НоваяСтрока.СуммаУслугВрача=МасФЛ[0].СуммаУслугВрача;
			НоваяСтрока.БонусЗаУслугиВрача=МасФЛ[0].БонусЗаУслугиВрача*Коэффициент;
			НоваяСтрока.СуммаОчковыеЛинзы=МасФЛ[0].СуммаОчковыеЛинзы;
			НоваяСтрока.БонусЗаОчковыеЛинзы=МасФЛ[0].БонусЗаОчковыеЛинзы*Коэффициент;
			НоваяСтрока.ИтогоБонусов=НоваяСтрока.БонусЗаУслугиВрача+НоваяСтрока.БонусЗаОчковыеЛинзы;
			
			НоваяСтрока.ИтогоЗаОтработанноеВремя=НоваяСтрока.ПраздникиДеньСумма+НоваяСтрока.ВыходныеДеньСумма+НоваяСтрока.Оклад0_166Сумма;                     
				//Lmal 16-05-2023_Н Убрали доплата1 Бонус за совмещение  из ИтогоДоГраниц и в конце добавляем доплата1
				//НоваяСтрока.ИтогоДоГраниц=НоваяСтрока.ИтогоЗаОтработанноеВремя+НоваяСтрока.ИтогоБонусов+НоваяСтрока.БонусАкции+НоваяСтрока.БонусЗМЗ+НоваяСтрока.БонусОценка+НоваяСтрока.Доплата1+НоваяСтрока.Доплата2;
				НоваяСтрока.ИтогоДоГраниц=НоваяСтрока.ИтогоЗаОтработанноеВремя+НоваяСтрока.БонусЗаУслугиВрача+НоваяСтрока.БонусЗаОчковыеЛинзы+НоваяСтрока.Доплата2+НоваяСтрока.ДоплатаЗаКатегорию;
				НоваяСтрока.МинимумПоФакту= Минимум*НоваяСтрока.ОтработаноВсего/Объект.НормаЧасовМесяц;
				НоваяСтрока.МаксимумПоФакту= Максимум*НоваяСтрока.ОтработаноВсего/Объект.НормаЧасовМесяц;
				НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.ИтогоДоГраниц;
				Если  НоваяСтрока.ИтогоДоГраниц<НоваяСтрока.МинимумПоФакту тогда
					НоваяСтрока.ПремияМин=НоваяСтрока.МинимумПоФакту-НоваяСтрока.ВсегоПоРасчету;
					
					НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.МинимумПоФакту;
				КонецЕсли;
				
				
				Если  НоваяСтрока.ИтогоДоГраниц>НоваяСтрока.МаксимумПоФакту Тогда
					НоваяСтрока.ПремияМакс=НоваяСтрока.МаксимумПоФакту-НоваяСтрока.ВсегоПоРасчету;
					
					НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.МаксимумПоФакту;
				КонецЕсли;
				//добавил два поля
				НоваяСтрока.ОкладПоЧасам=НоваяСтрока.ОтработаноВсего*Значение1;
				НоваяСтрока.ОбщаяПремия=НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.ОкладПоЧасам;
				
				//Lmal 16-05-2023_К
				//lmal 28-09-2023_н Добавил два поля Статус2 ((командировки+такси это бонус за совмещение)+сумма больше 200часов+доплата за категорию) и статус1 (Всего-Статус2) 
				Если Коэффициент=1 Тогда //с коэффициентом 0,85 все во второй статус
					НоваяСтрока.Статус2=0;
					НоваяСтрока.Статус1=НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.Статус2;
				Иначе
					НоваяСтрока.Статус2=НоваяСтрока.ВсегоПоРасчету;
					НоваяСтрока.Статус1=0;
          		КонецЕсли
				
		Исключение
		КонецПопытки;
		
КонецЦикла;
КонецПроцедуры
&НаКлиенте
Процедура Рассчитать(Команда)
РассчитатьДокумент();
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьТЧСотрудников(ПризнакУволенного)
// Вставить содержимое обработчика.
Объект.ТЧАптека.Очистить();

Сотр=ПолучитьСотрудниковПоОсновному();
//LMAL_05-07-2023, закоментировал эту строку Сотр.Свернуть("ФизическоеЛицо,Подразделение,ТН");
Для каждого Эл из Сотр  цикл
	запрос=новый запрос;
	запрос.УстановитьПараметр("ФЛ",Эл.ФизическоеЛицо);
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("Истина",Истина);
	//LMAL 14-04-2023 Н_
	запрос.Текст= "ВЫБРАТЬ
	|	ДанныеПоАптекам.Должность КАК Должность,
	|	ДанныеПоАптекам.РазрядКатегория КАК РазрядКатегория,
	|	ДанныеПоАптекам.РазрядПодразделение КАК РазрядПодразделение,
	|	ДанныеПоАптекам.Подразделение КАК Подразделение,
	|	ДанныеПоАптекам.ПодразделениеРаботы КАК ПодразделениеРаботы,
	|	ДанныеПоАптекам.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТ_ВсеДанные
	|ИЗ
	|	РегистрСведений.ДанныеПоАптекам КАК ДанныеПоАптекам
	|ГДЕ
	|	ДанныеПоАптекам.ФизическоеЛицо = &ФЛ
	|	И ДанныеПоАптекам.ДатаС = &ДатаС
	|	И ДанныеПоАптекам.ДатаПо = &ДатаПо";
	Если ПризнакУволенного=истина тогда
		запрос.Текст=запрос.Текст+"
		|	И ДанныеПоАптекам.Уволенная = &Истина";
	конецесли;
	запрос.Текст=запрос.Текст+"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеДанные.Должность КАК Должность,
	|	ВТ_ВсеДанные.РазрядКатегория КАК РазрядКатегория,
	|	ВТ_ВсеДанные.РазрядПодразделение КАК РазрядПодразделение,
	|	ВТ_ВсеДанные.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТ_ПодразделениеОсновное
	|ИЗ
	|	ВТ_ВсеДанные КАК ВТ_ВсеДанные
	|ГДЕ
	|	ВТ_ВсеДанные.Подразделение = ВТ_ВсеДанные.ПодразделениеРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(ВТ_ПодразделениеОсновное.Должность, ВТ_ВсеДанные.Должность) КАК Должность,
	|	ЕСТЬNULL(ВТ_ПодразделениеОсновное.РазрядКатегория, ВТ_ВсеДанные.РазрядКатегория) КАК РазрядКатегория,
	|	ЕСТЬNULL(ВТ_ПодразделениеОсновное.РазрядПодразделение, ВТ_ВсеДанные.РазрядПодразделение) КАК РазрядПодразделение
	|ИЗ
	|	ВТ_ВсеДанные КАК ВТ_ВсеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодразделениеОсновное КАК ВТ_ПодразделениеОсновное
	|		ПО ВТ_ВсеДанные.ФизическоеЛицо = ВТ_ПодразделениеОсновное.ФизическоеЛицо";
	//LMAL 14-04-2023 К
	РезультатФЛ=запрос.Выполнить().Выгрузить();
	Если ПризнакУволенного=истина и РезультатФЛ.Количество()=0 тогда
		Продолжить;
	конецесли;
	
	НоваяСтрока=Объект.ТЧАптека.Добавить();
	НоваяСтрока.ТН=Эл.ТН;
	НоваяСтрока.ИНН=Эл.ФизическоеЛицо.ИНН;
	//НоваяСтрока.РазрядКатегория=Эл.РазрядКатегория;
	//НоваяСтрока.РазрядПодразделение=Эл.РазрядПодразделение;
	//НоваяСтрока.ОсновноеМестоРаботы=истина;
	НоваяСтрока.ОсновнаяАптека=Эл.Подразделение;
	//LMAL 05-07-2023_н Если были дубли то проверяем Подразделение
	Если Эл.Дубли>1 Тогда
		МассивФизЛиц = Новый Массив;
		МассивФизЛиц.Добавить(Эл.ФизическоеЛицо);
		Период=Объект.ДатаПо;
		ОсновныеСотрудники=КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(МассивФизЛиц, Истина,,Период); 
		Для Каждого СтрокаСотрудник Из ОсновныеСотрудники Цикл
			МассивСотрудников1 = Новый Массив;
			МассивСотрудников1.Добавить(СтрокаСотрудник.Сотрудник.ГоловнойСотрудник);
			КадровыеДанные = "Подразделение"; 
			КадровыеДанныеСотрудников1 = КадровыйУчет.КадровыеДанныеСотрудников(Истина, МассивСотрудников1, КадровыеДанные,Период);
			Для Каждого Строка Из КадровыеДанныеСотрудников1 Цикл
				НоваяСтрока.ОсновнаяАптека= Строка.Подразделение;
			КонецЦикла;
		КонецЦикла;	
	КонецЕсли; 
	//LMAL 05-07-2023_К
	//НоваяСтрока.Должность=Справочники.Должности.НайтиПоНаименованию("Фармацевт");
	Для каждого ЭлД из РезультатФЛ цикл
		//LMAL_06-04-2023_Н
		//Должность=ЭлД.Должность;
		//РазрядКатегория=ЭлД.РазрядКатегория;
		//РазрядПодразделение=ЭлД.РазрядПодразделение;
		НоваяСтрока.Должность=ЭлД.Должность;	
		НоваяСтрока.РазрядКатегория=ЭлД.РазрядКатегория;
		НоваяСтрока.РазрядПодразделение=ЭлД.РазрядПодразделение;
	КонецЦикла;
	НоваяСтрока.Сотрудник=Эл.ФизическоеЛицо;
	//НоваяСтрока.Должность=Должность;	
	//НоваяСтрока.РазрядКатегория=РазрядКатегория;
	//НоваяСтрока.РазрядПодразделение=РазрядПодразделение;
	//LMAL_06-04-2023_К
	
КонецЦикла;
	
Объект.ТЧАптека.Сортировать("Сотрудник");
КонецПроцедуры
&НаКлиенте
Процедура Заполнить(Команда)
ЗаполнитьТЧСотрудников(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУволенным(Команда)
// Вставить содержимое обработчика.
ЗаполнитьТЧСотрудников(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьXML(Команда)
ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
ДиалогСохраненияФайла.ПолноеИмяФайла="Сотрудники.XML";
ДиалогСохраненияФайла.Заголовок = "Выберите файл"; 
Если ДиалогСохраненияФайла.Выбрать() Тогда 
	ТекДок = Новый ТекстовыйДокумент;
	ТекДок.ДобавитьСтроку(ПолучитьXMLНаСервере());
	ТекДок.Записать(ДиалогСохраненияФайла.ПолноеИмяФайла);
КонецЕсли;
КонецПроцедуры 
&НаСервере
Функция ПолучитьXMLНаСервере()
//Выгуржаем  xml_  
//ПутьКФайлуДляЗаписи="\\10.3.7.12\project\Exchange\OUT\test\1.xml";
ЗаписьXML = Новый ЗаписьXML;
//ЗаписьXML.ОткрытьФайл("E:\temp\10\test_data.xml", "UTF-8", Истина); нелья, т.к. в этом случае запись на сервере делает
ЗаписьXML.УстановитьСтроку();
ЗаписьXML.ЗаписатьОбъявлениеXML();    
ЗаписьXML.ЗаписатьНачалоЭлемента("Таблица");
Таблица1=Объект.ТЧАптека.Выгрузить();
Для каждого Строка1 из Таблица1 Цикл    
	ЗаписьXML.ЗаписатьНачалоЭлемента("СтрокаТаблицы");// Сотрудник
	//ЗаписьXML.ЗаписатьАтрибут("НомерСтроки", Строка(Строка1.НомерСтроки));
	//ЗаписьXML.ЗаписатьАтрибут("ФИО", Строка(Строка1.Сотрудник));
	//ЗаписьXML.ЗаписатьАтрибут("ИНН", Строка(Строка1.ИНН));
	
	Для Каждого Столбец1 Из Таблица1.Колонки Цикл
		Значение1=Строка1[Таблица1.Колонки.Индекс(Столбец1)]; 
		Если ТипЗнч(Значение1)=Тип("Число") Тогда
			Значение1=Формат(Значение1,"ЧН=; ЧГ=");
		КонецЕсли;
		ЗаписьXML.ЗаписатьАтрибут(Строка(Столбец1.Имя), Строка(Значение1));	
	КонецЦикла;
	ЗаписьXML.ЗаписатьКонецЭлемента(); // Сотрудник
КонецЦикла;
ЗаписьXML.ЗаписатьКонецЭлемента(); // Сотрудники
СтрокаXML=ЗаписьXML.Закрыть();
Возврат СтрокаXML;
//_xml	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика
	Объект.ТЧАптека.Сортировать("Сотрудник");
КонецПроцедуры

//АК Начало Хаустов С.А.

//&НаСервере
//Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
//	
//	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтаФорма);
//	
//КонецПроцедуры

//#Область СтандартныеПодсистемыПодключаемыеКоманды

//&НаКлиенте
//Процедура Подключаемый_ВыполнитьКоманду(Команда)
//	
//	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
//	
//КонецПроцедуры 

//#КонецОбласти

&НаСервере
Процедура ДозаполнитьТаблицуДаннымиПоУдержаниям()
	
	//т.к. в данном документе могут быть несколько строк по одному физлицу, то вешаем сумму на первое найденное физлицо
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗГ_УдержанияСотрудниковОрганизацииОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЗГ_УдержанияСотрудниковОрганизацииОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ЗГ_УдержанияСотрудниковОрганизации.Остатки(&КонецПериода, ФизическоеЛицо В (&СписокФизическихЛиц)) КАК ЗГ_УдержанияСотрудниковОрганизацииОстатки";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.ДатаПо) + 1);
	Запрос.УстановитьПараметр("СписокФизическихЛиц", Объект.ТЧАптека.Выгрузить().ВыгрузитьКолонку("Сотрудник"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Сотрудник", Выборка.ФизическоеЛицо);
		
		НайденныеСтроки = Объект.ТЧАптека.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].Доплата2 = - Выборка.Сумма;
		КонецЕсли;
	
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧАптекаДоплата2ПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТЧАптека.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ТекущиеДанные.ИтогоДоГраниц = ТекущиеДанные.ИтогоЗаОтработанноеВремя + ТекущиеДанные.ИтогоБонусов + ТекущиеДанные.БонусАкции + ТекущиеДанные.БонусЗМЗ
		                             + ТекущиеДанные.БонусОценка + ТекущиеДанные.Доплата1 + ТекущиеДанные.Доплата2;
		
		ТекущиеДанные.ВсегоПоРасчету = ТекущиеДанные.ИтогоДоГраниц;
		
		Если  ТекущиеДанные.ИтогоДоГраниц < ТекущиеДанные.МинимумПоФакту Тогда
			
			ТекущиеДанные.ПремияМин = ТекущиеДанные.МинимумПоФакту - ТекущиеДанные.ВсегоПоРасчету;			
			ТекущиеДанные.ВсегоПоРасчету = ТекущиеДанные.МинимумПоФакту;
			
		КонецЕсли;
		
		
		Если ТекущиеДанные.ИтогоДоГраниц > ТекущиеДанные.МаксимумПоФакту Тогда
			
			ТекущиеДанные.ПремияМакс = ТекущиеДанные.МаксимумПоФакту - ТекущиеДанные.ВсегоПоРасчету;			
			ТекущиеДанные.ВсегоПоРасчету = ТекущиеДанные.МаксимумПоФакту;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаДублейНаСервере()
	
	Если ОтборДублейУстановлен Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДанныеТабличнойЧасти.Сотрудник КАК Сотрудник,
		|	1 КАК Количество
		|ПОМЕСТИТЬ ВТ_ДанныеТабличнойЧасти
		|ИЗ
		|	&ДанныеТабличнойЧасти КАК ДанныеТабличнойЧасти
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеТабличнойЧасти.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_ДанныеТабличнойЧасти.Количество) КАК Количество
		|ИЗ
		|	ВТ_ДанныеТабличнойЧасти КАК ВТ_ДанныеТабличнойЧасти
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДанныеТабличнойЧасти.Сотрудник
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВТ_ДанныеТабличнойЧасти.Количество) > 1";
		
		Запрос.УстановитьПараметр("ДанныеТабличнойЧасти", Объект.ТЧАптека.Выгрузить());
		
		Результат = Запрос.Выполнить();
		МассивФизическихЛиц = Результат.Выгрузить().ВыгрузитьКолонку("Сотрудник");
	//Для каждого ФизЛицо из МассивФизическихЛиц Цикл	
	//	//Красим поля	
	//Элемент = УсловноеОформление.Элементы.Добавить();
	//
	//ПолеЭлемента1 = Элемент.Поля.Элементы.Добавить();
	//ПолеЭлемента1.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТЧАптекаСотрудник.Имя);

	//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ТЧАптека.Сотрудник");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ОтборЭлемента.ПравоеЗначение =ФизЛицо; //Справочники.Должности.НайтиПоНаименованию("Горничная",истина);
	//Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона",Новый Цвет(250,0,0));
	//КонецЦикла;	
	Для каждого Строка1 из Объект.ТЧАптека Цикл
		Если НЕ МассивФизическихЛиц.Найти(Строка1.Сотрудник)=Неопределено Тогда
			Строка1.ЭлементВыбран=Истина;
		Иначе
			Строка1.ЭлементВыбран=Ложь;
		КонецЕсли;
	КонецЦикла;
		СтруктураФ=Новый ФиксированнаяСтруктура("ЭлементВыбран", Истина);
		Элементы.ТЧАптека.ОтборСтрок =СтруктураФ;
	Иначе
		
		Элементы.ТЧАптека.ОтборСтрок = Неопределено;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаДублей(Команда)
	
	ОтборДублейУстановлен = НЕ ОтборДублейУстановлен; 
		
	ПроверкаДублейНаСервере();
	
	Элементы.ТЧАптекаПроверкаДублей.Заголовок = ?(ОтборДублейУстановлен, "Отключить отбор дублей", "Показать дубли");
	
КонецПроцедуры



//АК Конец Хаустов С.А.

