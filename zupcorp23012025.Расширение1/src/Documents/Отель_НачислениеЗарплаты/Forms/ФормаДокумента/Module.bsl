Функция ПолучитьДанныеПоФЛ(СписокФЛ)
	запрос=новый запрос;
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);  
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("ФизЛицо",СписокФЛ);
	запрос.Текст="ВЫБРАТЬ
	|	СУММА(ДанныеПоАптекам.ВремяДень) КАК ВремяДень,
	|	СУММА(ДанныеПоАптекам.ВремяНочь) КАК ВремяНочь,
	|	ДанныеПоАптекам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ДанныеПоАптекам.ПремияKPI) КАК ПремияKPI
	|ИЗ
	|	РегистрСведений.ДанныеПоАптекам КАК ДанныеПоАптекам
	|ГДЕ
	|	ДанныеПоАптекам.ФизическоеЛицо В(&ФизЛицо)
	|	И ДанныеПоАптекам.ДатаС МЕЖДУ &ДатаС И &ДатаПо
	|	И ДанныеПоАптекам.ДатаПо МЕЖДУ &ДатаС И &ДатаПо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоАптекам.ФизическоеЛицо";
	РезультатпоФЛ=запрос.Выполнить().Выгрузить();
	Возврат РезультатпоФЛ;
конецфункции
&НаСервере
Функция ПолучитьСотрудниковПоОсновному()
	//проверяем сотрудников,по которым уже выполнен расчет
	запрос=новый запрос;
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("Подразделение",Объект.Подразделение);
	запрос.Текст="ВЫБРАТЬ
	|	НачисленияЗППоАптекам.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.НачисленияЗППоАптекам КАК НачисленияЗППоАптекам
	|ГДЕ
	|	НачисленияЗППоАптекам.Период МЕЖДУ &ДатаС И &ДатаПо";
	Если ЗначениеЗаполнено(Объект.Подразделение) тогда
		запрос.Текст=запрос.Текст+"
		|	И НачисленияЗППоАптекам.Подразделение = &Подразделение";
	конецесли;
	РезультатПрош=запрос.Выполнить().Выгрузить();
	МасФЛ=РезультатПрош.ВыгрузитьКолонку("ФизическоеЛицо");
	запрос=новый запрос;
	запрос.УстановитьПараметр("Подразделение",Объект.Подразделение);
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("ФЛ",МасФЛ);
	запрос.УстановитьПараметр("Завершено",Перечисления.ВидыСтатусов.Завершено);	
	//LMAL_05-07-2023Н делают группировку по ФизическоеЛицо,ТН, т.к. есть переводы сотрудников в середине месяца, поэтому создаются дубли строк.
	запрос.Текст="ВЫБРАТЬ
	|	ДанныеПоАптекам.Подразделение КАК Подразделение,
	|	ДанныеПоАптекам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеПоАптекам.Сотрудник.Код КАК ТН
	|ПОМЕСТИТЬ ВТ_Все
	|ИЗ
	|	РегистрСведений.ДанныеПоАптекам КАК ДанныеПоАптекам
	|ГДЕ
	|	ДанныеПоАптекам.ДатаС МЕЖДУ &ДатаС И &ДатаПо
	|	И ДанныеПоАптекам.ДатаПо МЕЖДУ &ДатаС И &ДатаПо
	|	И НЕ ДанныеПоАптекам.ФизическоеЛицо В (&ФЛ)
	|	И ДанныеПоАптекам.Статус = &Завершено
	|";
	Если ЗначениеЗаполнено(Объект.Подразделение)тогда
		запрос.Текст=запрос.Текст+"
		|	И ДанныеПоАптекам.Подразделение = &Подразделение";
	конецесли;
	запрос.Текст=запрос.Текст+"
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоАптекам.ФизическоеЛицо,
	|	ДанныеПоАптекам.Сотрудник.Код,
	|	ДанныеПоАптекам.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_Все.Подразделение) КАК Подразделение,
	|	ВТ_Все.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТ_Все.ТН КАК ТН,
	|	КОЛИЧЕСТВО(ВТ_Все.Подразделение) КАК Дубли
	|ИЗ
	|	ВТ_Все КАК ВТ_Все
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Все.ФизическоеЛицо,
	|	ВТ_Все.ТН";
	
	
	
	//LMAL_05-07-2023К
	ТаблицаСотрудников=запрос.Выполнить().Выгрузить();
	Возврат ТаблицаСотрудников;
конецфункции 
&НаСервере
Функция ПолучитьПараметры()
	Возврат КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();	
КонецФункции
Функция ПолучитьНормативы()
	запрос=новый запрос;
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
	запрос.Текст="ВЫБРАТЬ
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.НормаЧасов КАК НормаЧасов,
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.Минимум КАК Минимум,
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.Максимум КАК Максимум,
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.СтоимостьНочногоЧаса КАК СтоимостьНочногоЧаса,
	|	ДПО_ПоказателиПоДолжностямСрезПоследних.Коэффициент КАК Коэффициент
	|ИЗ
	|	РегистрСведений.ПоказателиПоДолжностям.СрезПоследних(&ДатаС, ) КАК ДПО_ПоказателиПоДолжностямСрезПоследних";
	РезультатНормативы=запрос.Выполнить().Выгрузить();
	
	Возврат РезультатНормативы;
конецфункции
&НаСервере
Функция ПолучитьГраницыПоДолжности(Должность)
	запрос=новый запрос;
	запрос.УстановитьПараметр("Должность",Должность);
	запрос.Текст="ВЫБРАТЬ
	|	ТарифныеСтавки.ДиапазонС КАК ДиапазонС,
	|	ТарифныеСтавки.ДиапазонПо КАК ДиапазонПо,
	|	ТарифныеСтавки.Значение КАК Значение
	|ИЗ
	|	Справочник.ТарифныеСтавки КАК ТарифныеСтавки
	|ГДЕ
	|	ТарифныеСтавки.Должность = &Должность
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДиапазонС";
	Результат=запрос.Выполнить();//.Выгрузить();
	Если Результат.Пустой() Тогда
		Сообщить("Заполните тарифные ставки для должности "+Должность);
	КонецЕсли;
	Возврат Результат.Выгрузить();
конецфункции
//Функция ПроверитьПодрАкция(Аптека)
//		запрос=новый запрос;
//		запрос.УстановитьПараметр("Дата",Объект.ДатаС);
//		запрос.УстановитьПараметр("Аптека",Аптека);
//		запрос.Текст="ВЫБРАТЬ
//		             |	АкцииПоАптекамСрезПоследних.Акция КАК Акция
//		             |ИЗ
//		             |	РегистрСведений.АкцииПоАптекам.СрезПоследних(&Дата, Аптека = &Аптека) КАК АкцииПоАптекамСрезПоследних";
//		Результат=запрос.Выполнить().Выгрузить();
//		Если Результат.Количество()>0 тогда
//			Акция=Результат[0].Акция;
//		иначе
//			Акция=Справочники.РазрядыКатегорииДолжностей.ПустаяСсылка();
//		конецесли;
//		Возврат Акция;
//конецфункции


&НаСервере
Процедура РассчитатьДокумент() 
	Для каждого НоваяСтрока из Объект.ТЧАптека  цикл 
		МасФЛ=ПолучитьДанныеПоФЛ(НоваяСтрока.Сотрудник);
		Минимум=0;
		Максимум=0;
		СтоимостьДневногоЧаса=0;
		СтоимостьНочногоЧаса=0;
		СтоимостьЧасаKPI=0;
		Коэффициент=1;
		запрос=новый запрос;
		запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
		запрос.УстановитьПараметр("Должность",НоваяСтрока.Должность);
		запрос.УстановитьПараметр("КатегорияСотрудник",НоваяСтрока.РазрядКатегория);
		//запрос.УстановитьПараметр("КатегорияАптеки",НоваяСтрока.РазрядПодразделение);
		запрос.Текст="ВЫБРАТЬ
		|	ПоказателиОтельСрезПоследних.Коэффициент КАК Коэффициент,
		|	ПоказателиОтельСрезПоследних.СтоимостьДневногоЧаса КАК СтоимостьДневногоЧаса,
		|	ПоказателиОтельСрезПоследних.СтоимостьНочногоЧаса КАК СтоимостьНочногоЧаса,
		|	ПоказателиОтельСрезПоследних.СтоимостьЧасаKPI КАК СтоимостьЧасаKPI
		|ИЗ
		|	РегистрСведений.ПоказателиОтель.СрезПоследних(
		|			&ДатаС,
		|			КатегорияСотрудник = &КатегорияСотрудник
		|				И Должность = &Должность) КАК ПоказателиОтельСрезПоследних";
		//LMAL 05-07-2023_н
		Результат1=запрос.Выполнить();
		Если Результат1.Пустой() Тогда
			//Сообщить("Заполните Показатели по должностям для Категория сотрудника "+РазрядКатегория+" Категория аптеки "+РазрядПодразделение+" "+НоваяСтрока.Сотрудник);
			Сообщить("Не найдены параметры в настройках Показатели по должностям для: Должность="+НоваяСтрока.Должность+", РазрядКатегория="+НоваяСтрока.РазрядКатегория+", НаДату="+Объект.ДатаС)
		КонецЕсли;
		РезультатНормативы=Результат1.Выгрузить();
		//LMAL 05-07-2023_к
		Для каждого Эл1 из РезультатНормативы цикл
			//НормаЧасовМесяц=Эл1.НормаЧасов;
			Коэффициент=Эл1.Коэффициент;
			СтоимостьДневногоЧаса=Эл1.СтоимостьДневногоЧаса;
			СтоимостьНочногоЧаса=Эл1.СтоимостьНочногоЧаса;
			СтоимостьЧасаKPI=Эл1.СтоимостьЧасаKPI;
		КонецЦикла;
		Попытка
			
			//НоваяСтрока.МинимумПоСотруднику=Минимум;
			//НоваяСтрока.МаксимумПоСотруднику=Максимум;
			НоваяСтрока.ПремияKPI=МасФЛ[0].ПремияKPI*Коэффициент;
			//НоваяСтрока.Доплата1=МасФЛ[0].БонусЗаСовмещение*Коэффициент;
			//НоваяСтрока.БонусОценка=МасФЛ[0].БонусЗаОценку;
			НоваяСтрока.ИтогоБонусов=МасФЛ[0].ПремияKPI*Коэффициент;
			НоваяСтрока.Отработановсего=МасФЛ[0].ВремяДень+МасФЛ[0].ВремяНочь;
			НоваяСтрока.Ночь_Часы=МасФЛ[0].ВремяНочь;
			НоваяСтрока.Ночь_Сумма=МасФЛ[0].ВремяНочь*СтоимостьНочногоЧаса*Коэффициент;
			ВремяДень=МасФЛ[0].ВремяДень;
			//Если ВремяДень<=Граница2 тогда
			НоваяСтрока.ДеньЧасы=ВремяДень;
			НоваяСтрока.ДеньСумма=ВремяДень*СтоимостьДневногоЧаса*Коэффициент;
			НоваяСтрока.ИтогоЗаОтработанноеВремя=НоваяСтрока.ДеньСумма+НоваяСтрока.Ночь_Сумма;                     
			НоваяСтрока.ИтогоДоГраниц=НоваяСтрока.ДеньСумма+НоваяСтрока.Ночь_Сумма+НоваяСтрока.ПремияKPI;
			НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.ИтогоДоГраниц;
			//Если  НоваяСтрока.ИтогоДоГраниц<НоваяСтрока.МинимумПоФакту тогда
			//	НоваяСтрока.ПремияМин=НоваяСтрока.МинимумПоФакту-НоваяСтрока.ВсегоПоРасчету;
			//	
			//	НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.МинимумПоФакту;
			//конецесли;
			//
			//
			//Если  НоваяСтрока.ИтогоДоГраниц>НоваяСтрока.МаксимумПоФакту тогда
			//	НоваяСтрока.ПремияМакс=НоваяСтрока.МаксимумПоФакту-НоваяСтрока.ВсегоПоРасчету;
			//	
			//	НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.МаксимумПоФакту;
			//конецесли;
			//Добавляем Доплата1
			//НоваяСтрока.ВсегоПоРасчету=НоваяСтрока.ВсегоПоРасчету+НоваяСтрока.Доплата1; 
			//добавил два поля
			НоваяСтрока.ОкладПоЧасам=НоваяСтрока.ДеньСумма+НоваяСтрока.Ночь_Сумма;
			НоваяСтрока.ОбщаяПремия=НоваяСтрока.ПремияKPI;
			//НоваяСтрока.МинимумПоФакту= 0;
			//НоваяСтрока.МаксимумПоФакту= НоваяСтрока.ДеньСумма+НоваяСтрока.Ночь_Сумма+НоваяСтрока.Отработановсего*СтоимостьЧасаKPI*1.25;
			
			НоваяСтрока.Статус2=0;
			НоваяСтрока.Статус1=НоваяСтрока.ДеньСумма+НоваяСтрока.Ночь_Сумма+НоваяСтрока.ОбщаяПремия;
			Если Коэффициент<>1 Тогда
				НоваяСтрока.Статус2=НоваяСтрока.ВсегоПоРасчету;
				НоваяСтрока.Статус1=0;
			КонецЕсли;
		Исключение
		Конецпопытки;
	конеццикла;
конецпроцедуры
&НаКлиенте
Процедура Рассчитать(Команда)
	// Вставить содержимое обработчика. 
	РассчитатьДокумент();
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьТЧСотрудников(ПризнакУволенного)
	// Вставить содержимое обработчика.
	Объект.ТЧАптека.Очистить();
	
	Сотр=ПолучитьСотрудниковПоОсновному();
	//LMAL_05-07-2023, закоментировал эту строку Сотр.Свернуть("ФизическоеЛицо,Подразделение,ТН");
	Для каждого Эл из Сотр  цикл
		запрос=новый запрос;
		запрос.УстановитьПараметр("ФЛ",Эл.ФизическоеЛицо);
		запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
		запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
		запрос.УстановитьПараметр("Истина",Истина);
		//LMAL 14-04-2023 Н_
		запрос.Текст= "ВЫБРАТЬ
		|	ДанныеПоАптекам.Должность КАК Должность,
		|	ДанныеПоАптекам.РазрядКатегория КАК РазрядКатегория,
		|	ДанныеПоАптекам.РазрядПодразделение КАК РазрядПодразделение,
		|	ДанныеПоАптекам.Подразделение КАК Подразделение,
		|	ДанныеПоАптекам.ПодразделениеРаботы КАК ПодразделениеРаботы,
		|	ДанныеПоАптекам.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ВсеДанные
		|ИЗ
		|	РегистрСведений.ДанныеПоАптекам КАК ДанныеПоАптекам
		|ГДЕ
		|	ДанныеПоАптекам.ФизическоеЛицо = &ФЛ
		|	И ДанныеПоАптекам.ДатаС = &ДатаС
		|	И ДанныеПоАптекам.ДатаПо = &ДатаПо";
		Если ПризнакУволенного=истина тогда
			запрос.Текст=запрос.Текст+"
			|	И ДанныеПоАптекам.Уволенная = &Истина";
		конецесли;
		запрос.Текст=запрос.Текст+"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанные.Должность КАК Должность,
		|	ВТ_ВсеДанные.РазрядКатегория КАК РазрядКатегория,
		|	ВТ_ВсеДанные.РазрядПодразделение КАК РазрядПодразделение,
		|	ВТ_ВсеДанные.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ПодразделениеОсновное
		|ИЗ
		|	ВТ_ВсеДанные КАК ВТ_ВсеДанные
		|ГДЕ
		|	ВТ_ВсеДанные.Подразделение = ВТ_ВсеДанные.ПодразделениеРаботы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЕСТЬNULL(ВТ_ПодразделениеОсновное.Должность, ВТ_ВсеДанные.Должность) КАК Должность,
		|	ЕСТЬNULL(ВТ_ПодразделениеОсновное.РазрядКатегория, ВТ_ВсеДанные.РазрядКатегория) КАК РазрядКатегория,
		|	ЕСТЬNULL(ВТ_ПодразделениеОсновное.РазрядПодразделение, ВТ_ВсеДанные.РазрядПодразделение) КАК РазрядПодразделение
		|ИЗ
		|	ВТ_ВсеДанные КАК ВТ_ВсеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодразделениеОсновное КАК ВТ_ПодразделениеОсновное
		|		ПО ВТ_ВсеДанные.ФизическоеЛицо = ВТ_ПодразделениеОсновное.ФизическоеЛицо";
		//LMAL 14-04-2023 К
		РезультатФЛ=запрос.Выполнить().Выгрузить();
		Если ПризнакУволенного=истина и РезультатФЛ.Количество()=0 тогда
			Продолжить;
		конецесли;
		
		НоваяСтрока=Объект.ТЧАптека.Добавить();
		НоваяСтрока.ТН=Эл.ТН;
		НоваяСтрока.ИНН=Эл.ФизическоеЛицо.ИНН;
		//НоваяСтрока.РазрядКатегория=Эл.РазрядКатегория;
		//НоваяСтрока.РазрядПодразделение=Эл.РазрядПодразделение;
		//НоваяСтрока.ОсновноеМестоРаботы=истина;
		НоваяСтрока.ОсновнаяАптека=Эл.Подразделение;
		//LMAL 05-07-2023_н Если были дубли то проверяем Подразделение
		Если Эл.Дубли>1 Тогда
			МассивФизЛиц = Новый Массив;
			МассивФизЛиц.Добавить(Эл.ФизическоеЛицо);
			Период=Объект.ДатаПо;
			ОсновныеСотрудники=КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(МассивФизЛиц, Истина,,Период); 
			Для Каждого СтрокаСотрудник Из ОсновныеСотрудники Цикл
				МассивСотрудников1 = Новый Массив;
				МассивСотрудников1.Добавить(СтрокаСотрудник.Сотрудник.ГоловнойСотрудник);
				КадровыеДанные = "Подразделение"; 
				КадровыеДанныеСотрудников1 = КадровыйУчет.КадровыеДанныеСотрудников(Истина, МассивСотрудников1, КадровыеДанные,Период);
				Для Каждого Строка Из КадровыеДанныеСотрудников1 Цикл
					НоваяСтрока.ОсновнаяАптека= Строка.Подразделение;
				КонецЦикла;
			КонецЦикла;	
		КонецЕсли; 
		//LMAL 05-07-2023_К
		//НоваяСтрока.Должность=Справочники.Должности.НайтиПоНаименованию("Фармацевт");
		Для каждого ЭлД из РезультатФЛ цикл
			//LMAL_06-04-2023_Н
			//Должность=ЭлД.Должность;
			//РазрядКатегория=ЭлД.РазрядКатегория;
			//РазрядПодразделение=ЭлД.РазрядПодразделение;
			НоваяСтрока.Должность=ЭлД.Должность;	
			НоваяСтрока.РазрядКатегория=ЭлД.РазрядКатегория;
			//НоваяСтрока.РазрядПодразделение=ЭлД.РазрядПодразделение;
		КонецЦикла;
		НоваяСтрока.Сотрудник=Эл.ФизическоеЛицо;
		//НоваяСтрока.Должность=Должность;	
		//НоваяСтрока.РазрядКатегория=РазрядКатегория;
		//НоваяСтрока.РазрядПодразделение=РазрядПодразделение;
		//LMAL_06-04-2023_К
		
	КонецЦикла;
	Объект.ТЧАптека.Сортировать("Сотрудник");
КонецПроцедуры
&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьТЧСотрудников(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУволенным(Команда)
	// Вставить содержимое обработчика.
	ЗаполнитьТЧСотрудников(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВыгурзитьXML(Команда)
	ПутьКФайлуДляЗаписи="E:\temp\01\1.xml";
	ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогСохраненияФайла.ПолноеИмяФайла="Сотрудники.XML";
	ДиалогСохраненияФайла.Заголовок = "Выберите файл"; 
	Если ДиалогСохраненияФайла.Выбрать() Тогда 
		ТекДок = Новый ТекстовыйДокумент;
		ТекДок.ДобавитьСтроку(ПолучитьXMLНаСервере());
		ТекДок.Записать(ДиалогСохраненияФайла.ПолноеИмяФайла);
	КонецЕсли;
КонецПроцедуры
&НаСервере
Функция ПолучитьXMLНаСервере()
	//Выгуржаем  xml_  
	//ПутьКФайлуДляЗаписи="\\10.3.7.12\project\Exchange\OUT\test\1.xml";
	ЗаписьXML = Новый ЗаписьXML;
	//ЗаписьXML.ОткрытьФайл("E:\temp\10\test_data.xml", "UTF-8", Истина); нелья, т.к. в этом случае запись на сервере делает
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьОбъявлениеXML();    
	ЗаписьXML.ЗаписатьНачалоЭлемента("Таблица");
	Таблица1=Объект.ТЧАптека.Выгрузить();
	Для каждого Строка1 из Таблица1 Цикл    
		ЗаписьXML.ЗаписатьНачалоЭлемента("СтрокаТаблицы");// Сотрудник
		//ЗаписьXML.ЗаписатьАтрибут("НомерСтроки", Строка(Строка1.НомерСтроки));
		//ЗаписьXML.ЗаписатьАтрибут("ФИО", Строка(Строка1.Сотрудник));
		//ЗаписьXML.ЗаписатьАтрибут("ИНН", Строка(Строка1.ИНН));
		
		Для Каждого Столбец1 Из Таблица1.Колонки Цикл
			Значение1=Строка1[Таблица1.Колонки.Индекс(Столбец1)]; 
			Если ТипЗнч(Значение1)=Тип("Число") Тогда
				Значение1=Формат(Значение1,"ЧН=; ЧГ=");
			КонецЕсли;
			ЗаписьXML.ЗаписатьАтрибут(Строка(Столбец1.Имя), Строка(Значение1));	
		КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Сотрудник
	КонецЦикла;
	ЗаписьXML.ЗаписатьКонецЭлемента(); // Сотрудники
	СтрокаXML=ЗаписьXML.Закрыть();
	Возврат СтрокаXML;
	//_xml	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.ТЧАптека.Сортировать("Сотрудник");
КонецПроцедуры

&НаСервере
Процедура ПроверкаДублейНаСервере()
	Если ОтборДублейУстановлен Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДанныеТабличнойЧасти.Сотрудник КАК Сотрудник,
		|	1 КАК Количество
		|ПОМЕСТИТЬ ВТ_ДанныеТабличнойЧасти
		|ИЗ
		|	&ДанныеТабличнойЧасти КАК ДанныеТабличнойЧасти
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеТабличнойЧасти.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_ДанныеТабличнойЧасти.Количество) КАК Количество
		|ИЗ
		|	ВТ_ДанныеТабличнойЧасти КАК ВТ_ДанныеТабличнойЧасти
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДанныеТабличнойЧасти.Сотрудник
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВТ_ДанныеТабличнойЧасти.Количество) > 1";
		
		Запрос.УстановитьПараметр("ДанныеТабличнойЧасти", Объект.ТЧАптека.Выгрузить());
		
		Результат = Запрос.Выполнить();
		МассивФизическихЛиц = Результат.Выгрузить().ВыгрузитьКолонку("Сотрудник");
		//Для каждого ФизЛицо из МассивФизическихЛиц Цикл	
		//	//Красим поля	
		//Элемент = УсловноеОформление.Элементы.Добавить();
		//
		//ПолеЭлемента1 = Элемент.Поля.Элементы.Добавить();
		//ПолеЭлемента1.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТЧАптекаСотрудник.Имя);
		
		//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ТЧАптека.Сотрудник");
		//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//ОтборЭлемента.ПравоеЗначение =ФизЛицо; //Справочники.Должности.НайтиПоНаименованию("Горничная",истина);
		//Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона",Новый Цвет(250,0,0));
		//КонецЦикла;	
		Для каждого Строка1 из Объект.ТЧАптека Цикл
			Если НЕ МассивФизическихЛиц.Найти(Строка1.Сотрудник)=Неопределено Тогда
				Строка1.ЭлементВыбран=Истина;
			Иначе
				Строка1.ЭлементВыбран=Ложь;
			КонецЕсли;
		КонецЦикла;
		СтруктураФ=Новый ФиксированнаяСтруктура("ЭлементВыбран", Истина);
		Элементы.ТЧАптека.ОтборСтрок =СтруктураФ;
	Иначе
		
		Элементы.ТЧАптека.ОтборСтрок = Неопределено;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаДублей(Команда)
	ОтборДублейУстановлен = НЕ ОтборДублейУстановлен; 
	
	ПроверкаДублейНаСервере();
	
	Элементы.ТЧАптекаПроверкаДублей.Заголовок = ?(ОтборДублейУстановлен, "Отключить отбор дублей", "Показать дубли");
КонецПроцедуры
