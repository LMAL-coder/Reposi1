
&НаСервере
Процедура ЗаполнитьПоказателиНаСервере()
	Объект.ПоказателиПоПодразделениям.Очистить();
	
	ТаблицаПоказатели=ЗГ_ЗППроцедурыИФункцииСервер.ПолучитьПоказателиПоАптекам(НачалоДня(Объект.ПериодРасчетаС), КонецДня(Объект.ПериодРасчетаПо));
	ТаблицаПоказателиПрошлыйГод=ЗГ_ЗППроцедурыИФункцииСервер.ПолучитьПоказателиПоАптекам(ДобавитьМесяц(НачалоДня(Объект.ПериодРасчетаС),-12), ДобавитьМесяц(КонецДня(Объект.ПериодРасчетаПо),-12));
	//Аптека,СуммаВсего,СуммаОптики,МД1,КоличествоДТМ,СуммаДТМ,КоличествоПродвижение,СуммаПродвижение,ЗМЗ12месПроц,ЗМЗ12месПроцОптики,КТЗ
	//коментрарий
	ДолжностьЗавед=Справочники.Должности.НайтиПоНаименованию("Заведующий аптекой");
	
	Для каждого Стр Из ТаблицаПоказатели Цикл
		
		ИтогоKPIВзвеш=0;
		
		Если Врег(Сред(Стр.Аптека,1,1))<>"А" Тогда
			Продолжить;
		КонецЕсли;
		
		Строка=Объект.ПоказателиПоПодразделениям.Добавить();
		//Подразделение=Справочники.ПодразделенияОрганизаций.НайтиПоРеквизиту(Стр.Аптека;
		
		//Получаем Подразделение по коду					
		Запрос = Новый Запрос;
		Запрос.Текст ="ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка КАК Ссылка,
		|	ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК Код
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
		|ГДЕ
		|	ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Наименование = ""Сокращенное наименование (Подразделения)""
		|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Значение ПОДОБНО &КодАП";
		Запрос.УстановитьПараметр("КодАП",Стр.Аптека+"%");
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Подразделение=Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Подразделение=ВыборкаДетальныеЗаписи.Ссылка;
			КонецЦикла;
			
			
			//Находим руководителя подразделения Н_ 
			
			////Получаем список сотрудников
			//МВТ = Новый МенеджерВременныхТаблиц;
			//ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
			//ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц.НачалоПериода = Объект.ПериодВыплатыС; //!!!!!!!!!!?	
			//ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц.ОкончаниеПериода = Объект.ПериодВыплатыПо; //!!!!!!!!!?
			//ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц.Подразделение=Подразделение;
			//ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц.КадровыеДанные = "Сотрудник, ФизическоеЛицо,Подразделение, Должность, ВидЗанятости, Состояние";
			//КадровыйУчет.СоздатьВТСотрудникиОрганизации(МВТ , Истина, ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц);
			//
			//Запрос = Новый Запрос;
			//Запрос.МенеджерВременныхТаблиц = МВТ;
			//
			//Запрос.Текст = 
			//"ВЫБРАТЬ
			//|	ВТСотрудникиОрганизации.Сотрудник КАК Сотрудник,
			//|	ВТСотрудникиОрганизации.Подразделение КАК Подразделение,
			//|	ВТСотрудникиОрганизации.Должность КАК Должность,
			//|	ВТСотрудникиОрганизации.ВидЗанятости КАК ВидЗанятости,
			//|	ВТСотрудникиОрганизации.ФизическоеЛицо КАК ФизическоеЛицо
			//|ИЗ
			//|	ВТСотрудникиОрганизации КАК ВТСотрудникиОрганизации
			//|
			//|ГДЕ
			////|			ВТСотрудникиОрганизации.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
			//|			ВТСотрудникиОрганизации.Должность = &Должность";
			//Запрос.УстановитьПараметр("Должность",ДолжностьЗавед);
			//
			//РезультатЗапроса = Запрос.Выполнить();
			//
			//Руководитель=Справочники.Сотрудники.ПустаяСсылка();
			//РуководительФизЛицо=Справочники.ФизическиеЛица.ПустаяСсылка();
			//
			//Если НЕ РезультатЗапроса.Пустой() Тогда
			//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			//		Руководитель=ВыборкаДетальныеЗаписи.Сотрудник;
			//		РуководительФизЛицо=ВыборкаДетальныеЗаписи.ФизическоеЛицо;
			//	КонецЦикла
			//Иначе         
			//	Сообщить("Не найден руководитель для подразделения "+Подразделение);
			//КонецЕсли;
			МестоВСтруктуреПредприятия = ОрганизационнаяСтруктура.ПодразделениеВСтруктуреПредприятия(Подразделение);
			Подразделения = Новый Массив;
			Подразделения.Добавить(МестоВСтруктуреПредприятия);
			Данные = РуководителиПодразделений.ДанныеРуководителей(Подразделения, Истина);
			
			Руководитель=Справочники.Сотрудники.ПустаяСсылка();
			РуководительФизЛицо=Справочники.ФизическиеЛица.ПустаяСсылка();
			
			Для каждого ЭлементСоответсвия Из Данные Цикл
				Руководитель=ЭлементСоответсвия.Значение.Руководитель;
				РуководительФизЛицо=ЭлементСоответсвия.Значение.ФизическоеЛицо;
				
				Если НЕ ЗначениеЗаполнено(РуководительФизЛицо) Тогда
					Сообщить("Не найден руководитель для подразделения "+Подразделение);
				КонецЕсли;
				
			КонецЦикла;
			////_к
			
			
			
			Строка.Подразделение=Подразделение;
			Строка.Номер=1;
			Строка.Показатель=Перечисления.ВидыПоказателей.ЗаведВыполнениеПланаПоВыручке;
			Строка.Руководитель=Руководитель;
			Строка.РуководительФизЛицо=РуководительФизЛицо;
			
			//Находим вес и min/max
			ПоказателиВесГраница=ПолучитьПоказателиВесГраница(Перечисления.ВидыПоказателей.ЗаведВыполнениеПланаПоВыручке);
			Строка.Вес1=ПоказателиВесГраница.Вес1;
			Строка.Вес2=ПоказателиВесГраница.Вес2;
			Строка.MIN=ПоказателиВесГраница.Минимум;
			Строка.MAX=ПоказателиВесГраница.Максимум; 
			
			//Аптека,СуммаВсего,СуммаОптики,МД1,КоличествоДТМ,СуммаДТМ,КоличествоПродвижение,СуммаПродвижение,ЗМЗ12месПроц,ЗМЗ12месПроцОптики,КТЗ
			Строка.Факт=Стр.СуммаВсего;
			
			//Получаем данные План
			ПланыВыручки=ПолучитьПланыВыручки(Подразделение);
			Строка.План=ПланыВыручки.ПланПоВыручкеВсего;
			
			//Расчитываем показатель
			Если Строка.План=0 Тогда
				Строка.KPI=0;
			Иначе
				Строка.KPI=ОКР(Строка.Факт/Строка.План*100,2);
			КонецЕсли;
			
			Строка.KPIСУчетомГраниц=Строка.KPI;
			Если Строка.KPI<Строка.MIN Тогда
				Строка.KPIСУчетомГраниц=0;
			КонецЕсли;
			Если Строка.KPI>Строка.MAX Тогда
				Строка.KPIСУчетомГраниц=Строка.MAX;
			КонецЕсли;
			//Взвешиваем
			Если (ПланыВыручки.ПланПоВыручкеОптики=0) Тогда  //если есть оптика то находим другой процент
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес2/100,2);
			Иначе
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес1/100,2);	
			КонецЕсли;
			
			ИтогоKPIВзвеш=ИтогоKPIВзвеш+Строка.KPIВзвеш;
			
			// 2 строка Прирост выручки, сравниваем с прошлым годом                                        
			
			Строка=Объект.ПоказателиПоПодразделениям.Добавить();
			
			Строка.Подразделение=Подразделение;
			Строка.Номер=2;
			Строка.Показатель=Перечисления.ВидыПоказателей.ЗаведПриростВыручки;
			Строка.Руководитель=Руководитель;
			Строка.РуководительФизЛицо=РуководительФизЛицо;
			
			//Находим вес и min/max
			ПоказателиВесГраница=ПолучитьПоказателиВесГраница(Перечисления.ВидыПоказателей.ЗаведПриростВыручки);
			Строка.Вес1=ПоказателиВесГраница.Вес1;
			Строка.Вес2=ПоказателиВесГраница.Вес2;
			Строка.MIN=ПоказателиВесГраница.Минимум;
			Строка.MAX=ПоказателиВесГраница.Максимум;
			
			//Аптека,СуммаВсего,СуммаОптики,МД1,КоличествоДТМ,СуммаДТМ,КоличествоПродвижение,СуммаПродвижение,ЗМЗ12месПроц,ЗМЗ12месПроцОптики,КТЗ
			Строка.Факт=Стр.СуммаВсего; 
			
			
			//Получаем данные План
			СтрокаПрошлыйГод=ТаблицаПоказателиПрошлыйГод.Найти(Стр.Аптека,"Аптека");
			Если СтрокаПрошлыйГод=Неопределено Тогда
				Строка.План=Стр.СуммаВсего;      //должен быть факт за прошлый год если первый год работает то фак этого года
			Иначе
				Строка.План=СтрокаПрошлыйГод.СуммаВсего; 
			КонецЕсли;
			
			
			//Расчитываем показатель
			Если Строка.План=0 Тогда
				Строка.KPI=0;
			Иначе
				Строка.KPI=ОКР(Строка.Факт/Строка.План*100,2);
			КонецЕсли;
			Строка.KPIСУчетомГраниц=Строка.KPI;
			Если Строка.KPI<Строка.MIN Тогда
				Строка.KPIСУчетомГраниц=0;
			КонецЕсли;
			Если Строка.KPI>Строка.MAX Тогда
				Строка.KPIСУчетомГраниц=Строка.MAX;
			КонецЕсли;
			//Взвешиваем
			Если (ПланыВыручки.ПланПоВыручкеОптики=0) Тогда  //если есть оптика то находим другой процент
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес2/100,2);
			Иначе
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес1/100,2);	
			КонецЕсли;
			
			ИтогоKPIВзвеш=ИтогоKPIВзвеш+Строка.KPIВзвеш;
			
			// 3 строка  план по оптике                                       
			
			Строка=Объект.ПоказателиПоПодразделениям.Добавить();
			
			Строка.Подразделение=Подразделение;
			Строка.Номер=3;
			Строка.Показатель=Перечисления.ВидыПоказателей.ЗаведВыполнениеПланаПоВыручкеОптики;
			Строка.Руководитель=Руководитель;
			Строка.РуководительФизЛицо=РуководительФизЛицо;
			
			//Находим вес и min/max
			ПоказателиВесГраница=ПолучитьПоказателиВесГраница(Перечисления.ВидыПоказателей.ЗаведВыполнениеПланаПоВыручкеОптики);
			Строка.Вес1=ПоказателиВесГраница.Вес1;
			Строка.Вес2=ПоказателиВесГраница.Вес2;
			Строка.MIN=ПоказателиВесГраница.Минимум;
			Строка.MAX=ПоказателиВесГраница.Максимум;
			
			//Аптека,СуммаВсего,СуммаОптики,МД1,КоличествоДТМ,СуммаДТМ,КоличествоПродвижение,СуммаПродвижение,ЗМЗ12месПроц,ЗМЗ12месПроцОптики,КТЗ
			Строка.Факт=Стр.СуммаОптики; 
			
			//Получаем данные План
			Строка.План=ПланыВыручки.ПланПоВыручкеОптики; 
			
			//Расчитываем показатель
			Если Строка.План=0 Тогда
				Строка.KPI=0;
			Иначе
				Строка.KPI=ОКР(Строка.Факт/Строка.План*100,2);
			КонецЕсли;
			Строка.KPIСУчетомГраниц=Строка.KPI;
			Если Строка.KPI<Строка.MIN Тогда
				Строка.KPIСУчетомГраниц=0;
			КонецЕсли;
			Если Строка.KPI>Строка.MAX Тогда
				Строка.KPIСУчетомГраниц=Строка.MAX;
			КонецЕсли;
			//Взвешиваем
			Если (ПланыВыручки.ПланПоВыручкеОптики=0) Тогда  //если есть оптика то находим другой процент
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес2/100,2);
			Иначе
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес1/100,2);	
			КонецЕсли;
			
			ИтогоKPIВзвеш=ИтогоKPIВзвеш+Строка.KPIВзвеш;
			
			// 4 строка  КТЗ без оптики                                       
			Строка=Объект.ПоказателиПоПодразделениям.Добавить();
			
			Строка.Подразделение=Подразделение;
			Строка.Номер=4;
			Строка.Показатель=Перечисления.ВидыПоказателей.ЗаведКТЗБезОптики;
			Строка.Руководитель=Руководитель;
			Строка.РуководительФизЛицо=РуководительФизЛицо;
			
			//Находим вес и min/max
			ПоказателиВесГраница=ПолучитьПоказателиВесГраница(Перечисления.ВидыПоказателей.ЗаведКТЗБезОптики);
			Строка.Вес1=ПоказателиВесГраница.Вес1;
			Строка.Вес2=ПоказателиВесГраница.Вес2;
			Строка.MIN=ПоказателиВесГраница.Минимум;
			Строка.MAX=ПоказателиВесГраница.Максимум;
			
			//Аптека,СуммаВсего,СуммаОптики,МД1,КоличествоДТМ,СуммаДТМ,КоличествоПродвижение,СуммаПродвижение,ЗМЗ12месПроц,ЗМЗ12месПроцОптики,КТЗ
			Строка.Факт=Стр.КТЗ; 
			
			//Получаем данные План
			Строка.План=ПланыВыручки.КТЗБезОптики; 
			
			//Расчитываем показатель
			Если Строка.План=0 Тогда 
				Строка.KPI=Строка.MAX;
			Иначе
				Если (Строка.Факт/Строка.План>2) Тогда
					Строка.KPI=0;
				Иначе     
					Строка.KPI=ОКР((2-Строка.Факт/Строка.План)*100,2);
				КонецЕсли;
			КонецЕсли;
			
			Строка.KPIСУчетомГраниц=Строка.KPI;
			Если Строка.KPI<Строка.MIN Тогда
				Строка.KPIСУчетомГраниц=0;
			КонецЕсли;
			Если Строка.KPI>Строка.MAX Тогда
				Строка.KPIСУчетомГраниц=Строка.MAX;
			КонецЕсли;
			//Взвешиваем
			Если (ПланыВыручки.ПланПоВыручкеОптики=0) Тогда  //если есть оптика то находим другой процент
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес2/100,2);
			Иначе
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес1/100,2);	
			КонецЕсли;
			
			ИтогоKPIВзвеш=ИтогоKPIВзвеш+Строка.KPIВзвеш;
			
			// 5 ЗМЗ все товары                                       
			
			Строка=Объект.ПоказателиПоПодразделениям.Добавить();
			
			Строка.Подразделение=Подразделение;
			Строка.Номер=5;
			Строка.Показатель=Перечисления.ВидыПоказателей.ЗаведЗаморозка12;
			Строка.Руководитель=Руководитель;
			Строка.РуководительФизЛицо=РуководительФизЛицо;
			
			//Находим вес и min/max
			ПоказателиВесГраница=ПолучитьПоказателиВесГраница(Перечисления.ВидыПоказателей.ЗаведЗаморозка12);
			Строка.Вес1=ПоказателиВесГраница.Вес1;
			Строка.Вес2=ПоказателиВесГраница.Вес2;
			Строка.MIN=ПоказателиВесГраница.Минимум;
			Строка.MAX=ПоказателиВесГраница.Максимум;
			
			//Аптека,СуммаВсего,СуммаОптики,МД1,КоличествоДТМ,СуммаДТМ,КоличествоПродвижение,СуммаПродвижение,ЗМЗ12месПроц,ЗМЗ12месПроцОптики,КТЗ
			Строка.Факт=Стр.ЗМЗ12месПроц; 
			
			//Получаем данные План
			Строка.План=ПланыВыручки.ЗМЗБезОптики; 
			
			//Расчитываем показатель
			Если Строка.План=0 Тогда 
				Строка.KPI=Строка.MAX;
			Иначе
				Если (Строка.Факт/Строка.План>2) Тогда
					Строка.KPI=0;
				Иначе     
					Строка.KPI=ОКР((2-Строка.Факт/Строка.План)*100,2);
				КонецЕсли;
			КонецЕсли;
			
			Строка.KPIСУчетомГраниц=Строка.KPI;
			Если Строка.KPI<Строка.MIN Тогда
				Строка.KPIСУчетомГраниц=0;
			КонецЕсли;
			Если Строка.KPI>Строка.MAX Тогда
				Строка.KPIСУчетомГраниц=Строка.MAX;
			КонецЕсли;
			//Взвешиваем
			Если (ПланыВыручки.ПланПоВыручкеОптики=0) Тогда  //если есть оптика то находим другой процент
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес2/100,2);
			Иначе
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес1/100,2);	
			КонецЕсли;
			
			ИтогоKPIВзвеш=ИтогоKPIВзвеш+Строка.KPIВзвеш;
			
			// 6 ЗМЗ оптики                                       
			
			Строка=Объект.ПоказателиПоПодразделениям.Добавить();
			
			Строка.Подразделение=Подразделение;
			Строка.Номер=6;
			Строка.Показатель=Перечисления.ВидыПоказателей.ЗаведЗаморозка12Оптики;
			Строка.Руководитель=Руководитель;
			Строка.РуководительФизЛицо=РуководительФизЛицо;
			
			//Находим вес и min/max
			ПоказателиВесГраница=ПолучитьПоказателиВесГраница(Перечисления.ВидыПоказателей.ЗаведЗаморозка12Оптики);
			Строка.Вес1=ПоказателиВесГраница.Вес1;
			Строка.Вес2=ПоказателиВесГраница.Вес2;
			Строка.MIN=ПоказателиВесГраница.Минимум;
			Строка.MAX=ПоказателиВесГраница.Максимум;
			
			//Аптека,СуммаВсего,СуммаОптики,МД1,КоличествоДТМ,СуммаДТМ,КоличествоПродвижение,СуммаПродвижение,ЗМЗ12месПроц,ЗМЗ12месПроцОптики,КТЗ
			Строка.Факт=Стр.ЗМЗ12месПроцОптики; 
			
			//Получаем данные План
			Строка.План=ПланыВыручки.ЗМЗОптики; 
			
			//Расчитываем показатель
			Если Строка.План=0 Тогда 
				Строка.KPI=Строка.MAX;
			Иначе
				Если (Строка.Факт/Строка.План>2) Тогда
					Строка.KPI=0;
				Иначе     
					Строка.KPI=ОКР((2-Строка.Факт/Строка.План)*100,2);
				КонецЕсли;
			КонецЕсли;
			
			Строка.KPIСУчетомГраниц=Строка.KPI;
			Если Строка.KPI<Строка.MIN Тогда
				Строка.KPIСУчетомГраниц=0;
			КонецЕсли;
			Если Строка.KPI>Строка.MAX Тогда
				Строка.KPIСУчетомГраниц=Строка.MAX;
			КонецЕсли;
			//Взвешиваем
			Если (ПланыВыручки.ПланПоВыручкеОптики=0) Тогда  //если есть оптика то находим другой процент
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес2/100,2);
			Иначе
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес1/100,2);	
			КонецЕсли;
			ИтогоKPIВзвеш=ИтогоKPIВзвеш+Строка.KPIВзвеш;
			
			// 7 строка  план по ДТМ                                       
			
			Строка=Объект.ПоказателиПоПодразделениям.Добавить();
			
			Строка.Подразделение=Подразделение;
			Строка.Номер=7;
			Строка.Показатель=Перечисления.ВидыПоказателей.ЗаведВыполнениеПланаПоДТМ;
			Строка.Руководитель=Руководитель;
			Строка.РуководительФизЛицо=РуководительФизЛицо;
			
			//Находим вес и min/max
			ПоказателиВесГраница=ПолучитьПоказателиВесГраница(Перечисления.ВидыПоказателей.ЗаведВыполнениеПланаПоДТМ);
			Строка.Вес1=ПоказателиВесГраница.Вес1;
			Строка.Вес2=ПоказателиВесГраница.Вес2;
			Строка.MIN=ПоказателиВесГраница.Минимум;
			Строка.MAX=ПоказателиВесГраница.Максимум;
			
			//Аптека,СуммаВсего,СуммаОптики,МД1,КоличествоДТМ,СуммаДТМ,КоличествоПродвижение,СуммаПродвижение,ЗМЗ12месПроц,ЗМЗ12месПроцОптики,КТЗ
			Строка.Факт=Стр.СуммаДТМ; 
			
			//Получаем данные План
			Строка.План=окр(ПланыВыручки.ПланПоВыручкеВсего*7/100,2);  //????????????????????????
			
			//Расчитываем показатель
			Если Строка.План=0 Тогда
				Строка.KPI=0;
			Иначе
				Строка.KPI=ОКР(Строка.Факт/Строка.План*100,2);
			КонецЕсли;
			Строка.KPIСУчетомГраниц=Строка.KPI;
			Если Строка.KPI<Строка.MIN Тогда
				Строка.KPIСУчетомГраниц=0;
			КонецЕсли;
			Если Строка.KPI>Строка.MAX Тогда
				Строка.KPIСУчетомГраниц=Строка.MAX;
			КонецЕсли;
			//Взвешиваем
			Если (ПланыВыручки.ПланПоВыручкеОптики=0) Тогда  //если есть оптика то находим другой процент
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес2/100,2);
			Иначе
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес1/100,2);	
			КонецЕсли;
			ИтогоKPIВзвеш=ИтогоKPIВзвеш+Строка.KPIВзвеш;
			
			// 8 строка  план по Продвижению товаров                                       
			
			Строка=Объект.ПоказателиПоПодразделениям.Добавить();
			
			Строка.Подразделение=Подразделение;
			Строка.Номер=8;
			Строка.Показатель=Перечисления.ВидыПоказателей.ЗаведВыполнениеПланаТоваровНаПродвижении;
			Строка.Руководитель=Руководитель;
			Строка.РуководительФизЛицо=РуководительФизЛицо;
			
			//Находим вес и min/max
			ПоказателиВесГраница=ПолучитьПоказателиВесГраница(Перечисления.ВидыПоказателей.ЗаведВыполнениеПланаТоваровНаПродвижении);
			Строка.Вес1=ПоказателиВесГраница.Вес1;
			Строка.Вес2=ПоказателиВесГраница.Вес2;
			Строка.MIN=ПоказателиВесГраница.Минимум;
			Строка.MAX=ПоказателиВесГраница.Максимум;
			
			//Аптека,СуммаВсего,СуммаОптики,МД1,КоличествоДТМ,СуммаДТМ,КоличествоПродвижение,СуммаПродвижение,ЗМЗ12месПроц,ЗМЗ12месПроцОптики,КТЗ
			Строка.Факт=Стр.СуммаПродвижение; 
			
			//Получаем данные План
			Строка.План=окр(ПланыВыручки.ПланПоВыручкеВсего*2/100,2); //????????????????????????????
			
			//Расчитываем показатель
			Если Строка.План=0 Тогда
				Строка.KPI=0;
			Иначе
				Строка.KPI=ОКР(Строка.Факт/Строка.План*100,2);
			КонецЕсли;
			Строка.KPIСУчетомГраниц=Строка.KPI;
			Если Строка.KPI<Строка.MIN Тогда
				Строка.KPIСУчетомГраниц=0;
			КонецЕсли;
			Если Строка.KPI>Строка.MAX Тогда
				Строка.KPIСУчетомГраниц=Строка.MAX;
			КонецЕсли;
			//Взвешиваем
			Если (ПланыВыручки.ПланПоВыручкеОптики=0) Тогда  //если есть оптика то находим другой процент
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес2/100,2);
			Иначе
				Строка.KPIВзвеш=окр(Строка.KPIСУчетомГраниц*Строка.Вес1/100,2);	
			КонецЕсли;
			ИтогоKPIВзвеш=ИтогоKPIВзвеш+Строка.KPIВзвеш;
			
			// 9 строка  МД1                                       
			
			Строка=Объект.ПоказателиПоПодразделениям.Добавить();
			
			Строка.Подразделение=Подразделение;
			Строка.Номер=9;
			Строка.Показатель=Перечисления.ВидыПоказателей.ЗаведМД1;
			Строка.Руководитель=Руководитель;
			Строка.РуководительФизЛицо=РуководительФизЛицо;
			
			//Аптека,СуммаВсего,СуммаОптики,МД1,КоличествоДТМ,СуммаДТМ,КоличествоПродвижение,СуммаПродвижение,ЗМЗ12месПроц,ЗМЗ12месПроцОптики,КТЗ
			Строка.Факт=Стр.МД1; 
			
			// 10 строка Итого с учетом мин и макс
			Строка=Объект.ПоказателиПоПодразделениям.Добавить();
			
			Строка.Подразделение=Подразделение;
			Строка.Номер=10;
			Строка.Показатель=Перечисления.ВидыПоказателей.ЗаведИтого;
			Строка.Руководитель=Руководитель;
			Строка.РуководительФизЛицо=РуководительФизЛицо;
			
			//Находим вес и min/max
			ПоказателиВесГраница=ПолучитьПоказателиВесГраница(Перечисления.ВидыПоказателей.ЗаведИтого);
			Строка.Вес1=ПоказателиВесГраница.Вес1;
			Строка.Вес2=ПоказателиВесГраница.Вес2;
			Строка.MIN=ПоказателиВесГраница.Минимум;
			Строка.MAX=ПоказателиВесГраница.Максимум;
			
			//выводим итоговый KPI
			Строка.KPIВзвеш=ИтогоKPIВзвеш;
			
		Иначе
			Сообщить("При загрузке данных из ЕРП не найдено подразделение "+Стр.Аптека);
		КонецЕсли;
		
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоказатели(Команда)
	ЗаполнитьПоказателиНаСервере();
КонецПроцедуры

Функция ПолучитьПоказателиВесГраница(Показатель)
	//Находим вес и min/max
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ Первые 1
	|	ПоказателиВесГраницаСрезПоследних.Показатель КАК Показатель,
	|	ПоказателиВесГраницаСрезПоследних.Вес КАК Вес,
	|	ПоказателиВесГраницаСрезПоследних.Вес2 КАК Вес2,
	|	ПоказателиВесГраницаСрезПоследних.Минимум КАК Минимум,
	|	ПоказателиВесГраницаСрезПоследних.Максимум КАК Максимум
	|ИЗ
	|	РегистрСведений.ПоказателиВесГраница.СрезПоследних(&Период, Показатель = &Показатель) КАК ПоказателиВесГраницаСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", Объект.ПериодРасчетаС); //!!!!!!!!!!!!?
	Запрос.УстановитьПараметр("Показатель", Показатель);
	
	Результат=Новый	Структура;
	Результат.Вставить("Вес1",0);
	Результат.Вставить("Вес2",0);
	Результат.Вставить("Минимум",0);
	Результат.Вставить("Максимум",0);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Результат.Вес1=ВыборкаДетальныеЗаписи.Вес;
			Результат.Вес2=ВыборкаДетальныеЗаписи.Вес2;
			Результат.Минимум=ВыборкаДетальныеЗаписи.Минимум;
			Результат.Максимум=ВыборкаДетальныеЗаписи.Максимум;
		КонецЦикла;
	Иначе;
		Сообщить("Не заполнены параметры Показатели вес граница для показателя "+Строка(Показатель)); 
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ПолучитьПланыВыручки(Подразделение)
	//Находим вес и min/max
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПланыВыручкиПоАптекам.Период КАК Период,
	|	ПланыВыручкиПоАптекам.Подразделение КАК Подразделение,
	|	ПланыВыручкиПоАптекам.ПланПоВыручкеВсего КАК ПланПоВыручкеВсего,
	|	ПланыВыручкиПоАптекам.ПланПоВыручкеОптики КАК ПланПоВыручкеОптики,
	|	ПланыВыручкиПоАптекам.КабинетВрача КАК КабинетВрача,
	|	ПланыВыручкиПоАптекам.КТЗБезОптики КАК КТЗБезОптики,
	|	ПланыВыручкиПоАптекам.ЗМЗБезОптики КАК ЗМЗБезОптики,
	|	ПланыВыручкиПоАптекам.ЗМЗОптики КАК ЗМЗОптики
	|ИЗ
	|	РегистрСведений.ПланыВыручкиПоАптекам КАК ПланыВыручкиПоАптекам
	|ГДЕ
	|	ПланыВыручкиПоАптекам.Подразделение = &Подразделение
	|	И ПланыВыручкиПоАптекам.Период = &Период";
	
	//"ВЫБРАТЬ ПЕРВЫЕ 1
	//|	ПланыВыручкиПоАптекамСрезПоследних.Подразделение КАК Подразделение,
	//|	ПланыВыручкиПоАптекамСрезПоследних.ПланПоВыручкеВсего КАК ПланПоВыручкеВсего,
	//|	ПланыВыручкиПоАптекамСрезПоследних.ПланПоВыручкеОптики КАК ПланПоВыручкеОптики,
	//|	ПланыВыручкиПоАптекамСрезПоследних.КабинетВрача КАК КабинетВрача,
	//|	ПланыВыручкиПоАптекамСрезПоследних.КТЗБезОптики КАК КТЗБезОптики,
	//|	ПланыВыручкиПоАптекамСрезПоследних.ЗМЗБезОптики КАК ЗМЗБезОптики,
	//|	ПланыВыручкиПоАптекамСрезПоследних.ЗМЗОптики КАК ЗМЗОптики
	//|ИЗ
	//|	РегистрСведений.ПланыВыручкиПоАптекам.СрезПоследних(&Период, Подразделение = &Подразделение) КАК ПланыВыручкиПоАптекамСрезПоследних";
	Запрос.УстановитьПараметр("Период", НачалоМесяца(Объект.ПериодРасчетаС));
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Результат=Новый	Структура;
	Результат.Вставить("ПланПоВыручкеВсего",0);
	Результат.Вставить("ПланПоВыручкеОптики",0);
	Результат.Вставить("КабинетВрача",Ложь);
	Результат.Вставить("КТЗБезОптики",0);
	Результат.Вставить("ЗМЗБезОптики",0);
	Результат.Вставить("ЗМЗОптики",0);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Результат.ПланПоВыручкеВсего=ВыборкаДетальныеЗаписи.ПланПоВыручкеВсего;
			Результат.ПланПоВыручкеОптики=ВыборкаДетальныеЗаписи.ПланПоВыручкеОптики;
			Результат.КабинетВрача=ВыборкаДетальныеЗаписи.КабинетВрача;
			Результат.КТЗБезОптики=ВыборкаДетальныеЗаписи.КТЗБезОптики;
			Результат.ЗМЗБезОптики=ВыборкаДетальныеЗаписи.ЗМЗБезОптики;
			Результат.ЗМЗОптики=ВыборкаДетальныеЗаписи.ЗМЗОптики;
		КонецЦикла;
	Иначе;
		Сообщить("Не заполнены параметры ""Планы выручки по аптекам"" для подразделения "+Строка(Подразделение)); 
	КонецЕсли;
	Возврат Результат;
КонецФункции


&НаСервере
Процедура ЗаполнитьТЧРасчетНаСервере()
	
	Объект.ТЧРасчет.Очистить();
	//Получаем показатели по аптекам
	ТабПоказателиПоАптекам=Объект.ПоказателиПоПодразделениям.Выгрузить();
	
	//Получаем список сотрудников
	МВТ = Новый МенеджерВременныхТаблиц;
	ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц.НачалоПериода = Объект.ПериодВыплатыС;	
	ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц.ОкончаниеПериода = Объект.ПериодВыплатыПо;
	ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц.КадровыеДанные = "Сотрудник, ФизическоеЛицо,Подразделение, ФИО, Должность, РазрядКатегория, ВидЗанятости, Состояние, КоличествоСтавок";
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(МВТ , Истина, ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеТабельногоУчетаРабочегоВремениСотрудниковОбороты.Сотрудник КАК Сотрудник,
	|	ВТСотрудникиОрганизации.ФИО КАК ФИО,
	|	ВТСотрудникиОрганизации.Подразделение КАК Подразделение,
	|	ВТСотрудникиОрганизации.Должность КАК Должность,
	|	ВТСотрудникиОрганизации.РазрядКатегория КАК РазрядКатегория,
	|	ВТСотрудникиОрганизации.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТ_ВсеСотрудники
	|ИЗ
	|	РегистрНакопления.ДанныеТабельногоУчетаРабочегоВремениСотрудников.Обороты(&НачалоПериода, &КонецПериода, , ) КАК ДанныеТабельногоУчетаРабочегоВремениСотрудниковОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиОрганизации КАК ВТСотрудникиОрганизации
	|		ПО ДанныеТабельногоУчетаРабочегоВремениСотрудниковОбороты.Сотрудник = ВТСотрудникиОрганизации.Сотрудник
	|			и (ВТСотрудникиОрганизации.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы))
	|			И (ВТСотрудникиОрганизации.Должность=&Должность)
	|ГДЕ
	|	ДанныеТабельногоУчетаРабочегоВремениСотрудниковОбороты.ЧасыОборот > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеТабельногоУчетаРабочегоВремениСотрудниковОбороты.Сотрудник,
	|	ВТСотрудникиОрганизации.ФИО,
	|	ВТСотрудникиОрганизации.Подразделение,
	|	ВТСотрудникиОрганизации.Должность,
	|	ВТСотрудникиОрганизации.РазрядКатегория,
	|	ВТСотрудникиОрганизации.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияЗППоАптекам.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТ_УжеНачислен
	|ИЗ
	|	РегистрСведений.НачисленияЗППоАптекам КАК НачисленияЗППоАптекам
	|ГДЕ
	|	НачисленияЗППоАптекам.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И  НачисленияЗППоАптекам.Должность=&Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеСотрудники.Сотрудник КАК Сотрудник,
	|	ВТ_ВсеСотрудники.ФИО КАК ФИО,
	|	ВТ_ВсеСотрудники.Подразделение КАК Подразделение,
	|	ВТ_ВсеСотрудники.Должность КАК Должность,
	|	ВТ_ВсеСотрудники.РазрядКатегория КАК РазрядКатегория,
	|	ВТ_ВсеСотрудники.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТ_ВсеСотрудники КАК ВТ_ВсеСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УжеНачислен КАК ВТ_УжеНачислен
	|		ПО ВТ_ВсеСотрудники.ФизическоеЛицо = ВТ_УжеНачислен.ФизическоеЛицо
	|ГДЕ
	|	ВТ_УжеНачислен.ФизическоеЛицо ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ВсеСотрудники.Сотрудник,
	|	ВТ_ВсеСотрудники.ФИО,
	|	ВТ_ВсеСотрудники.Подразделение,
	|	ВТ_ВсеСотрудники.Должность,
	|	ВТ_ВсеСотрудники.РазрядКатегория,
	|	ВТ_ВсеСотрудники.ФизическоеЛицо
	|Упорядочить ПО
	|	ВТ_ВсеСотрудники.ФИО";
	Запрос.УстановитьПараметр("НачалоПериода", Объект.ПериодВыплатыС);
	Запрос.УстановитьПараметр("КонецПериода", Объект.ПериодВыплатыПо);
	
	
	ДолжностьЗавед=Справочники.Должности.НайтиПоНаименованию("Заведующий аптекой"); 
	
	//МассивДолжность=Новый Массив;
	//МассивДолжность.Добавить(ДолжностьЗавед);
	//МассивДолжность.Добавить(Справочники.Должности.НайтиПоНаименованию("Заведующий интернет-аптекой"));
	
	Запрос.УстановитьПараметр("Должность", ДолжностьЗавед);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрока = Объект.ТЧРасчет.Добавить();
		НоваяСтрока.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		//НоваяСтрока.РазрядКатегория=РазрядКатегория;
		НоваяСтрока.ФизическоеЛицо = ВыборкаДетальныеЗаписи.ФизическоеЛицо;
		НоваяСтрока.ИНН = ВыборкаДетальныеЗаписи.ФизическоеЛицо.ИНН;
		НоваяСтрока.ТН = ВыборкаДетальныеЗаписи.Сотрудник.Код;
		НоваяСтрока.Должность = ВыборкаДетальныеЗаписи.Должность;
		НоваяСтрока.ОсновнаяАптека = ВыборкаДетальныеЗаписи.Подразделение;
		//НоваяСтрока.ПодразделениеСотрудника=ПодразделениеСотрудника;
		//КонецЕсли;	                  
		
		//Количетво отработанных часов
		Запрос1 = Новый Запрос;
		Запрос1.Текст = 
		"ВЫБРАТЬ Первые 1
		|	ДанныеТабельногоУчетаРабочегоВремениСотрудниковОбороты.Сотрудник КАК Сотрудник,
		|	ДанныеТабельногоУчетаРабочегоВремениСотрудниковОбороты.ДниОборот КАК ДниОборот,
		|	ДанныеТабельногоУчетаРабочегоВремениСотрудниковОбороты.ЧасыОборот КАК ЧасыОборот
		|ИЗ
		|	РегистрНакопления.ДанныеТабельногоУчетаРабочегоВремениСотрудников.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			,
		|			ВидУчетаВремени В (&ВидыУчетаВремени)
		|				И Сотрудник = &Сотрудник) КАК ДанныеТабельногоУчетаРабочегоВремениСотрудниковОбороты";
		ВидыВремени=Новый Массив;
		ВидыВремени.Добавить(Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("Явка"));
		ВидыВремени.Добавить(Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("Ночные часы"));
		ВидыВремени.Добавить(Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("Командировка"));
		
		Запрос1.УстановитьПараметр("ВидыУчетаВремени", ВидыВремени);
		Запрос1.УстановитьПараметр("ДатаНачала", Объект.ПериодВыплатыС);
		Запрос1.УстановитьПараметр("ДатаОкончания", Объект.ПериодВыплатыПо);
		Запрос1.УстановитьПараметр("Сотрудник", ВыборкаДетальныеЗаписи.Сотрудник);
		
		РезультатЗапроса1 = Запрос1.Выполнить();
		
		ВыборкаДетальныеЗаписи1 = РезультатЗапроса1.Выбрать();
		
		НоваяСтрока.ОтработаноВсего=0;
		Пока ВыборкаДетальныеЗаписи1.Следующий() Цикл
			НоваяСтрока.ОтработаноВсего=ВыборкаДетальныеЗаписи1.ДниОборот;
		КонецЦикла;
		
		//Кол-во аптек
		Запрос3 = Новый Запрос;
		Запрос3.Текст = 
		"ВЫБРАТЬ
		|	Показатели.Руководитель КАК Руководитель,
		|	Показатели.РуководительФизЛицо КАК РуководительФизЛицо,
		|	Показатели.Подразделение КАК Подразделение,
		|	Показатели.Показатель КАК Показатель,
		|	Показатели.Факт КАК Факт,
		|	Показатели.KPIВзвеш КАК KPIВзвеш
		|ПОМЕСТИТЬ ВТ_Показатели
		|ИЗ
		|	&Показатели КАК Показатели
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Показатели.РуководительФизЛицо КАК РуководительФизЛицо,
		|	ВТ_Показатели.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВТ_Количество
		|ИЗ
		|	ВТ_Показатели КАК ВТ_Показатели
		|ГДЕ
		|	ВТ_Показатели.РуководительФизЛицо = &РуководительФизЛицо
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Показатели.Подразделение,
		|	ВТ_Показатели.РуководительФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ВТ_Количество.Подразделение) КАК Количество
		|ИЗ
		|	ВТ_Количество КАК ВТ_Количество";
		
		Запрос3.УстановитьПараметр("Показатели",ТабПоказателиПоАптекам);
		Запрос3.УстановитьПараметр("РуководительФизЛицо",ВыборкаДетальныеЗаписи.ФизическоеЛицо);
		
		РезультатЗапроса3 = Запрос3.Выполнить();
		
		ВыборкаДетальныеЗаписи3 = РезультатЗапроса3.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи3.Следующий() Цикл
			НоваяСтрока.КоличествоАптек=ВыборкаДетальныеЗаписи3.Количество;
		КонецЦикла;
		
		//Процен KPI
		Запрос3.Текст = 
		"ВЫБРАТЬ
		|	Показатели.Руководитель КАК Руководитель,
		|	Показатели.РуководительФизЛицо КАК РуководительФизЛицо,
		|	Показатели.Подразделение КАК Подразделение,
		|	Показатели.Показатель КАК Показатель,
		|	Показатели.План КАК План,
		|	Показатели.Факт КАК Факт,
		|	Показатели.KPIВзвеш КАК KPIВзвеш
		|ПОМЕСТИТЬ ВТ_Показатели
		|ИЗ
		|	&Показатели КАК Показатели
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Показатели.РуководительФизЛицо КАК РуководительФизЛицо,
		|	СУММА(ВТ_Показатели.KPIВзвеш) КАК KPIВзвеш,
		|	СУММА(ВТ_Показатели.План) КАК План,
		|	СУММА(ВТ_Показатели.Факт) КАК Факт
		|ИЗ
		|	ВТ_Показатели КАК ВТ_Показатели
		|ГДЕ
		|	ВТ_Показатели.Показатель = &Показатель
		|	И ВТ_Показатели.РуководительФизЛицо = &РуководительФизЛицо
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Показатели.РуководительФизЛицо"; 
		
		Запрос3.УстановитьПараметр("Показатели",ТабПоказателиПоАптекам);
		Запрос3.УстановитьПараметр("РуководительФизЛицо",ВыборкаДетальныеЗаписи.ФизическоеЛицо);
		Запрос3.УстановитьПараметр("Показатель",перечисления.ВидыПоказателей.ЗаведИтого);
		
		РезультатЗапроса3 = Запрос3.Выполнить();
		
		ВыборкаДетальныеЗаписи3 = РезультатЗапроса3.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи3.Следующий() Цикл
			Если НоваяСтрока.КоличествоАптек>0 Тогда
				НоваяСтрока.KPIПроцент=окр(ВыборкаДетальныеЗаписи3.KPIВзвеш/НоваяСтрока.КоличествоАптек,2);
			Иначе
				НоваяСтрока.KPIПроцент=0
			КонецЕсли; 
		КонецЦикла;
		
		//Находим СуммаМД1 
		Запрос3.УстановитьПараметр("Показатели",ТабПоказателиПоАптекам);
		Запрос3.УстановитьПараметр("РуководительФизЛицо",ВыборкаДетальныеЗаписи.ФизическоеЛицо);
		Запрос3.УстановитьПараметр("Показатель",перечисления.ВидыПоказателей.ЗаведМД1);
		
		РезультатЗапроса3 = Запрос3.Выполнить();
		
		ВыборкаДетальныеЗаписи3 = РезультатЗапроса3.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи3.Следующий() Цикл
			НоваяСтрока.СуммаМД1=ВыборкаДетальныеЗаписи3.Факт;
		КонецЦикла;
		
		
		//Проверяем наличие оптики 
		Запрос3.Текст = 
		"ВЫБРАТЬ
		|	Показатели.Руководитель КАК Руководитель,
		|	Показатели.РуководительФизЛицо КАК РуководительФизЛицо,
		|	Показатели.Подразделение КАК Подразделение,
		|	Показатели.Показатель КАК Показатель,
		|	Показатели.План КАК План,
		|	Показатели.Факт КАК Факт,
		|	Показатели.KPIВзвеш КАК KPIВзвеш
		|ПОМЕСТИТЬ ВТ_Показатели
		|ИЗ
		|	&Показатели КАК Показатели
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Показатели.РуководительФизЛицо КАК РуководительФизЛицо,
		|	ВТ_Показатели.Подразделение КАК Подразделение,
		|	СУММА(ВТ_Показатели.План) КАК План
		|ИЗ
		|	ВТ_Показатели КАК ВТ_Показатели
		|ГДЕ
		|	ВТ_Показатели.Показатель = &Показатель
		|	И ВТ_Показатели.РуководительФизЛицо = &РуководительФизЛицо
		|	И ВТ_Показатели.План > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Показатели.РуководительФизЛицо,
		|	ВТ_Показатели.Подразделение";	
		Запрос3.УстановитьПараметр("Показатели",ТабПоказателиПоАптекам);
		Запрос3.УстановитьПараметр("РуководительФизЛицо",ВыборкаДетальныеЗаписи.ФизическоеЛицо);
		Запрос3.УстановитьПараметр("Показатель",перечисления.ВидыПоказателей.ЗаведВыполнениеПланаПоВыручкеОптики);
		
		РезультатЗапроса3 = Запрос3.Выполнить();
		
		ВыборкаДетальныеЗаписи3 = РезультатЗапроса3.Выбрать();
		
		НоваяСтрока.Оптика=Ложь;
		НоваяСтрока.КолСОптикой=0;
		Пока ВыборкаДетальныеЗаписи3.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи3.План>0 Тогда
				НоваяСтрока.Оптика=Истина;
				НоваяСтрока.КолСОптикой=НоваяСтрока.КолСОптикой+1;
			КонецЕсли;
		КонецЦикла;
		
		//Кабинет врача
		Запрос3 = Новый Запрос;
		Запрос3.Текст = 
		"ВЫБРАТЬ
		|	Показатели.Руководитель КАК Руководитель,
		|	Показатели.РуководительФизЛицо КАК РуководительФизЛицо,
		|	Показатели.Подразделение КАК Подразделение,
		|	Показатели.Показатель КАК Показатель,
		|	Показатели.Факт КАК Факт,
		|	Показатели.KPIВзвеш КАК KPIВзвеш
		|ПОМЕСТИТЬ ВТ_Показатели
		|ИЗ
		|	&Показатели КАК Показатели
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Показатели.РуководительФизЛицо КАК РуководительФизЛицо,
		|	ВТ_Показатели.Подразделение КАК Подразделение
		|ИЗ
		|	ВТ_Показатели КАК ВТ_Показатели
		|ГДЕ
		|	ВТ_Показатели.РуководительФизЛицо = &РуководительФизЛицо
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Показатели.Подразделение,
		|	ВТ_Показатели.РуководительФизЛицо";
		
		Запрос3.УстановитьПараметр("Показатели",ТабПоказателиПоАптекам);
		Запрос3.УстановитьПараметр("РуководительФизЛицо",ВыборкаДетальныеЗаписи.ФизическоеЛицо);
		
		РезультатЗапроса3 = Запрос3.Выполнить();
		
		ВыборкаДетальныеЗаписи3 = РезультатЗапроса3.Выбрать();
		
		НоваяСтрока.Аптеки="";
		
		НоваяСтрока.КабинетВрача=Ложь;
		НоваяСтрока.КолКабинетовВрача=0;
		
		Пока ВыборкаДетальныеЗаписи3.Следующий() Цикл
			
			НоваяСтрока.Аптеки=НоваяСтрока.Аптеки+" "+Сред(ВыборкаДетальныеЗаписи3.Подразделение,СтрНайти(ВыборкаДетальныеЗаписи3.Подразделение,"№"),3);
			
			ПланыВыручки=ПолучитьПланыВыручки(ВыборкаДетальныеЗаписи3.Подразделение);
			Если ПланыВыручки.КабинетВрача Тогда
				НоваяСтрока.КабинетВрача=Истина;
				НоваяСтрока.КолКабинетовВрача=НоваяСтрока.КолКабинетовВрача+1;
				КонецЕсли;
		КонецЦикла;
		
		
	КонецЦикла;
	
	ДозаполнитьТаблицуДаннымиПоУдержаниям();	
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьТЧРасчет(Команда)
	Если Объект.ТЧРасчет.Количество()>0 Тогда
		Значение=ОткрытьФормуМодально("Документ.Аптека_НачислениеЗарплатыЗавед.Форма.ФормаОчисткиДокумента");
		Если Значение Тогда
			ЗаполнитьТЧРасчетНаСервере();
		КонецЕсли;
	Иначе
		ЗаполнитьТЧРасчетНаСервере();
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура РассчитатьДанныеНаСервере()
	//Данные производсвенного календаря
	Запрос2 = Новый Запрос;
	Запрос2.Текст = 
	"ВЫБРАТЬ
	|	ДанныеПроизводственногоКалендаряПомесячно.РабочихДней КАК РабочихДней
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаряПомесячно КАК ДанныеПроизводственногоКалендаряПомесячно
	|ГДЕ
	|	ДанныеПроизводственногоКалендаряПомесячно.Год = &Год
	|	И ДанныеПроизводственногоКалендаряПомесячно.Месяц = &Месяц
	|	И ДанныеПроизводственногоКалендаряПомесячно.ПроизводственныйКалендарь = &ПроизводственныйКалендарь";
	
	Запрос2.УстановитьПараметр("Год", Год(Объект.ПериодВыплатыС));
	Запрос2.УстановитьПараметр("Месяц", НачалоМесяца(Объект.ПериодВыплатыПо));
	Запрос2.УстановитьПараметр("ПроизводственныйКалендарь", Справочники.ПроизводственныеКалендари.НайтиПоНаименованию("Российская Федерация"));
	
	РезультатЗапроса2 = Запрос2.Выполнить();
	РабочихДней=22;
	Если НЕ РезультатЗапроса2.Пустой() Тогда
		ВыборкаДетальныеЗаписи2 = РезультатЗапроса2.Выбрать();
		Пока ВыборкаДетальныеЗаписи2.Следующий() Цикл
			РабочихДней=ВыборкаДетальныеЗаписи2.РабочихДней	
		КонецЦикла;
	Иначе
		Сообщить("Не найдено кол-во дней в производсвенном календаре Российская Федерация, берем 22 дня ");
	КонецЕсли;
	
	//Перебираем сотрудников
	Для каждого стрСотр Из Объект.ТЧРасчет Цикл
		
		//Заполняем показатели	
		Запрос3=Новый Запрос;
		Запрос3.Текст = 
		"ВЫБРАТЬ
		|	ПоказателиЗаведСрезПоследних.ДоплатаЗаОптику КАК ДоплатаЗаОптику,
		|	ПоказателиЗаведСрезПоследних.ДоплатаЗаКабинетВрача КАК ДоплатаЗаКабинетВрача,
		|	ПоказателиЗаведСрезПоследних.Оклад КАК Оклад,
		|	ПоказателиЗаведСрезПоследних.KPIСтавка КАК KPIСтавка,
		|	ПоказателиЗаведСрезПоследних.MIN КАК MIN,
		|	ПоказателиЗаведСрезПоследних.MAX КАК MAX
		|ИЗ
		|	РегистрСведений.ПоказателиЗавед.СрезПоследних(&Период, КоличествоАптек = &КоличествоАптек) КАК ПоказателиЗаведСрезПоследних";
		
		ДоплатаЗаОптику=0;
		ДоплатаЗаКабинетВрача=0;
		Оклад=0;
		KPIСтавка=0;
		Минимум=0;
		Максимум=0;
		
		Если стрСотр.ОтработаноВсего>РабочихДней Тогда
			Сообщить("Внимание! По сотруднику "+стрСотр.Сотрудник+" ОтработаноВсего больше чем дней в производственном календаре="+РабочихДней+" Меняем значение="+стрСотр.ОтработаноВсего);
			стрСотр.ОтработаноВсего=РабочихДней;
		КонецЕсли;
		Коэффициент=стрСотр.ОтработаноВсего/РабочихДней;
		
		Запрос3.УстановитьПараметр("КоличествоАптек", стрСотр.КоличествоАптек);
		Запрос3.УстановитьПараметр("Период", Объект.ПериодВыплатыС);
		
		РезультатЗапроса3 = Запрос3.Выполнить();
		Если РезультатЗапроса3.Пустой() Тогда
			Сообщить("Не заполнены параметры по РС-Показатели Завед для количества аптек="+стрСотр.КоличествоАптек+" на дату="+Строка(Объект.ПериодВыплатыС));
		Иначе
			ВыборкаДетальныеЗаписи3 = РезультатЗапроса3.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи3.Следующий() Цикл
				ДоплатаЗаОптику=ВыборкаДетальныеЗаписи3.ДоплатаЗаОптику;
				ДоплатаЗаКабинетВрача=ВыборкаДетальныеЗаписи3.ДоплатаЗаКабинетВрача;
				Оклад=ВыборкаДетальныеЗаписи3.Оклад;
				KPIСтавка=ВыборкаДетальныеЗаписи3.KPIСтавка;
				Минимум=ВыборкаДетальныеЗаписи3.MIN;
				Максимум=ВыборкаДетальныеЗаписи3.MAX;
			КонецЦикла;
		КонецЕсли;	
		
		стрСотр.Оклад=окр(Оклад*Коэффициент,2);
		
		//Считаем доплату за оптику
		стрСотр.ДоплатаЗаОптику=0;
		Если стрСотр.Оптика Тогда
			стрСотр.ДоплатаЗаОптику=Окр(ДоплатаЗаОптику*стрСотр.КолСОптикой*Коэффициент,2);
		КонецЕсли;
		
		
		//Кабинет врача
		стрСотр.ДоплатаЗаКабинетВрача=0;
		Если стрСотр.КабинетВрача Тогда 
			стрСотр.ДоплатаЗаКабинетВрача=Окр(ДоплатаЗаКабинетВрача*стрСотр.КолКабинетовВрача*Коэффициент,2);
		КонецЕсли;
			
			
			
			//Находим KPIПроцент			
			стрСотр.KPIСтавка=окр(KPIСтавка*Коэффициент,2);
			стрСотр.Минимум=Минимум;
			стрСотр.Максимум=Максимум;
			стрСотр.МинимумПоФакту=Окр(Минимум*Коэффициент+стрСотр.ДоплатаЗаОптику+стрСотр.ДоплатаЗаКабинетВрача,2);
			стрСотр.МаксимумПоФакту=Окр(Максимум*Коэффициент+стрСотр.ДоплатаЗаОптику+стрСотр.ДоплатаЗаКабинетВрача,2);
			
			стрСотр.KPIСумма=Окр(стрСотр.KPIСтавка*стрСотр.KPIПроцент/100,2);
			
			//Находим дм1
			Если стрСотр.СуммаМД1<=1000000 Тогда
				стрСотр.БонусОтМД1=Окр(стрСотр.СуммаМД1*0.018,2);
			КонецЕсли;
			
			Если стрСотр.СуммаМД1>1000000 И стрСотр.СуммаМД1<=2000000 Тогда
				стрСотр.БонусОтМД1=Окр(1000000*0.018+(стрСотр.СуммаМД1-1000000)*0.013,2); 
			КонецЕсли;
			
			Если стрСотр.СуммаМД1>2000000 Тогда
				стрСотр.БонусОтМД1=Окр(1000000*0.018+1000000*0.013,2);
			КонецЕсли;
			
			стрСотр.БонусОтМД1=окр(стрСотр.БонусОтМД1*Коэффициент,2); 
			
			//Итого и ИтогоДоГРаниц
			стрСотр.ИтогоДоГраниц=окр(стрСотр.Оклад+стрСотр.ДоплатаЗаОптику+стрСотр.ДоплатаЗаКабинетВрача+стрСотр.KPIСумма+стрСотр.БонусОтМД1,2);
			стрСотр.ИтогоСУчетомГраниц=стрСотр.ИтогоДоГраниц;
			Если стрСотр.ИтогоДоГраниц<стрСотр.МинимумПоФакту Тогда
				стрСотр.ИтогоСУчетомГраниц=стрСотр.МинимумПоФакту;
			КонецЕсли;
			
			Если стрСотр.ИтогоДоГраниц>стрСотр.МаксимумПоФакту Тогда
				стрСотр.ИтогоСУчетомГраниц=стрСотр.МаксимумПоФакту;
			КонецЕсли;
			//Доплата2 - удержания
			стрСотр.ВсегоПоРасчету=стрСотр.ИтогоСУчетомГраниц+стрСотр.Доплата1+стрСотр.Доплата2+стрСотр.Уборка+стрСотр.Доплата3;
			стрСотр.Статус1=стрСотр.ВсегоПоРасчету;
			стрСотр.Статус2=0;
		КонецЦикла;
	КонецПроцедуры
	
	
	&НаКлиенте
	Процедура РассчитатьДанные(Команда)
		РассчитатьДанныеНаСервере();
	КонецПроцедуры
	
	
	&НаСервере
	Функция ПолучитьXMLНаСервере()
		//Выгуржаем  xml_  
		//ПутьКФайлуДляЗаписи="\\10.3.7.12\project\Exchange\OUT\test\1.xml";
		ЗаписьXML = Новый ЗаписьXML;
		//ЗаписьXML.ОткрытьФайл("E:\temp\10\test_data.xml", "UTF-8", Истина); нелья, т.к. в этом случае запись на сервере делает
		ЗаписьXML.УстановитьСтроку();
		ЗаписьXML.ЗаписатьОбъявлениеXML();    
		ЗаписьXML.ЗаписатьНачалоЭлемента("Таблица");
		Таблица1=Объект.ТЧРасчет.Выгрузить();
		Для каждого Строка1 из Таблица1 Цикл    
			ЗаписьXML.ЗаписатьНачалоЭлемента("СтрокаТаблицы");// Сотрудник
			//ЗаписьXML.ЗаписатьАтрибут("НомерСтроки", Строка(Строка1.НомерСтроки));
			//ЗаписьXML.ЗаписатьАтрибут("ФИО", Строка(Строка1.Сотрудник));
			//ЗаписьXML.ЗаписатьАтрибут("ИНН", Строка(Строка1.ИНН));
			
			Для Каждого Столбец1 Из Таблица1.Колонки Цикл
				Значение1=Строка1[Таблица1.Колонки.Индекс(Столбец1)]; 
				Если ТипЗнч(Значение1)=Тип("Число") Тогда
					Значение1=Формат(Значение1,"ЧН=; ЧГ=");
				КонецЕсли;
				ЗаписьXML.ЗаписатьАтрибут(Строка(Столбец1.Имя), Строка(Значение1));	
			КонецЦикла;
			ЗаписьXML.ЗаписатьКонецЭлемента(); // Сотрудник
		КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Сотрудники
		СтрокаXML=ЗаписьXML.Закрыть();
		Возврат СтрокаXML;
		//_xml	
		
	КонецФункции
	
	
	&НаКлиенте
	Процедура ВыгрузитьXML(Команда)
		ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогСохраненияФайла.ПолноеИмяФайла="Сотрудники.XML";
		ДиалогСохраненияФайла.Заголовок = "Выберите файл"; 
		Если ДиалогСохраненияФайла.Выбрать() Тогда 
			ТекДок = Новый ТекстовыйДокумент;
			ТекДок.ДобавитьСтроку(ПолучитьXMLНаСервере());
			ТекДок.Записать(ДиалогСохраненияФайла.ПолноеИмяФайла);
		КонецЕсли;
		
	КонецПроцедуры
	
&НаСервере
Процедура ДозаполнитьТаблицуДаннымиПоУдержаниям()
	
		
	//т.к. в данном документе могут быть несколько строк по одному физлицу, то вешаем сумму на первое найденное физлицо
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗГ_УдержанияСотрудниковОрганизацииОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЗГ_УдержанияСотрудниковОрганизацииОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ЗГ_УдержанияСотрудниковОрганизации.Остатки(&КонецПериода, ФизическоеЛицо В (&СписокФизическихЛиц)) КАК ЗГ_УдержанияСотрудниковОрганизацииОстатки";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.ДатаПо) + 1);
	Запрос.УстановитьПараметр("СписокФизическихЛиц", Объект.ТЧАптека.Выгрузить().ВыгрузитьКолонку("Сотрудник"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ДолжностьЗавед=Справочники.Должности.НайтиПоНаименованию("Заведующий аптекой");
	
	Пока Выборка.Следующий() Цикл
		
		//Проверяем на Заведующих чтобы по ним не брать удержания
		НеВыгружать=Ложь;
		
		МассивФизЛица=Новый Массив;
		МассивФизЛица.Добавить(Выборка.ФизическоеЛицо);
		КадровыеДанные = "Должность,РазрядКатегория,ВидЗанятости";
		ОсновныеСотрудникиФизЛица=КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(МассивФизЛица, Истина, , Объект.ДатаС);
		МассивСотрудников=ОсновныеСотрудникиФизЛица.ВыгрузитьКолонку("Сотрудник");
		
		КадровыеДанныеСотрудников = КадровыйУчет.КадровыеДанныеСотрудников(Истина, МассивСотрудников, КадровыеДанные, Объект.ДатаС);
		Для каждого сотр1 ИЗ КадровыеДанныеСотрудников Цикл
			Если Сотр1.ВидЗанятости=Перечисления.ВидыЗанятости.ОсновноеМестоРаботы И Сотр1.Должность=ДолжностьЗавед Тогда
				НеВыгружать=Истина;
			КонецЕсли
		КонецЦикла;

		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Сотрудник", Выборка.ФизическоеЛицо);
		
		НайденныеСтроки = Объект.ТЧАптека.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 И НЕ НеВыгружать Тогда
			НайденныеСтроки[0].Доплата2 = - Выборка.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры
