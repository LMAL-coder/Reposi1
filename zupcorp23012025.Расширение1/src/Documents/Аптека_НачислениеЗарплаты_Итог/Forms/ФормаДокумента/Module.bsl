
Функция ПолучитьДанныеПоФЛ(СписокФЛ)
	запрос=новый запрос;
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);  
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("ФизЛицо",СписокФЛ);
	запрос.Текст="ВЫБРАТЬ
	|	СУММА(ДанныеПоАптекам.ВремяДень) КАК ВремяДень,
	|	СУММА(ДанныеПоАптекам.ВремяНочь) КАК ВремяНочь,
	|	СУММА(ДанныеПоАптекам.ПраздникиВремяДень) КАК ПраздникиВремяДень,
	|	СУММА(ДанныеПоАптекам.ПраздникиВремяНочь) КАК ПраздникиВремяНочь,
	|	СУММА(ДанныеПоАптекам.БонусЗаОценку) КАК БонусЗаОценку,
	|	СУММА(ДанныеПоАптекам.БонусСроковые) КАК БонусСроковые,
	|	СУММА(ДанныеПоАптекам.БонусПоДМ) КАК БонусПоДМ,
	|	СУММА(ДанныеПоАптекам.БонусМУ) КАК БонусМУ,
	|	СУММА(ДанныеПоАптекам.БонусЗаЛичнуюВыручку) КАК БонусЗаЛичнуюВыручку,
	|	ДанныеПоАптекам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СУММА(ДанныеПоАптекам.БонусЗаСовмещение) КАК БонусЗаСовмещение
	|ИЗ
	|	РегистрСведений.ДанныеПоАптекам КАК ДанныеПоАптекам
	|ГДЕ
	|	ДанныеПоАптекам.ФизическоеЛицо В(&ФизЛицо)
	|	И ДанныеПоАптекам.ДатаС МЕЖДУ &ДатаС И &ДатаПо
	|	И ДанныеПоАптекам.ДатаПо МЕЖДУ &ДатаС И &ДатаПо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоАптекам.ФизическоеЛицо,
	|	ДанныеПоАптекам.БонусЗвонки,
	|	ДанныеПоАптекам.БонусСтрокиЗаказов";
	//|	ДанныеПоАптекам.РазрядКатегория,
	//|	ДанныеПоАптекам.РазрядПодразделение";
	РезультатпоФЛ=запрос.Выполнить().Выгрузить();
	Возврат РезультатпоФЛ;
конецфункции
&НаСервере
Функция ПолучитьСотрудниковПоОсновному()
	//проверяем сотрудников,по которым уже выполнен расчет
	запрос=новый запрос;
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("Подразделение",Объект.Подразделение);
	запрос.Текст="ВЫБРАТЬ
	|	НачисленияЗППоАптекам.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.НачисленияЗППоАптекам КАК НачисленияЗППоАптекам
	|ГДЕ
	|	НачисленияЗППоАптекам.Период МЕЖДУ &ДатаС И &ДатаПо";
	Если ЗначениеЗаполнено(Объект.Подразделение) тогда
		запрос.Текст=запрос.Текст+"
		|	И НачисленияЗППоАптекам.Подразделение = &Подразделение";
	конецесли;
	РезультатПрош=запрос.Выполнить().Выгрузить();
	МасФЛ=РезультатПрош.ВыгрузитьКолонку("ФизическоеЛицо");
	запрос=новый запрос;
	запрос.УстановитьПараметр("Подразделение",Объект.Подразделение);
	запрос.УстановитьПараметр("ДатаС",Объект.ДатаС);
	запрос.УстановитьПараметр("ДатаПо",Объект.ДатаПо);
	запрос.УстановитьПараметр("ФЛ",МасФЛ);
	запрос.УстановитьПараметр("Завершено",Перечисления.ВидыСтатусов.Завершено);
	Запрос.УстановитьПараметр("ПодразделениеРаботы",справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Аптечный отдел",истина));
	Запрос.УстановитьПараметр("Должность",справочники.Должности.НайтиПоНаименованию("Врач-офтальмолог",истина));
	//LMAL_05-07-2023Н делают группировку по ФизическоеЛицо,ТН, т.к. есть переводы сотрудников в середине месяца, поэтому создаются дубли строк.
	запрос.Текст="ВЫБРАТЬ
	|	ДанныеПоАптекам.Подразделение КАК Подразделение,
	|	ДанныеПоАптекам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеПоАптекам.Сотрудник.Код КАК ТН
	|ПОМЕСТИТЬ ВТ_Все
	|ИЗ
	|	РегистрСведений.ДанныеПоАптекам КАК ДанныеПоАптекам
	|ГДЕ
	|	ДанныеПоАптекам.ДатаС МЕЖДУ &ДатаС И &ДатаПо
	|	И ДанныеПоАптекам.ДатаПо МЕЖДУ &ДатаС И &ДатаПо
	|	И НЕ ДанныеПоАптекам.ФизическоеЛицо В (&ФЛ)
	|	И ДанныеПоАптекам.Статус = &Завершено
	|  И НЕ ДанныеПоАптекам.Должность=&Должность
	|	И ДанныеПоАптекам.ПодразделениеРаботы В ИЕРАРХИИ(&ПодразделениеРаботы)";
	Если ЗначениеЗаполнено(Объект.Подразделение)тогда
		запрос.Текст=запрос.Текст+"
		|	И ДанныеПоАптекам.Подразделение = &Подразделение";
	КонецЕсли;
	
	запрос.Текст=запрос.Текст+"
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоАптекам.ФизическоеЛицо,
	|	ДанныеПоАптекам.Сотрудник.Код,
	|	ДанныеПоАптекам.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_Все.Подразделение) КАК Подразделение,
	|	ВТ_Все.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТ_Все.ТН КАК ТН,
	|	КОЛИЧЕСТВО(ВТ_Все.Подразделение) КАК Дубли
	|ИЗ
	|	ВТ_Все КАК ВТ_Все
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Все.ФизическоеЛицо,
	|	ВТ_Все.ТН";
	
	
	
	//LMAL_05-07-2023К
	ТаблицаСотрудников=запрос.Выполнить().Выгрузить();
	Возврат ТаблицаСотрудников;
конецфункции 
&НаСервере
Функция ПолучитьПараметры()
	Возврат КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();	
КонецФункции
&НаСервере
Процедура РассчитатьНаСервере() 
	
	
	//АК Начало Хаустов С.А.  
	//Удержания добавили 27-11-2023
	//!!!!!!!!!!!!!!!!!!!!!!!!!!ДозаполнитьТаблицуДаннымиПоУдержаниям();
	//АК Конец Хаустов С.А.	
	
	к=1;
	
	//Нужно получить сколько часов распределено в ЗУП
	ПараметрыПодключения = ЗГ_ПроцедурыИФункцииСервер.ПолучитьПараметрыПодключения("ЗУП ПРОФ 3.1");
	Если НЕ ЗначениеЗаполнено(ПараметрыПодключения.Сервер) Тогда
		ВызватьИсключение "Не найдены параметры подключения к базе «ЗУП ПРОФ»";
	КонецЕсли;
	
	Соединение = Новый HTTPСоединение(ПараметрыПодключения.Сервер,, ПараметрыПодключения.Пользователь, ПараметрыПодключения.Пароль);
	ЗапросHTTP = Новый HTTPЗапрос("/"+ПараметрыПодключения.ПубликацияНаВебСервере+"/hs/api/test");
	ОтветHTTP = Соединение.Получить(ЗапросHTTP);
	Если ОтветHTTP.КодСостояния <> 200 Тогда
		ВызватьИсключение "Произошла ошибка при подключении к базе «ЗУП ПРОФ» ";
	КонецЕсли;
	//"ИНН,Код,ВидУчетаВремени,ЧасыОборот"
	ТаблицаТабель = Новый ТаблицаЗначений;
	ТаблицаТабель.Колонки.Добавить("ИНН", Новый ОписаниеТипов("Строка", ,,, Новый КвалификаторыСтроки(20)));
	ТаблицаТабель.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка", ,,, Новый КвалификаторыСтроки(20)));
	ТаблицаТабель.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ТаблицаТабель.Колонки.Добавить("ВидУчетаВремени", Новый ОписаниеТипов("Строка", ,,, Новый КвалификаторыСтроки(200)));
	ТаблицаТабель.Колонки.Добавить("ЧасыОборот", Новый ОписаниеТипов("Число"));
	ТаблицаТабель.Колонки.Добавить("ВидЗанятости", Новый ОписаниеТипов("Строка", ,,, Новый КвалификаторыСтроки(200)));
	СотрудникИНН="11111"; //ИНН не используется
	Запрос = Новый HTTPЗапрос(СтрШаблон("/"+ПараметрыПодключения.ПубликацияНаВебСервере+"/hs/api/tabellzp/%1?startdate=%2&enddate=%3",СотрудникИНН,Формат(Объект.ДатаС, "ДФ=yyyyMMdd"),Формат(Объект.ДатаПо, "ДФ=yyyyMMdd")));
	Ответ = Соединение.Получить(Запрос);
	Если Ответ.КодСостояния = 200 Тогда
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
		ДанныеТабеля = ПрочитатьJSON(Чтение);
		ТаблицаТабель.Очистить();
		Для Каждого Стр Из ДанныеТабеля Цикл
			Нов = ТаблицаТабель.Добавить();
			Нов.Период=Дата(СтрЗаменить(Лев(Стр.Период,10),"-",""));
			Нов.ИНН=Стр.ИНН;
			Нов.Код=Стр.Код;
			Нов.ВидУчетаВремени=Стр.ВидУчетаВремени;
			Нов.ЧасыОборот=Стр.ЧасыОборот;
			Нов.ВидЗанятости=Стр.ВидЗанятости;
		КонецЦикла
	КонецЕсли;
	
	//Получаем из ЗУП стоимость отпусков Н_
	ТаблицаОтпуска=Новый ТаблицаЗначений;
	//"Сотрудник,ДатаНачала,ДатаОкончания,КоличествоДней,Сумма,ЭтоКомпенсация,Должность,ИНН"
	ТаблицаОтпуска.Колонки.Добавить("ИНН", Новый ОписаниеТипов("Строка", ,,, Новый КвалификаторыСтроки(20)));
	//ТаблицаТабель.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ТаблицаОтпуска.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	Запрос = Новый HTTPЗапрос(СтрШаблон("/"+ПараметрыПодключения.ПубликацияНаВебСервере+"/hs/api/oplataotpusk/%1",Формат(Объект.ДатаС, "ДФ=yyyyMMdd")));
	Ответ = Соединение.Получить(Запрос);
	Если Ответ.КодСостояния = 200 Тогда
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
		Данные1 = ПрочитатьJSON(Чтение);
		Для Каждого Стр Из Данные1 Цикл
			Нов = ТаблицаОтпуска.Добавить();
			//Нов.Период=Дата(СтрЗаменить(Лев(Стр.Период,10),"-",""));
			Нов.ИНН=Стр.ИНН;
			Нов.Сумма=Стр.Сумма;
		КонецЦикла
	КонецЕсли;
	ТаблицаОтпуска.Свернуть("ИНН","Сумма");
	//Получаем из ЗУП стоимость отпусков _К
	
	//Получаем из ЗУП стоимость больничных Н_
	ТаблицаБольничные=Новый ТаблицаЗначений;
	//"ФизическоеЛицо,ИНН,НомерЛН,ДатаНачала,ДатаОкончания,КоличествоДней,СуммаФинансируемаяФСС,СуммаФинансируемаяРаботодателем"
	ТаблицаБольничные.Колонки.Добавить("ИНН", Новый ОписаниеТипов("Строка", ,,, Новый КвалификаторыСтроки(20)));
	//ТаблицаТабель.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ТаблицаБольничные.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	Запрос = Новый HTTPЗапрос(СтрШаблон("/"+ПараметрыПодключения.ПубликацияНаВебСервере+"/hs/api/oplataboll/%1",Формат(Объект.ДатаС, "ДФ=yyyyMMdd")));
	Ответ = Соединение.Получить(Запрос);
	Если Ответ.КодСостояния = 200 Тогда
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
		Данные2 = ПрочитатьJSON(Чтение);
		Для Каждого Стр Из Данные2 Цикл
			Нов = ТаблицаБольничные.Добавить();
			//Нов.Период=Дата(СтрЗаменить(Лев(Стр.Период,10),"-",""));
			Нов.ИНН=Стр.ИНН;
			Нов.Сумма=Стр.СуммаФинансируемаяРаботодателем;
		КонецЦикла
	КонецЕсли;
	ТаблицаБольничные.Свернуть("ИНН","Сумма");
	//Получаем из ЗУП стоимость больничных _К
	
	
	//ВидыУчетаВремениДень=Новый Массив;
	//ВидыУчетаВремениДень.Добавить("Явка");
	//
	//ВидыУчетаВремениНочь=Новый Массив;
	//ВидыУчетаВремениНочь.Добавить("Ночные часы");
	
	ЗапросТабель=новый Запрос;
	ЗапросТабель.Текст = "ВЫБРАТЬ
	                     |	Табель.Период КАК Период,
	                     |	Табель.ИНН КАК ИНН,
	                     |	Табель.Код КАК Код,
	                     |	Табель.ВидУчетаВремени КАК ВидУчетаВремени,
	                     |	Табель.ЧасыОборот КАК ЧасыОборот,
	                     |	Табель.ВидЗанятости КАК ВидЗанятости
	                     |ПОМЕСТИТЬ ВТ_Табель1
	                     |ИЗ
	                     |	&Табель КАК Табель
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	Табель.Период КАК Период,
	                     |	Табель.ИНН КАК ИНН,
	                     |	Табель.Код КАК Код,
	                     |	Табель.ВидУчетаВремени КАК ВидУчетаВремени,
	                     |	Табель.ЧасыОборот КАК ЧасыОборот,
	                     |	Табель.ВидЗанятости КАК ВидЗанятости
	                     |ПОМЕСТИТЬ ВТ_Табель
	                     |ИЗ
	                     |	ВТ_Табель1 КАК Табель
	                     |ГДЕ
	                     |	Табель.ИНН = &ИНН
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ВТ_Табель.ИНН КАК ИНН,
	                     |	ВТ_Табель.Код КАК Код,
	                     |	ВТ_Табель.ВидЗанятости КАК ВидЗанятости,
	                     |	МИНИМУМ(ВТ_Табель.Период) КАК Период
	                     |ПОМЕСТИТЬ ВТ_Сотрудник
	                     |ИЗ
	                     |	ВТ_Табель КАК ВТ_Табель
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	ВТ_Табель.ИНН,
	                     |	ВТ_Табель.Код,
	                     |	ВТ_Табель.ВидЗанятости
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ВТ_Табель.ИНН КАК ИНН,
	                     |	ВТ_Табель.ВидЗанятости КАК ВидЗанятости,
	                     |	СУММА(ВТ_Табель.ЧасыОборот) КАК ЧасыОборот,
	                     |	ВТ_Табель.Код КАК Код
	                     |ПОМЕСТИТЬ ВТ_ПраздникиДень
	                     |ИЗ
	                     |	ВТ_Табель КАК ВТ_Табель
	                     |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	                     |		ПО ВТ_Табель.Период = ДанныеПроизводственногоКалендаря.Дата
	                     |			И (ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь)
	                     |ГДЕ
	                     |	ВТ_Табель.ВидУчетаВремени = ""Явка""
	                     |	И ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	ВТ_Табель.ИНН,
	                     |	ВТ_Табель.ВидЗанятости,
	                     |	ВТ_Табель.Код
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ВТ_Табель.ИНН КАК ИНН,
	                     |	ВТ_Табель.ВидЗанятости КАК ВидЗанятости,
	                     |	СУММА(ВТ_Табель.ЧасыОборот) КАК ЧасыОборот,
	                     |	ВТ_Табель.Код КАК Код
	                     |ПОМЕСТИТЬ ВТ_ПраздникиНочь
	                     |ИЗ
	                     |	ВТ_Табель КАК ВТ_Табель
	                     |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	                     |		ПО ВТ_Табель.Период = ДанныеПроизводственногоКалендаря.Дата
	                     |			И (ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь)
	                     |ГДЕ
	                     |	ВТ_Табель.ВидУчетаВремени = ""Ночные часы""
	                     |	И ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	ВТ_Табель.ИНН,
	                     |	ВТ_Табель.ВидЗанятости,
	                     |	ВТ_Табель.Код
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ВТ_Табель.ИНН КАК ИНН,
	                     |	ВТ_Табель.Код КАК Код,
	                     |	ВТ_Табель.ВидЗанятости КАК ВидЗанятости,
	                     |	СУММА(ВТ_Табель.ЧасыОборот) КАК ЧасыОборот
	                     |ПОМЕСТИТЬ ВТ_День
	                     |ИЗ
	                     |	ВТ_Табель КАК ВТ_Табель
	                     |ГДЕ
	                     |	ВТ_Табель.ВидУчетаВремени = ""Явка""
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	ВТ_Табель.ИНН,
	                     |	ВТ_Табель.Код,
	                     |	ВТ_Табель.ВидЗанятости
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ВТ_Табель.ИНН КАК ИНН,
	                     |	ВТ_Табель.Код КАК Код,
	                     |	ВТ_Табель.ВидЗанятости КАК ВидЗанятости,
	                     |	СУММА(ВТ_Табель.ЧасыОборот) КАК ЧасыОборот
	                     |ПОМЕСТИТЬ ВТ_Ночь
	                     |ИЗ
	                     |	ВТ_Табель КАК ВТ_Табель
	                     |ГДЕ
	                     |	ВТ_Табель.ВидУчетаВремени = ""Ночные часы""
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	ВТ_Табель.ИНН,
	                     |	ВТ_Табель.Код,
	                     |	ВТ_Табель.ВидЗанятости
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ВТ_Сотрудник.ИНН КАК ИНН,
	                     |	ВТ_Сотрудник.Код КАК Код,
	                     |	ВТ_Сотрудник.ВидЗанятости КАК ВидЗанятости,
	                     |	ЕСТЬNULL(ВТ_День.ЧасыОборот, 0) КАК ЧасыДень,
	                     |	ЕСТЬNULL(ВТ_Ночь.ЧасыОборот, 0) КАК ЧасыНочь,
	                     |	ЕСТЬNULL(ВТ_ПраздникиДень.ЧасыОборот, 0) КАК ЧасыПраздникиДень,
	                     |	ЕСТЬNULL(ВТ_ПраздникиНочь.ЧасыОборот, 0) КАК ЧасыПраздникиНочь,
	                     |	ВТ_Сотрудник.Период КАК Период
	                     |ИЗ
	                     |	ВТ_Сотрудник КАК ВТ_Сотрудник
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_День КАК ВТ_День
	                     |		ПО ВТ_Сотрудник.ИНН = ВТ_День.ИНН
	                     |			И ВТ_Сотрудник.ВидЗанятости = ВТ_День.ВидЗанятости
	                     |			И ВТ_Сотрудник.Код = ВТ_День.Код
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ночь КАК ВТ_Ночь
	                     |		ПО ВТ_Сотрудник.ИНН = ВТ_Ночь.ИНН
	                     |			И ВТ_Сотрудник.ВидЗанятости = ВТ_Ночь.ВидЗанятости
	                     |			И ВТ_Сотрудник.Код = ВТ_Ночь.Код
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПраздникиДень КАК ВТ_ПраздникиДень
	                     |		ПО ВТ_Сотрудник.ИНН = ВТ_ПраздникиДень.ИНН
	                     |			И ВТ_Сотрудник.ВидЗанятости = ВТ_ПраздникиДень.ВидЗанятости
	                     |			И ВТ_Сотрудник.Код = ВТ_ПраздникиДень.Код
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПраздникиНочь КАК ВТ_ПраздникиНочь
	                     |		ПО ВТ_Сотрудник.ИНН = ВТ_ПраздникиНочь.ИНН
	                     |			И ВТ_Сотрудник.ВидЗанятости = ВТ_ПраздникиНочь.ВидЗанятости
	                     |			И ВТ_Сотрудник.Код = ВТ_ПраздникиНочь.Код
	                     |
	                     |УПОРЯДОЧИТЬ ПО
	                     |	ИНН ВОЗР,
	                     |	ВТ_Сотрудник.Период УБЫВ";
	
	ЗапросТабель.УстановитьПараметр("Табель",ТаблицаТабель);
	ЗапросТабель.УстановитьПараметр("ПроизводственныйКалендарь",Справочники.ПроизводственныеКалендари.НайтиПоНаименованию("Российская Федерация"));
	//ЗапросТабель.УстановитьПараметр("ВидыУчетаВремениДень",ВидыУчетаВремениДень);
	//ЗапросТабель.УстановитьПараметр("ВидыУчетаВремениНочь",ВидыУчетаВремениНочь);
	
	

	
	
	ДолжностьЗавед=Справочники.Должности.НайтиПоНаименованию("Заведующий аптекой");	
	
	//Заполняем табличную часть
	Для каждого НоваяСтрока из Объект.ТЧАптека  Цикл 
		//Если НоваяСтрока.Должность=Справочники.Должности.НайтиПоНаименованию("Продавец-консультант",Истина) Тогда 
		
		//Проверяем на Заведующих (Тех, которые работали фармацевтами) чтобы не расчитывать их (Мы не берем их табель из ЗУП, все идет в премию)_Н
		НоваяСтрока.НеЗагружатьИзЗУП=Ложь;
		НоваяСтрока.НеВыгружать=Ложь;
		МассивФизЛица=Новый Массив;
		МассивФизЛица.Добавить(НоваяСтрока.Сотрудник);
		КадровыеДанные = "Должность,РазрядКатегория,ВидЗанятости";
		ОсновныеСотрудникиФизЛица=КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(МассивФизЛица, Истина, , Объект.ДатаС);
		МассивСотрудников=ОсновныеСотрудникиФизЛица.ВыгрузитьКолонку("Сотрудник");
		
		КадровыеДанныеСотрудников = КадровыйУчет.КадровыеДанныеСотрудников(Истина, МассивСотрудников, КадровыеДанные, Объект.ДатаС);
		Для каждого сотр1 ИЗ КадровыеДанныеСотрудников Цикл
			Если Сотр1.ВидЗанятости=Перечисления.ВидыЗанятости.ОсновноеМестоРаботы И Сотр1.Должность=ДолжностьЗавед Тогда
				НоваяСтрока.НеЗагружатьИзЗУП=Истина;
			КонецЕсли
		КонецЦикла; 
		
		//Получаем Коээфициент у разряда сотрудника(нужен 0,85)
		Отбор1=Новый Структура;
		Отбор1.Вставить("Должность",НоваяСтрока.Должность);
		Отбор1.Вставить("КатегорияСотрудник",НоваяСтрока.РазрядКатегория);
		Отбор1.Вставить("КатегорияАптеки",НоваяСтрока.РазрядПодразделение);
		РезПоказателиПоДолжностям=РегистрыСведений.ПоказателиПоДолжностям.ПолучитьПоследнее(Объект.ДатаС,Отбор1);
		
		КоэффициентКатегория=0;
		СтоимостьДень=0;
		СтоимостьНочногоЧаса=0;
		СтоимостьПраздники=0;
		СтоимостьПраздникиНочь=0;
		
		Если ЗначениеЗаполнено(РезПоказателиПоДолжностям.Коэффициент) Тогда
			КоэффициентКатегория=РезПоказателиПоДолжностям.Коэффициент;
			СтоимостьДень=РезПоказателиПоДолжностям.СтоимостьДиапазонаЧасов1;
			СтоимостьНочногоЧаса=РезПоказателиПоДолжностям.СтоимостьНочногоЧаса;
			СтоимостьПраздники=РезПоказателиПоДолжностям.СтоимостьПраздники;
			СтоимостьПраздникиНочь=РезПоказателиПоДолжностям.СтоимостьПраздникиНочь;
		Иначе 
			Сообщить("Не найдены параметры в настройках ПоказателиПоДолжностям: Должность="+строка(НоваяСтрока.Должность)+", КатегорияСотрудник="+ Строка(НоваяСтрока.РазрядКатегория)+", КатегорияАптеки="+Строка(НоваяСтрока.РазрядПодразделение)+",  НаДату="+Строка(Объект.ДатаС))
		КонецЕсли;
		
		Если КоэффициентКатегория<>1 ИЛИ НоваяСтрока.Уволен Тогда
			НоваяСтрока.НеВыгружать=Истина;     //Если коэф 0,85, или уволен сотрудник, то не выгружаем в ЗУП
		КонецЕсли;
		
		
		Если НЕ (НоваяСтрока.НеЗагружатьИзЗУП ИЛИ НоваяСтрока.НеВыгружать) Тогда   //Если не заведующая  и не коэф 0,85
			
			//Нужно получить сколько часов распределено в ЗУП
			СотрудникИНН=НоваяСтрока.ИНН;
			ЗапросТабель.УстановитьПараметр("ИНН",СотрудникИНН);
			РезультатЗапроса = ЗапросТабель.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			ДанныеЗУПмассив=Новый Массив(2);
			
			СтрокаТаблицы1=Новый Структура("Код,ВидЗанятости,ЧасыДень,ЧасыНочь,ЧасыПраздникиДень,ЧасыПраздникиНочь");
			СтрокаТаблицы1.Код="";
			СтрокаТаблицы1.ВидЗанятости="";
			СтрокаТаблицы1.ЧасыДень=0;
			СтрокаТаблицы1.ЧасыНочь=0;
			СтрокаТаблицы1.ЧасыПраздникиДень=0;
			СтрокаТаблицы1.ЧасыПраздникиНочь=0;
			
			ДанныеЗУПмассив[0]=СтрокаТаблицы1;
			
			СтрокаТаблицы2=Новый Структура("Код,ВидЗанятости,ЧасыДень,ЧасыНочь,ЧасыПраздникиДень,ЧасыПраздникиНочь");
			СтрокаТаблицы2.Код="";
			СтрокаТаблицы2.ВидЗанятости="";
			СтрокаТаблицы2.ЧасыДень=0;
			СтрокаТаблицы2.ЧасыНочь=0;
			СтрокаТаблицы2.ЧасыПраздникиДень=0;
			СтрокаТаблицы2.ЧасыПраздникиНочь=0;
			
			ДанныеЗУПмассив[1]=СтрокаТаблицы2;
			
			i=0;
			РаспределенВЗуп=Ложь;
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если i<2 Тогда
					//СтрокаТаблицы=Новый Структура("Код,ВидЗанятости,ЧасыДень,ЧасыНочь,ЧасыПраздникиДень,ЧасыПраздникиНочь");
					ДанныеЗУПмассив[i].Код=ВыборкаДетальныеЗаписи.Код;
					ДанныеЗУПмассив[i].ЧасыДень=ВыборкаДетальныеЗаписи.ЧасыДень;
					ДанныеЗУПмассив[i].ЧасыНочь=ВыборкаДетальныеЗаписи.ЧасыНочь;
					ДанныеЗУПмассив[i].ЧасыПраздникиДень=ВыборкаДетальныеЗаписи.ЧасыПраздникиДень;
					ДанныеЗУПмассив[i].ЧасыПраздникиНочь=ВыборкаДетальныеЗаписи.ЧасыПраздникиНочь;
					РаспределенВЗуп=Истина;
					Если ВыборкаДетальныеЗаписи.ВидЗанятости="Основное место работы" Тогда
						ДанныеЗУПмассив[i].ВидЗанятости=Перечисления.ВидыЗанятости.ОсновноеМестоРаботы;
					ИначеЕсли ВыборкаДетальныеЗаписи.ВидЗанятости="Внутреннее совместительство" Тогда
						ДанныеЗУПмассив[i].ВидЗанятости=Перечисления.ВидыЗанятости.ВнутреннееСовместительство;
					ИначеЕсли ВыборкаДетальныеЗаписи.ВидЗанятости="Внешнее совместительство" Тогда
						ДанныеЗУПмассив[i].ВидЗанятости=Перечисления.ВидыЗанятости.Совместительство;
					ИначеЕсли ВыборкаДетальныеЗаписи.ВидЗанятости="Подработка" Тогда
						ДанныеЗУПмассив[i].ВидЗанятости=Перечисления.ВидыЗанятости.Подработка;	
					КонецЕсли;
				Иначе
					Сообщить("Внимание! Для сотруника "+строка(НоваяСтрока.Сотрудник)+" не все строки табеля распределены, возможно были перемещения сотрудника в середине месяца");
					Прервать;
				КонецЕсли;	
				i=i+1;
			КонецЦикла;
			
			//меняем местами, чтобы на первом месте было основное место работы
			Если НЕ ДанныеЗУПмассив[0].ВидЗанятости=Перечисления.ВидыЗанятости.ОсновноеМестоРаботы Тогда
				ВременнаяСтрока=ДанныеЗУПмассив[0];
				ДанныеЗУПмассив[0]=ДанныеЗУПмассив[1];
				ДанныеЗУПмассив[1]=ВременнаяСтрока;
			КонецЕсли;
			
			//Получаем отпука и больничные
			СтрокаОтпуска=ТаблицаОтпуска.Найти(СотрудникИНН,"ИНН");
			Если ЗначениеЗаполнено(СтрокаОтпуска) Тогда
				НоваяСтрока.Отпускные=СтрокаОтпуска.Сумма;
			КонецЕсли;
			СтрокаБольничные=ТаблицаБольничные.Найти(СотрудникИНН,"ИНН");
			Если ЗначениеЗаполнено(СтрокаБольничные) Тогда
				НоваяСтрока.Больничные=СтрокаБольничные.Сумма;
			КонецЕсли;
			
			//Получаем стоимость часа
			Отбор1=Новый Структура;
			Отбор1.Вставить("Должность",НоваяСтрока.Должность);
			РезНормативы=РегистрыСведений.ЗГ_РазрядыКатегорииДолжностейСтоимость.ПолучитьПоследнее(Объект.ДатаС,Отбор1);
			
			СтоимостьЧаса=0;
			Если ЗначениеЗаполнено(РезНормативы.СтоимостьЧаса) Тогда
				СтоимостьЧаса=РезНормативы.СтоимостьЧаса;
				
			Иначе 
				Сообщить("Не найдены параметры в настройках Разряды категории должностей Стоимость: Должность="+НоваяСтрока.Должность+",  НаДату="+Объект.ДатаС)
			КонецЕсли;
			
			
			
			//Зополняем строки 
			//ДанныеЗУПмассив[i].ЧасыДень=ВыборкаДетальныеЗаписи.ЧасыДень;
			//		ДанныеЗУПмассив[i].ЧасыНочь=ВыборкаДетальныеЗаписи.ЧасыНочь;
			//		ДанныеЗУПмассив[i].ЧасыПраздникиДень=ВыборкаДетальныеЗаписи.ЧасыПраздникиДень;
			//		ДанныеЗУПмассив[i].ЧасыПраздникиНочь=ВыборкаДетальныеЗаписи.ЧасыПраздникиНочь;
			НоваяСтрока.ТН_ЗУП1=ДанныеЗУПмассив[0].Код;
			НоваяСтрока.ВидЗанятости1=ДанныеЗУПмассив[0].ВидЗанятости;
			НоваяСтрока.ТН_ЗУП2=ДанныеЗУПмассив[1].Код; 
			НоваяСтрока.ВидЗанятости2=ДанныеЗУПмассив[1].ВидЗанятости;
			НоваяСтрока.РаспределенВЗуп=РаспределенВЗуп;
			НоваяСтрока.РаспределеноЧасов=ДанныеЗУПмассив[0].ЧасыДень+ДанныеЗУПмассив[1].ЧасыДень+ДанныеЗУПмассив[0].ЧасыНочь+ДанныеЗУПмассив[1].ЧасыНочь;
			
			НоваяСтрока.РаспределеноЧасов1=ДанныеЗУПмассив[0].ЧасыДень+ДанныеЗУПмассив[0].ЧасыНочь;
			НоваяСтрока.РаспределеноЧасов2=ДанныеЗУПмассив[1].ЧасыДень+ДанныеЗУПмассив[1].ЧасыНочь; 
			
			НоваяСтрока.НеРаспределеноЧасов=НоваяСтрока.ОтработаноВсего-НоваяСтрока.РаспределеноЧасов;
			
			//КоэффициентКатегория=РезПоказателиПоДолжностям.Коэффициент;
			//СтоимостьДень=РезПоказателиПоДолжностям.СтоимостьДиапазонаЧасов1;
			//СтоимостьНочногоЧаса=РезПоказателиПоДолжностям.СтоимостьНочногоЧаса;
			//СтоимостьПраздники=РезПоказателиПоДолжностям.СтоимостьПраздники;
			//СтоимостьПраздникиНочь=РезПоказателиПоДолжностям.СтоимостьПраздникиНочь;
			
			НоваяСтрока.ОплатаПоЧасам1=(ДанныеЗУПмассив[0].ЧасыДень-ДанныеЗУПмассив[0].ЧасыПраздникиДень)*СтоимостьДень
			+(ДанныеЗУПмассив[0].ЧасыНочь-ДанныеЗУПмассив[0].ЧасыПраздникиНочь)*СтоимостьНочногоЧаса
				+ДанныеЗУПмассив[0].ЧасыПраздникиДень*СтоимостьПраздники+ДанныеЗУПмассив[0].ЧасыПраздникиНочь*СтоимостьПраздникиНочь;
				
			НоваяСтрока.ОплатаПоЧасам2=(ДанныеЗУПмассив[1].ЧасыДень-ДанныеЗУПмассив[1].ЧасыПраздникиДень)*СтоимостьДень
			+(ДанныеЗУПмассив[1].ЧасыНочь-ДанныеЗУПмассив[1].ЧасыПраздникиНочь)*СтоимостьНочногоЧаса
				+ДанныеЗУПмассив[1].ЧасыПраздникиДень*СтоимостьПраздники+ДанныеЗУПмассив[1].ЧасыПраздникиНочь*СтоимостьПраздникиНочь;
				
			НоваяСтрока.ОплатаПоЧасам=НоваяСтрока.ОплатаПоЧасам1+НоваяСтрока.ОплатаПоЧасам2;	
			
			
			//// 1. Находим коээффициент, чтобы посчитать все премии с учетом мин и макс
			КоэфМинМакс=1;
			Если (НоваяСтрока.ИтогоДоГраниц-НоваяСтрока.ОплатаПоЧасам)>0 Тогда
				//т.к. Доплата1 (подработка в другой аптеке (командировки)) не учитывается в расчете мин/макса не входит в ИтогоДоГраниц поэтому вычтаем НоваяСтрока.Доплата1 
				КоэфМинМакс=(НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.Доплата1-НоваяСтрока.Доплата2-НоваяСтрока.Доплата3-НоваяСтрока.Уборка
				-НоваяСтрока.ОплатаПоЧасам)/(НоваяСтрока.ИтогоДоГраниц-НоваяСтрока.ОплатаПоЧасам);
			Иначе
				КоэфМинМакс=0;
				Сообщить(НоваяСтрока.Сотрудник.Наименование+" (ИтогоДоГраниц-ОплатаПоЧасам) меньше или равно нулю!  ");
			КонецЕсли;
			
			//Считаем премии с учетом КоэфМинМакс   
			
			//Учет праздников!!!!   
			//25-12-2024 премия принятые звонки консультантам ИА и премия 5р.фармацевтам за собранные заказы от ИА
			ДоплатаЗаНапряженность=(НоваяСтрока.Оклад0_166Сумма+НоваяСтрока.Ночь_Сумма+НоваяСтрока.ДоплатаЗаКатегорию+НоваяСтрока.ПремияНочнаяСумма
			+НоваяСтрока.ПраздникиДеньСумма+НоваяСтрока.ПраздникиНочьСумма+НоваяСтрока.ПремияУпаковки
			+НоваяСтрока.ПремияЗвонки-НоваяСтрока.ОплатаПоЧасам)*КоэфМинМакс;
			
			Если ДоплатаЗаНапряженность<0 Тогда
				Сообщить(НоваяСтрока.Сотрудник.Наименование+" Доплата за напряженность отрицательна! ");
			КонецЕсли;
			//???? НоваяСтрока.ДоплатаЗаКатегорию, Праздники,пока идут в Доплата за напряженность
			ПремияЗаЛичнуюВыручку=(НоваяСтрока.БонусДТМ+НоваяСтрока.БонусНеДТМ+НоваяСтрока.БонусЗаОптику)*КоэфМинМакс;
			ПремияЗаМаркетинговыеАкции=НоваяСтрока.БонусАкции*КоэфМинМакс;
			ПремияСрокиИЗМЗ=НоваяСтрока.БонусЗМЗ*КоэфМинМакс;
			ПремияЗаКомандировки=НоваяСтрока.Доплата1;
			Удержания=НоваяСтрока.Доплата2; 
			
			//Находим коээфициенты чтобы премии распределить пропорционально распределенным часам в ЗУП
			коэф1=?(НоваяСтрока.РаспределеноЧасов1+НоваяСтрока.РаспределеноЧасов2>0,НоваяСтрока.РаспределеноЧасов1/(НоваяСтрока.РаспределеноЧасов1+НоваяСтрока.РаспределеноЧасов2),0);
			коэф2=?(НоваяСтрока.РаспределеноЧасов1+НоваяСтрока.РаспределеноЧасов2>0,НоваяСтрока.РаспределеноЧасов2/(НоваяСтрока.РаспределеноЧасов1+НоваяСтрока.РаспределеноЧасов2),0);
			
			НоваяСтрока.ДоплатаЗаНапряженность=окр(ДоплатаЗаНапряженность,2);
			НоваяСтрока.ПремияЗаЛичнуюВыручку=окр(ПремияЗаЛичнуюВыручку,2);
			НоваяСтрока.ПремияЗаМаркетинговыеАкции=окр(ПремияЗаМаркетинговыеАкции,2);
			НоваяСтрока.ПремияСрокиИЗМЗ=окр(ПремияСрокиИЗМЗ,2);
			НоваяСтрока.ПремияЗаКомандировки=окр(ПремияЗаКомандировки,2);
			НоваяСтрока.Удержания=окр(Удержания,2); 
			
			НоваяСтрока.ДоплатаЗаНапряженность1=окр(ДоплатаЗаНапряженность*коэф1,2);
			НоваяСтрока.ПремияЗаЛичнуюВыручку1=окр(ПремияЗаЛичнуюВыручку*коэф1,2);
			НоваяСтрока.ПремияЗаМаркетинговыеАкции1=окр(ПремияЗаМаркетинговыеАкции*коэф1,2);
			НоваяСтрока.ПремияСрокиИЗМЗ1=окр(ПремияСрокиИЗМЗ*коэф1,2);
			НоваяСтрока.ПремияЗаКомандировки1=окр(ПремияЗаКомандировки*коэф1,2);
			НоваяСтрока.Удержания1=окр(Удержания*коэф1,2);
			
			НоваяСтрока.ДоплатаЗаНапряженность2=окр(ДоплатаЗаНапряженность*коэф2,2);
			НоваяСтрока.ПремияЗаЛичнуюВыручку2=окр(ПремияЗаЛичнуюВыручку*коэф2,2);
			НоваяСтрока.ПремияЗаМаркетинговыеАкции2=окр(ПремияЗаМаркетинговыеАкции*коэф2,2);
			НоваяСтрока.ПремияСрокиИЗМЗ2=окр(ПремияСрокиИЗМЗ*коэф2,2);
			НоваяСтрока.ПремияЗаКомандировки2=окр(ПремияЗаКомандировки*коэф2,2);
			НоваяСтрока.Удержания2=окр(Удержания*коэф2,2); 
			
			НоваяСтрока.ВсегоПремииРаспределено1=окр(НоваяСтрока.ДоплатаЗаНапряженность1+НоваяСтрока.ПремияЗаЛичнуюВыручку1+НоваяСтрока.ПремияЗаМаркетинговыеАкции1
			+НоваяСтрока.ПремияСрокиИЗМЗ1+НоваяСтрока.Удержания1,0); //Убрал премию Командировки  НоваяСтрока.ПремияЗаКомандировки1 это Статус2
						
			НоваяСтрока.ВсегоПремииРаспределено2=окр(НоваяСтрока.ДоплатаЗаНапряженность2+НоваяСтрока.ПремияЗаЛичнуюВыручку2+НоваяСтрока.ПремияЗаМаркетинговыеАкции2
			+НоваяСтрока.ПремияСрокиИЗМЗ2+НоваяСтрока.ПремияОценкаРуководителя2+НоваяСтрока.Удержания2,0); //Убрал премию Командировки  НоваяСтрока.ПремияЗаКомандировки2 это Статус2
			
			
			НоваяСтрока.ВсегоПремииРаспределено=НоваяСтрока.ВсегоПремииРаспределено1+НоваяСтрока.ВсегоПремииРаспределено2; 
			
		Иначе
			НоваяСтрока.НеРаспределеноЧасов=НоваяСтрока.ОтработаноВсего;
			
			НоваяСтрока.ТН_ЗУП1="";
			НоваяСтрока.ВидЗанятости1="";
			НоваяСтрока.ТН_ЗУП2=""; 
			НоваяСтрока.ВидЗанятости2="";
			НоваяСтрока.РаспределенВЗуп=Ложь;
			НоваяСтрока.РаспределеноЧасов=0;
			НоваяСтрока.РаспределеноЧасов1=0;
			НоваяСтрока.РаспределеноЧасов2=0; 
			
			НоваяСтрока.ОплатаПоЧасам=0; 
			НоваяСтрока.ОплатаПоЧасам1=0;
			НоваяСтрока.ОплатаПоЧасам2=0;
		КонецЕсли;
		
		
		Если НоваяСтрока.НеЗагружатьИзЗУП Тогда //Для завед (Которая работала как фармацевт) все выгружаем в ЗУП как премию на основное место работы
			НоваяСтрока.ВсегоПремииРаспределено=НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.Статус2;
			НоваяСтрока.ВсегоПремииРаспределено1=НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.Статус2;
			НоваяСтрока.РаспределенВЗуп=Истина;
		КонецЕсли; 
		
		Если НоваяСтрока.НеВыгружать Тогда //Для 0,85 и Уволен не выгружаем  в ЗУП
			НоваяСтрока.ВсегоПремииРаспределено=0;
			НоваяСтрока.РаспределенВЗуп=Ложь;
		КонецЕсли;
		
		Если НоваяСтрока.Должность=ДолжностьЗавед Тогда //Для завед (которые работают как завед) выгружаем премию  в ЗУП как премию на основное место работы
			НоваяСтрока.ОплатаПоЧасам=НоваяСтрока.Оклад0_166Сумма;
			НоваяСтрока.ОплатаПоЧасам1=НоваяСтрока.Оклад0_166Сумма;
			НоваяСтрока.ВсегоПремииРаспределено=НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.Оклад0_166Сумма;
			НоваяСтрока.ВсегоПремииРаспределено1=НоваяСтрока.ВсегоПоРасчету-НоваяСтрока.Оклад0_166Сумма;
			НоваяСтрока.РаспределенВЗуп=Истина;
		КонецЕсли;
		
		//КонецЕсли;	
	КонецЦикла;
КонецПроцедуры
&НаКлиенте
Процедура Рассчитать(Команда)
	РассчитатьНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ВыгрузитьXML(Команда)
	ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогСохраненияФайла.ПолноеИмяФайла="Сотрудники.XML";
	ДиалогСохраненияФайла.Заголовок = "Выберите файл"; 
	Если ДиалогСохраненияФайла.Выбрать() Тогда 
		ТекДок = Новый ТекстовыйДокумент;
		ТекДок.ДобавитьСтроку(ПолучитьXMLНаСервере());
		ТекДок.Записать(ДиалогСохраненияФайла.ПолноеИмяФайла);
	КонецЕсли;
КонецПроцедуры 
&НаСервере
Функция ПолучитьXMLНаСервере()
	//Выгуржаем  xml_  
	//ПутьКФайлуДляЗаписи="\\10.3.7.12\project\Exchange\OUT\test\1.xml";
	ЗаписьXML = Новый ЗаписьXML;
	//ЗаписьXML.ОткрытьФайл("E:\temp\10\test_data.xml", "UTF-8", Истина); нелья, т.к. в этом случае запись на сервере делает
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьОбъявлениеXML();    
	ЗаписьXML.ЗаписатьНачалоЭлемента("Таблица");
	Таблица1=Объект.ТЧАптека.Выгрузить();
	Для каждого Строка1 из Таблица1 Цикл    
		ЗаписьXML.ЗаписатьНачалоЭлемента("СтрокаТаблицы");// Сотрудник
		//ЗаписьXML.ЗаписатьАтрибут("НомерСтроки", Строка(Строка1.НомерСтроки));
		//ЗаписьXML.ЗаписатьАтрибут("ФИО", Строка(Строка1.Сотрудник));
		//ЗаписьXML.ЗаписатьАтрибут("ИНН", Строка(Строка1.ИНН));
		
		Для Каждого Столбец1 Из Таблица1.Колонки Цикл
			Значение1=Строка1[Таблица1.Колонки.Индекс(Столбец1)]; 
			Если ТипЗнч(Значение1)=Тип("Число") Тогда
				Значение1=Формат(Значение1,"ЧН=; ЧГ=");
			КонецЕсли;
			ЗаписьXML.ЗаписатьАтрибут(Строка(Столбец1.Имя), Строка(Значение1));	
		КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Сотрудник
	КонецЦикла;
	ЗаписьXML.ЗаписатьКонецЭлемента(); // Сотрудники
	СтрокаXML=ЗаписьXML.Закрыть();
	Возврат СтрокаXML;
	//_xml	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика
	Объект.ТЧАптека.Сортировать("Сотрудник");
КонецПроцедуры


&НаСервере
Процедура ДозаполнитьТаблицуДаннымиПоУдержаниям()
	
	//т.к. в данном документе могут быть несколько строк по одному физлицу, то вешаем сумму на первое найденное физлицо
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗГ_УдержанияСотрудниковОрганизацииОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЗГ_УдержанияСотрудниковОрганизацииОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ЗГ_УдержанияСотрудниковОрганизации.Остатки(&КонецПериода, ФизическоеЛицо В (&СписокФизическихЛиц)) КАК ЗГ_УдержанияСотрудниковОрганизацииОстатки";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.ДатаПо) + 1);
	Запрос.УстановитьПараметр("СписокФизическихЛиц", Объект.ТЧАптека.Выгрузить().ВыгрузитьКолонку("Сотрудник"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Сотрудник", Выборка.ФизическоеЛицо);
		
		НайденныеСтроки = Объект.ТЧАптека.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].Доплата2 = - Выборка.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧАптекаДоплата2ПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТЧАптека.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ТекущиеДанные.ИтогоДоГраниц = ТекущиеДанные.ИтогоЗаОтработанноеВремя + ТекущиеДанные.ИтогоБонусов + ТекущиеДанные.БонусАкции + ТекущиеДанные.БонусЗМЗ
		+ ТекущиеДанные.БонусОценка + ТекущиеДанные.Доплата1 + ТекущиеДанные.Доплата2;
		
		ТекущиеДанные.ВсегоПоРасчету = ТекущиеДанные.ИтогоДоГраниц;
		
		Если  ТекущиеДанные.ИтогоДоГраниц < ТекущиеДанные.МинимумПоФакту Тогда
			
			ТекущиеДанные.ПремияМин = ТекущиеДанные.МинимумПоФакту - ТекущиеДанные.ВсегоПоРасчету;			
			ТекущиеДанные.ВсегоПоРасчету = ТекущиеДанные.МинимумПоФакту;
			
		КонецЕсли;
		
		
		Если ТекущиеДанные.ИтогоДоГраниц > ТекущиеДанные.МаксимумПоФакту Тогда
			
			ТекущиеДанные.ПремияМакс = ТекущиеДанные.МаксимумПоФакту - ТекущиеДанные.ВсегоПоРасчету;			
			ТекущиеДанные.ВсегоПоРасчету = ТекущиеДанные.МаксимумПоФакту;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаДублейНаСервере()
	
	Если ОтборДублейУстановлен Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДанныеТабличнойЧасти.Сотрудник КАК Сотрудник,
		|	1 КАК Количество
		|ПОМЕСТИТЬ ВТ_ДанныеТабличнойЧасти
		|ИЗ
		|	&ДанныеТабличнойЧасти КАК ДанныеТабличнойЧасти
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеТабличнойЧасти.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_ДанныеТабличнойЧасти.Количество) КАК Количество
		|ИЗ
		|	ВТ_ДанныеТабличнойЧасти КАК ВТ_ДанныеТабличнойЧасти
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДанныеТабличнойЧасти.Сотрудник
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВТ_ДанныеТабличнойЧасти.Количество) > 1";
		
		Запрос.УстановитьПараметр("ДанныеТабличнойЧасти", Объект.ТЧАптека.Выгрузить());
		
		Результат = Запрос.Выполнить();
		МассивФизическихЛиц = Результат.Выгрузить().ВыгрузитьКолонку("Сотрудник");
		//Для каждого ФизЛицо из МассивФизическихЛиц Цикл	
		//	//Красим поля	
		//Элемент = УсловноеОформление.Элементы.Добавить();
		//
		//ПолеЭлемента1 = Элемент.Поля.Элементы.Добавить();
		//ПолеЭлемента1.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТЧАптекаСотрудник.Имя);
		
		//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ТЧАптека.Сотрудник");
		//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//ОтборЭлемента.ПравоеЗначение =ФизЛицо; //Справочники.Должности.НайтиПоНаименованию("Горничная",истина);
		//Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона",Новый Цвет(250,0,0));
		//КонецЦикла;	
		Для каждого Строка1 из Объект.ТЧАптека Цикл
			Если НЕ МассивФизическихЛиц.Найти(Строка1.Сотрудник)=Неопределено Тогда
				Строка1.ЭлементВыбран=Истина;
			Иначе
				Строка1.ЭлементВыбран=Ложь;
			КонецЕсли;
		КонецЦикла;
		СтруктураФ=Новый ФиксированнаяСтруктура("ЭлементВыбран", Истина);
		Элементы.ТЧАптека.ОтборСтрок =СтруктураФ;
	Иначе
		
		Элементы.ТЧАптека.ОтборСтрок = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаДублей(Команда)
	
	ОтборДублейУстановлен = НЕ ОтборДублейУстановлен; 
	
	ПроверкаДублейНаСервере();
	
	Элементы.ТЧАптекаПроверкаДублей.Заголовок = ?(ОтборДублейУстановлен, "Отключить отбор дублей", "Показать дубли");
	
КонецПроцедуры

&НаСервере
Процедура ДокументОснованиеПриИзмененииНаСервере()
	Если ТипЗнч(Объект.ДокументОснование)=тип("ДокументСсылка.Аптека_НачислениеЗарплатыЗавед") Тогда
		 Объект.ДатаС=Объект.ДокументОснование.ПериодВыплатыС;
		Объект.ДатаПо=Объект.ДокументОснование.ПериодВыплатыПо;
	КонецЕсли;
	Если ТипЗнч(Объект.ДокументОснование)=Тип("ДокументСсылка.Аптека_НачислениеЗарплаты") Тогда
		Объект.ДатаС=Объект.ДокументОснование.ДатаС;
		Объект.ДатаПо=Объект.ДокументОснование.ДатаПо;
	КонецЕсли;
	Объект.Подразделение=Объект.ДокументОснование.Подразделение;
	//Объект.НормаЧасовМесяц=Объект.ДокументОснование.НормаЧасовМесяц;  
	
	//Заполняем табличную часть
	
	// Вставить содержимое обработчика.
	Объект.ТЧАптека.Очистить();
	
	//Сотр=ПолучитьСотрудниковПоОсновному();
	//Для каждого Эл из Сотр  цикл
	Запрос=новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ
	              |	НачисленияЗППоАптекам.Период КАК Период,
	              |	НачисленияЗППоАптекам.Регистратор КАК Регистратор,
	              |	НачисленияЗППоАптекам.НомерСтроки КАК НомерСтроки,
	              |	НачисленияЗППоАптекам.Активность КАК Активность,
	              |	НачисленияЗППоАптекам.Подразделение КАК Подразделение,
	              |	НачисленияЗППоАптекам.ФизическоеЛицо КАК ФизическоеЛицо,
	              |	НачисленияЗППоАптекам.Должность КАК Должность,
	              |	НачисленияЗППоАптекам.ОсновнаяАптека КАК ОсновнаяАптека,
	              |	НачисленияЗППоАптекам.ТН КАК ТН,
	              |	НачисленияЗППоАптекам.ИНН КАК ИНН,
	              |	НачисленияЗППоАптекам.ВсегоПоРасчету КАК ВсегоПоРасчету,
	              |	НачисленияЗППоАптекам.МинимумПоФакту КАК МинимумПоФакту,
	              |	НачисленияЗППоАптекам.МаксимумПоФакту КАК МаксимумПоФакту,
	              |	НачисленияЗППоАптекам.ИтогоДоГраниц КАК ИтогоДоГраниц,
	              |	НачисленияЗППоАптекам.ОтработаноВсего КАК ОтработаноВсего,
	              |	НачисленияЗППоАптекам.ИтогоЗаОтработанноеВремя КАК ИтогоЗаОтработанноеВремя,
	              |	НачисленияЗППоАптекам.Минимум КАК Минимум,
	              |	НачисленияЗППоАптекам.Оклад0_166_Часы КАК Оклад0_166_Часы,
	              |	НачисленияЗППоАптекам.Оклад0_166Сумма КАК Оклад0_166Сумма,
	              |	НачисленияЗППоАптекам.Оклад2Часы КАК Оклад2Часы,
	              |	НачисленияЗППоАптекам.Оклад2Сумма КАК Оклад2Сумма,
	              |	НачисленияЗППоАптекам.Оклад3_Часы КАК Оклад3_Часы,
	              |	НачисленияЗППоАптекам.Оклад3_Сумма КАК Оклад3_Сумма,
	              |	НачисленияЗППоАптекам.Ночь_Часы КАК Ночь_Часы,
	              |	НачисленияЗППоАптекам.Ночь_Сумма КАК Ночь_Сумма,
	              |	НачисленияЗППоАптекам.ИтогоБонусов КАК ИтогоБонусов,
	              |	НачисленияЗППоАптекам.БонусНеДТМ КАК БонусНеДТМ,
	              |	НачисленияЗППоАптекам.БонусДТМ КАК БонусДТМ,
	              |	НачисленияЗППоАптекам.БонусЗаОптику КАК БонусЗаОптику,
	              |	НачисленияЗППоАптекам.БонусАкции КАК БонусАкции,
	              |	НачисленияЗППоАптекам.БонусЗМЗ КАК БонусЗМЗ,
	              |	НачисленияЗППоАптекам.БонусОценка КАК БонусОценка,
	              |	НачисленияЗППоАптекам.Доплата1 КАК Доплата1,
	              |	НачисленияЗППоАптекам.Доплата2 КАК Доплата2,
	              |	НачисленияЗППоАптекам.ПремияМин КАК ПремияМин,
	              |	НачисленияЗППоАптекам.ПремияМакс КАК ПремияМакс,
	              |	НачисленияЗППоАптекам.ОкладПоЧасам КАК ОкладПоЧасам,
	              |	НачисленияЗППоАптекам.ОбщаяПремия КАК ОбщаяПремия,
	              |	НачисленияЗППоАптекам.ПремияЗаКатегориюСтоимость КАК ПремияЗаКатегориюСтоимость,
	              |	НачисленияЗППоАптекам.ДоплатаЗаКатегорию КАК ДоплатаЗаКатегорию,
	              |	НачисленияЗППоАптекам.Статус1 КАК Статус1,
	              |	НачисленияЗППоАптекам.Статус2 КАК Статус2,
	              |	НачисленияЗППоАптекам.ПремияKPI КАК ПремияKPI,
	              |	НачисленияЗППоАптекам.ПраздникиДеньЧасы КАК ПраздникиДеньЧасы,
	              |	НачисленияЗППоАптекам.ПраздникиДеньСумма КАК ПраздникиДеньСумма,
	              |	НачисленияЗППоАптекам.ПраздникиНочьЧасы КАК ПраздникиНочьЧасы,
	              |	НачисленияЗППоАптекам.ПраздникиНочьСумма КАК ПраздникиНочьСумма,
	              |	НачисленияЗППоАптекам.ВыходныеДеньЧасы КАК ВыходныеДеньЧасы,
	              |	НачисленияЗППоАптекам.ВыходныеДеньСумма КАК ВыходныеДеньСумма,
	              |	НачисленияЗППоАптекам.БонусЗвонки КАК БонусЗвонки,
	              |	НачисленияЗППоАптекам.БонусСтрокиЗаказов КАК БонусСтрокиЗаказов,
	              |	НачисленияЗППоАптекам.БонусЗаУслугиВрача КАК БонусЗаУслугиВрача,
	              |	НачисленияЗППоАптекам.БонусЗаОчковыеЛинзы КАК БонусЗаОчковыеЛинзы,
	              |	НачисленияЗППоАптекам.ПремияНочнаяСтоимость КАК ПремияНочнаяСтоимость,
	              |	НачисленияЗППоАптекам.ПремияНочнаяСумма КАК ПремияНочнаяСумма,
	              |	НачисленияЗППоАптекам.Уволен КАК Уволен,
	              |	НачисленияЗППоАптекам.РазрядКатегория КАК РазрядКатегория,
	              |	НачисленияЗППоАптекам.РазрядПодразделение КАК РазрядПодразделение,
	              |	НачисленияЗППоАптекам.Доплата3 КАК Доплата3,
	              |	НачисленияЗППоАптекам.Уборка КАК Уборка
	              |ИЗ
	              |	РегистрСведений.НачисленияЗППоАптекам КАК НачисленияЗППоАптекам
	              |ГДЕ
	              |	НачисленияЗППоАптекам.Период = &Период
	              |	И НачисленияЗППоАптекам.Регистратор = &Регистратор";
	//Если ПризнакУволенного=истина Тогда
	//	Запрос.Текст=Запрос.Текст+"
	//	|	И ДанныеПоАптекам.Уволенная = &Истина";
	//КонецЕсли;
	Запрос.УстановитьПараметр("Период",Объект.ДатаС);
	Запрос.УстановитьПараметр("Регистратор",Объект.ДокументОснование);
	
	
	РезультатЗапроса=Запрос.Выполнить();
	ВыборкаДетальныеЗаписи=РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		////Если ПризнакУволенного=истина и РезультатФЛ.Количество()=0 тогда
		////	Продолжить;
		////конецесли;
		//
		НоваяСтрока=Объект.ТЧАптека.Добавить();
		НоваяСтрока.Сотрудник=ВыборкаДетальныеЗаписи.ФизическоеЛицо;
		НоваяСтрока.ТН=ВыборкаДетальныеЗаписи.ТН;
		НоваяСтрока.ИНН=ВыборкаДетальныеЗаписи.ФизическоеЛицо.ИНН;
		НоваяСтрока.Должность=ВыборкаДетальныеЗаписи.Должность;	
		НоваяСтрока.РазрядКатегория=ВыборкаДетальныеЗаписи.РазрядКатегория;
		НоваяСтрока.РазрядПодразделение=ВыборкаДетальныеЗаписи.РазрядПодразделение;	
		////НоваяСтрока.РазрядКатегория=Эл.РазрядКатегория;
		////НоваяСтрока.РазрядПодразделение=Эл.РазрядПодразделение;
		////НоваяСтрока.ОсновноеМестоРаботы=истина;
		НоваяСтрока.ОсновнаяАптека=ВыборкаДетальныеЗаписи.ОсновнаяАптека;
		НоваяСтрока.ВсегоПоРасчету=ВыборкаДетальныеЗаписи.ВсегоПоРасчету;
		НоваяСтрока.МинимумПоФакту=ВыборкаДетальныеЗаписи.МинимумПоФакту;
		НоваяСтрока.МаксимумПоФакту=ВыборкаДетальныеЗаписи.МаксимумПоФакту;
		НоваяСтрока.ИтогоДоГраниц=ВыборкаДетальныеЗаписи.ИтогоДоГраниц;
		НоваяСтрока.ОтработаноВсего=ВыборкаДетальныеЗаписи.ОтработаноВсего;
		НоваяСтрока.ИтогоЗаОтработанноеВремя=ВыборкаДетальныеЗаписи.ИтогоЗаОтработанноеВремя;
		
		НоваяСтрока.ОплатаПоЧасам=0; //ОплатаПоЧасам;
		НоваяСтрока.ДоплатаЗаНапряженность=0;//ДоплатаЗаНапряженность;
		НоваяСтрока.ПремияЗаЛичнуюВыручку=ВыборкаДетальныеЗаписи.ИтогоБонусов;;
		НоваяСтрока.ПремияЗаМаркетинговыеАкции=ВыборкаДетальныеЗаписи.БонусАкции;
		НоваяСтрока.ПремияСрокиИЗМЗ=ВыборкаДетальныеЗаписи.БонусЗМЗ;
		НоваяСтрока.ПремияОценкаРуководителя=ВыборкаДетальныеЗаписи.БонусОценка;
		НоваяСтрока.ПремияЗаКомандировки=ВыборкаДетальныеЗаписи.Доплата1;
		НоваяСтрока.Удержания=ВыборкаДетальныеЗаписи.Доплата2;
		
		НоваяСтрока.Оклад0_166_Часы=ВыборкаДетальныеЗаписи.Оклад0_166_Часы;
		НоваяСтрока.Оклад0_166Сумма=ВыборкаДетальныеЗаписи.Оклад0_166Сумма;
		НоваяСтрока.Оклад2Часы=ВыборкаДетальныеЗаписи.Оклад2Часы;
		НоваяСтрока.Оклад2Сумма=ВыборкаДетальныеЗаписи.Оклад2Сумма;
		НоваяСтрока.Оклад3_Часы=ВыборкаДетальныеЗаписи.Оклад3_Часы;
		НоваяСтрока.Оклад3_Сумма=ВыборкаДетальныеЗаписи.Оклад3_Сумма;
		НоваяСтрока.Ночь_Часы=ВыборкаДетальныеЗаписи.Ночь_Часы;
		НоваяСтрока.Ночь_Сумма=ВыборкаДетальныеЗаписи.Ночь_Сумма;
		НоваяСтрока.ПраздникиДеньЧасы=ВыборкаДетальныеЗаписи.ПраздникиДеньЧасы;
		НоваяСтрока.ПраздникиДеньСумма=ВыборкаДетальныеЗаписи.ПраздникиДеньСумма;
		НоваяСтрока.ПраздникиНочьЧасы=ВыборкаДетальныеЗаписи.ПраздникиНочьЧасы;
		НоваяСтрока.ПраздникиНочьСумма=ВыборкаДетальныеЗаписи.ПраздникиНочьСумма;
		НоваяСтрока.ИтогоБонусов=ВыборкаДетальныеЗаписи.ИтогоБонусов;
		НоваяСтрока.БонусНеДТМ=ВыборкаДетальныеЗаписи.БонусНеДТМ;
		НоваяСтрока.БонусДТМ=ВыборкаДетальныеЗаписи.БонусДТМ;
		НоваяСтрока.БонусЗаОптику=ВыборкаДетальныеЗаписи.БонусЗаОптику;
		НоваяСтрока.БонусАкции=ВыборкаДетальныеЗаписи.БонусАкции;
		НоваяСтрока.БонусЗМЗ=ВыборкаДетальныеЗаписи.БонусЗМЗ;
		НоваяСтрока.БонусОценка=ВыборкаДетальныеЗаписи.БонусОценка; 
		НоваяСтрока.Доплата1=ВыборкаДетальныеЗаписи.Доплата1;
		НоваяСтрока.Доплата2=ВыборкаДетальныеЗаписи.Доплата2;
		НоваяСтрока.Доплата3=ВыборкаДетальныеЗаписи.Доплата3;
		НоваяСтрока.Уборка=ВыборкаДетальныеЗаписи.Уборка;
		НоваяСтрока.ПремияМин=ВыборкаДетальныеЗаписи.ПремияМин;
		НоваяСтрока.ПремияМакс=ВыборкаДетальныеЗаписи.ПремияМакс;
		НоваяСтрока.ОкладПоЧасам=ВыборкаДетальныеЗаписи.ОкладПоЧасам;
		НоваяСтрока.ОбщаяПремия=ВыборкаДетальныеЗаписи.ОбщаяПремия;
		НоваяСтрока.ДоплатаЗаКатегорию=ВыборкаДетальныеЗаписи.ДоплатаЗаКатегорию;
		НоваяСтрока.ПремияЗаКатегориюСтоимость=ВыборкаДетальныеЗаписи.ПремияЗаКатегориюСтоимость;
		НоваяСтрока.Статус1=ВыборкаДетальныеЗаписи.Статус1;
		НоваяСтрока.Статус2=ВыборкаДетальныеЗаписи.Статус2;
		НоваяСтрока.ПремияНочнаяСтоимость=ВыборкаДетальныеЗаписи.ПремияНочнаяСтоимость;
		НоваяСтрока.ПремияНочнаяСумма=ВыборкаДетальныеЗаписи.ПремияНочнаяСумма;
		НоваяСтрока.Уволен=ВыборкаДетальныеЗаписи.Уволен;
		НоваяСтрока.ПремияЗвонки=ВыборкаДетальныеЗаписи.БонусЗвонки;
		НоваяСтрока.ПремияУпаковки=ВыборкаДетальныеЗаписи.БонусСтрокиЗаказов;
		
	КонецЦикла;
	
	Объект.ТЧАптека.Сортировать("Сотрудник");
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
	ДокументОснованиеПриИзмененииНаСервере();
КонецПроцедуры




