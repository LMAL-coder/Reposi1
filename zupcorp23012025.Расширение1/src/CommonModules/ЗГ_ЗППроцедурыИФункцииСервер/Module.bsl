&НаСервере
Функция ПолучитьДанныеМотивацииИзРПТК_(ТорговаяТочка = Неопределено, ДатаНачала = Неопределено, ДатаОкончания = Неопределено) Экспорт  
	
	ЗагружаемыеПродажи = Новый ТаблицаЗначений;
	ЗагружаемыеПродажи.Колонки.Добавить("КодСотрудника", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)));
	ЗагружаемыеПродажи.Колонки.Добавить("СуммаПродаж", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	ЗагружаемыеПродажи.Колонки.Добавить("НеДТМ", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	ЗагружаемыеПродажи.Колонки.Добавить("ДТМ", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	ЗагружаемыеПродажи.Колонки.Добавить("Срок60", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	ЗагружаемыеПродажи.Колонки.Добавить("ЗМЗ365", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗГ_СервисыАптек.ТорговаяТочка КАК ТорговаяТочка,
	|	ЗГ_СервисыАптек.IPАдрес КАК IPАдрес,
	|	ЗГ_СервисыАптек.Порт КАК Порт
	|ИЗ
	|	РегистрСведений.ЗГ_СервисыАптек КАК ЗГ_СервисыАптек
	|ГДЕ
	|	НЕ ЗГ_СервисыАптек.Блокировать";
	Если ЗначениеЗаполнено(ТорговаяТочка) И ТипЗнч(ТорговаяТочка) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		Запрос.Текст = Запрос.Текст + Символы.ПС + "	И ЗГ_СервисыАптек.ТорговаяТочка = &ТорговаяТочка";
		Запрос.УстановитьПараметр("ТорговаяТочка", ТорговаяТочка);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачала) И ТипЗнч(ДатаНачала) = Тип("Дата") Тогда
		ДатаНачалаСтрокой = Формат(ДатаНачала, "ДФ=dd-MM-yyyy чч:мм:сс");
	Иначе
		ДатаНачалаСтрокой = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаОкончания) И ТипЗнч(ДатаОкончания) = Тип("Дата") Тогда
		ДатаОкончанияСтрокой = Формат(ДатаОкончания, "ДФ=dd-MM-yyyy чч:мм:сс");
	Иначе
		ДатаОкончанияСтрокой = "";
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСоединения = Выборка.IPАдрес + ":" + Выборка.Порт + "/service/";
	КонецЦикла;
	//IPАдрес="192.168.13.50";
	//Порт="80";
	//ДатаНачалаСтрокой = "23.05.2024";
	//ДатаОкончанияСтрокой = "24.05.2024";
	
	//СтрокаСоединения = IPАдрес + ":" + Порт + "/service/";
	HTTP  = Новый HTTPСоединение(СтрокаСоединения); 
	HTTPЗапрос = Новый HTTPЗапрос();
	//IDПродажи = ПоследняяЗагруженнаяПродажаПлюсОдин(Выборка.ТорговаяТочка);
	
	ТекДата = ТекущаяДата();
	
	HTTPЗапрос.АдресРесурса = "motivation/?datefrom=" + ДатаНачалаСтрокой + "&dateto=" + ДатаОкончанияСтрокой + "&compressed=1";
	ОписаниеОшибки = "";
	Попытка
		Ответ = HTTP.ОтправитьДляОбработки(HTTPЗапрос);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ЕстьОшибкаУстановкиСоединения = СтрНайти(НРег(ОписаниеОшибки), "не могу установить соединение") > 0;
		Если Не ЕстьОшибкаУстановкиСоединения Тогда 
			//РазослатьУведомленияОбОшибкеЗагрузкиПродаж(ТекДата, Выборка.ТорговаяТочка, "Ошибка отправки запроса." + Символы.ПС + ОписаниеОшибки());
			Сообщить(ТекДата+" Ошибка отправки запроса. " + Символы.ПС + ОписаниеОшибки());
		КонецЕсли;
		//Продолжить;
	КонецПопытки;
	Если Ответ.КодСостояния=200 Тогда
		
		XML = Ответ.ПолучитьТелоКакСтроку();   
		
		Если XML = "" Тогда 
			//РазослатьУведомленияОбОшибкеЗагрузкиПродаж(ТекДата, Выборка.ТорговаяТочка, "Пустой ответ от сервиса.");
			//Продолжить;
			Сообщить("Пустой ответ от сервиса.");
		КонецЕсли;
		
		ЕстьОшибка = СтрНайти(НРег(XML), "error") > 0 И Не СтрНайти(НРег(XML), "connect error") > 0 И Не СтрНайти(НРег(XML), "maximum execution time of") > 0;
		Если ЕстьОшибка Тогда
			//РазослатьУведомленияОбОшибкеЗагрузкиПродаж(ТекДата, Выборка.ТорговаяТочка, XML);
		Иначе
			
			ЧтениеXML = Новый ЧтениеXML;
			ЧтениеXML.УстановитьСтроку(XML);  	
			ОбъектXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);   	
			
			Если ОбъектXDTO.Свойства().Получить("line") = Неопределено Тогда
				Возврат Ложь;
			КонецЕсли;
			
			Если ТипЗнч(ОбъектXDTO.line) = Тип("ОбъектXDTO") Тогда
				СписокXDTO = Новый Массив;
				СписокXDTO.Добавить(ОбъектXDTO.line);
			ИначеЕсли ТипЗнч(ОбъектXDTO.line) = Тип("СписокXDTO") Тогда  
				СписокXDTO = ОбъектXDTO.line;
			КонецЕсли;
			
			Попытка
				Для Каждого Line Из СписокXDTO Цикл
					
					LineСвойства = Line.Свойства();
					
					Продажа = ЗагружаемыеПродажи.Добавить();
					Продажа.КодСотрудника = Line.Id;
					Продажа.СуммаПродаж = Число(Line.summ);
					Продажа.НеДТМ = Число(Line.notdtm);
					Продажа.ДТМ = Число(Line.dtm);
					Продажа.Срок60 = Число(Line.srok60);
					Продажа.ЗМЗ365 = Число(Line.zmz365);
				КонецЦикла;
			Исключение
				ТекстОшибки =  "Ошибка разбора объекта XDTO" + Символы.ПС + ИнформацияОбОшибке().Описание;
				//РазослатьУведомленияОбОшибкеЗагрузкиПродаж(ТекущаяДата(), РозничнаяТочка, ТекстОшибки);
				Сообщить(ТекстОшибки);
				Если Не Продажа = Неопределено Тогда
					ЗагружаемыеПродажи.Удалить(Продажа);
				КонецЕсли;
				
			КонецПопытки;
			//ОбъектXDTO = ПроизвольныйОбъектXDTOПоТекстуСообщенияXML(XML);
			//СтрокиДобавлены = ДобавитьСтрокиОбъектаXDTO(ЗагружаемыеПродажи, ОбъектXDTO, "Аптека99");
			//Если СтрокиДобавлены Тогда
			//	ДобавитьПоследнийЗагруженныйIDПродажи(ПоследниеЗагруженныеIDПродаж, IDПродажи, ОбъектXDTO, Выборка.ТорговаяТочка);
			//КонецЕсли;
		КонецЕсли;
	Иначе
		Сообщить("Ошибка получения данных мотивации из базы РПТК. Ответ сервиса "+Ответ.КодСостояния);
	КонецЕсли;
	
	
	Возврат ЗагружаемыеПродажи; 
	
КонецФункции
&НаСервере
Функция ПолучитьДанныеМотивацииИзРПТК(ТорговаяТочка = Неопределено, ДатаНачала = Неопределено, ДатаОкончания = Неопределено, МесЗМЗ= Неопределено) Экспорт 
	
	
	ЗагружаемыеПродажи = Новый ТаблицаЗначений;
	ЗагружаемыеПродажи.Колонки.Добавить("КодСотрудника", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)));
	ЗагружаемыеПродажи.Колонки.Добавить("СуммаПродаж", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	ЗагружаемыеПродажи.Колонки.Добавить("НеДТМ", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	ЗагружаемыеПродажи.Колонки.Добавить("ДТМ", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	ЗагружаемыеПродажи.Колонки.Добавить("Срок60", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	ЗагружаемыеПродажи.Колонки.Добавить("Срок60СуммаПродаж", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	ЗагружаемыеПродажи.Колонки.Добавить("ЗМЗ365", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	ЗагружаемыеПродажи.Колонки.Добавить("ЗМЗ365СуммаПродаж", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2)));
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗГ_СервисыАптек.ТорговаяТочка КАК ТорговаяТочка,
	|	ЗГ_СервисыАптек.IPАдрес КАК IPАдрес,
	|	ЗГ_СервисыАптек.Порт КАК Порт
	|ИЗ
	|	РегистрСведений.ЗГ_СервисыАптек КАК ЗГ_СервисыАптек
	|ГДЕ
	|	НЕ ЗГ_СервисыАптек.Блокировать";
	Если ЗначениеЗаполнено(ТорговаяТочка) И ТипЗнч(ТорговаяТочка) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		Запрос.Текст = Запрос.Текст + Символы.ПС + "	И ЗГ_СервисыАптек.ТорговаяТочка = &ТорговаяТочка";
		Запрос.УстановитьПараметр("ТорговаяТочка", ТорговаяТочка);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачала) И ТипЗнч(ДатаНачала) = Тип("Дата") Тогда
		ДатаНачалаСтрокой = Формат(ДатаНачала, "ДФ=dd-MM-yyyy чч:мм:сс");
	Иначе
		ДатаНачалаСтрокой = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаОкончания) И ТипЗнч(ДатаОкончания) = Тип("Дата") Тогда
		ДатаОкончанияСтрокой = Формат(ДатаОкончания, "ДФ=dd-MM-yyyy чч:мм:сс");
	Иначе
		ДатаОкончанияСтрокой = "";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(МесЗМЗ) Тогда
		
		МесЗМЗ="12";
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаСоединения = Выборка.IPАдрес + ":" + Выборка.Порт + "/service/";
	КонецЦикла;
	//IPАдрес="192.168.13.50";
	//Порт="80";
	//ДатаНачалаСтрокой = "23.05.2024";
	//ДатаОкончанияСтрокой = "24.05.2024";
	
	//СтрокаСоединения = IPАдрес + ":" + Порт + "/service/";
	HTTP  = Новый HTTPСоединение(СтрокаСоединения); 
	HTTPЗапрос = Новый HTTPЗапрос();
	//IDПродажи = ПоследняяЗагруженнаяПродажаПлюсОдин(Выборка.ТорговаяТочка);
	
	ТекДата = ТекущаяДата();
	
	HTTPЗапрос.АдресРесурса = "motivation/?datefrom=" + ДатаНачалаСтрокой + "&dateto=" + ДатаОкончанияСтрокой + "&zmz=" + МесЗМЗ + "&compressed=1";
	ОписаниеОшибки = "";
	Попытка
		Ответ = HTTP.ОтправитьДляОбработки(HTTPЗапрос);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ЕстьОшибкаУстановкиСоединения = СтрНайти(НРег(ОписаниеОшибки), "не могу установить соединение") > 0;
		Если Не ЕстьОшибкаУстановкиСоединения Тогда 
			//РазослатьУведомленияОбОшибкеЗагрузкиПродаж(ТекДата, Выборка.ТорговаяТочка, "Ошибка отправки запроса." + Символы.ПС + ОписаниеОшибки());
			Сообщить(ТекДата+" Ошибка отправки запроса. " + Символы.ПС + ОписаниеОшибки());
		КонецЕсли;
		//Продолжить;
	КонецПопытки;
	Если Ответ.КодСостояния=200 Тогда
		
		XML = Ответ.ПолучитьТелоКакСтроку();   
		
		Если XML = "" Тогда 
			//РазослатьУведомленияОбОшибкеЗагрузкиПродаж(ТекДата, Выборка.ТорговаяТочка, "Пустой ответ от сервиса.");
			//Продолжить;
			Сообщить("Пустой ответ от сервиса.");
		КонецЕсли;
		
		ЕстьОшибка = СтрНайти(НРег(XML), "error") > 0 И Не СтрНайти(НРег(XML), "connect error") > 0 И Не СтрНайти(НРег(XML), "maximum execution time of") > 0;
		Если ЕстьОшибка Тогда
			//РазослатьУведомленияОбОшибкеЗагрузкиПродаж(ТекДата, Выборка.ТорговаяТочка, XML);
		Иначе
			
			ЧтениеXML = Новый ЧтениеXML;
			ЧтениеXML.УстановитьСтроку(XML);  	
			ОбъектXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);   	
			
			Если ОбъектXDTO.Свойства().Получить("line") = Неопределено Тогда
				Возврат Ложь;
			КонецЕсли;
			
			Если ТипЗнч(ОбъектXDTO.line) = Тип("ОбъектXDTO") Тогда
				СписокXDTO = Новый Массив;
				СписокXDTO.Добавить(ОбъектXDTO.line);
			ИначеЕсли ТипЗнч(ОбъектXDTO.line) = Тип("СписокXDTO") Тогда  
				СписокXDTO = ОбъектXDTO.line;
			КонецЕсли;
			
			Попытка
				Для Каждого Line Из СписокXDTO Цикл
					
					LineСвойства = Line.Свойства();
					
					Продажа = ЗагружаемыеПродажи.Добавить();
					Продажа.КодСотрудника = Line.Id;
					Продажа.СуммаПродаж = Число(Line.summ);
					Продажа.НеДТМ = Число(Line.notdtm);
					Продажа.ДТМ = Число(Line.dtm);
					Продажа.Срок60 = Число(Line.srok60);
					Продажа.Срок60СуммаПродаж = Число(Line.srok60sum);
					Продажа.ЗМЗ365 = Число(Line.zmz365);
					Продажа.ЗМЗ365СуммаПродаж = Число(Line.zmz365sum);
					
				КонецЦикла;
			Исключение
				ТекстОшибки =  "Ошибка разбора объекта XDTO" + Символы.ПС + ИнформацияОбОшибке().Описание;
				//РазослатьУведомленияОбОшибкеЗагрузкиПродаж(ТекущаяДата(), РозничнаяТочка, ТекстОшибки);
				Сообщить(ТекстОшибки);
				Если Не Продажа = Неопределено Тогда
					ЗагружаемыеПродажи.Удалить(Продажа);
				КонецЕсли;
				
			КонецПопытки;
			//ОбъектXDTO = ПроизвольныйОбъектXDTOПоТекстуСообщенияXML(XML);
			//СтрокиДобавлены = ДобавитьСтрокиОбъектаXDTO(ЗагружаемыеПродажи, ОбъектXDTO, "Аптека99");
			//Если СтрокиДобавлены Тогда
			//	ДобавитьПоследнийЗагруженныйIDПродажи(ПоследниеЗагруженныеIDПродаж, IDПродажи, ОбъектXDTO, Выборка.ТорговаяТочка);
			//КонецЕсли;
		КонецЕсли;
	Иначе
		Сообщить("Ошибка получения данных мотивации из базы РПТК. Ответ сервиса "+Ответ.КодСостояния);
	КонецЕсли;
	
	
	Возврат ЗагружаемыеПродажи; 
	
КонецФункции 
Функция ПолучитьДанныеПродвиженияТоваровИзЕРП(Подразделение, ДатаНачала, ДатаОкончания) Экспорт
	
	ТаблицаИтог = Новый ТаблицаЗначений;
	ТаблицаИтог.Колонки.Добавить("КемПродано", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)));
	ТаблицаИтог.Колонки.Добавить("КоличествоОборот", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	ТаблицаИтог.Колонки.Добавить("СуммаОборот", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	//КемПродано,КоличествоОборот,СуммаОборот,СуммаСкидкиОборот
	
	//Получаем код аптеки					
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК Значение
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
	|ГДЕ
	|	ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Наименование =""Сокращенное наименование (Подразделения)""
	|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Подразделение);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	КодАптеки="";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КодАптеки=ВыборкаДетальныеЗаписи.Значение;
	КонецЦикла;
	//Получаем данные из ЕРП
	ПараметрыПодключения = ЗГ_ПроцедурыИФункцииСервер.ПолучитьПараметрыПодключения("ERP");
	Соединение = Новый HTTPСоединение(ПараметрыПодключения.Сервер,, ПараметрыПодключения.Пользователь, ПараметрыПодключения.Пароль);
	
	ЗапросHTTP = Новый HTTPЗапрос("/erp/hs/api/test");
	ОтветHTTP = Соединение.Получить(ЗапросHTTP);
	Если ОтветHTTP.КодСостояния <> 200 Тогда
		ВызватьИсключение СтрШаблон("Ошибка при подключении к базе ЕРП с параметрами: сервер <%1>, пользователь <%2>", ПараметрыПодключения.Сервер, ПараметрыПодключения.Пользователь);
	КонецЕсли;
	
	КлючЗапроса = Строка(Новый УникальныйИдентификатор);
	НазначениеЗапроса = "HTTP КОРП: Продвижение товаров";
	ПараметрыЗапроса = Новый Структура();	
	ПараметрыЗапроса.Вставить("ДатаНачала", ДатаНачала);
	ПараметрыЗапроса.Вставить("ДатаОкончания",ДатаОкончания);
	ПараметрыЗапроса.Вставить("РозничнаяТочка", КодАптеки);
	//ПараметрыЗапроса.Вставить("Сегмент", "Ксеникал"); 
	
	ЗапросHTTP = Новый HTTPЗапрос(СтрШаблон("/erp/hs/api/query/%1?Назначение=%2", КлючЗапроса, НазначениеЗапроса));
	ЗапросHTTP.УстановитьТелоИзСтроки(ПолучитьПараметрыЗапросаСтрокойJSON(ПараметрыЗапроса));
	ОтветHTTP = Соединение.ОтправитьДляОбработки(ЗапросHTTP);
	Если ОтветHTTP.КодСостояния = 400 Тогда
		ВызватьИсключение СтрШаблон("Запрос в ЕРП с назначением <%1> завершился с ошибкой. %2", НазначениеЗапроса, ОтветHTTP.ПолучитьТелоКакСтроку());
	ИначеЕсли ОтветHTTP.КодСостояния = 404 Тогда
		КоличествоЗаписей = 0;
	ИначеЕсли ОтветHTTP.КодСостояния = 200 Тогда	
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());
		Данные = ПрочитатьJSON(Чтение);
		КоличествоЗаписей = Данные.Количество;
	КонецЕсли;
	Если КоличествоЗаписей <> 0 Тогда
		
		Диапазон=СтрШаблон("1-%1", Формат(КоличествоЗаписей, "ЧГ=0"));
		ЗапросHTTP = Новый HTTPЗапрос(СтрШаблон("/erp/hs/api/query/%1?Диапазон=%2", КлючЗапроса, Диапазон));
		ОтветHTTP = Соединение.Получить(ЗапросHTTP);
		Если ОтветHTTP.КодСостояния <> 200 Тогда
			ВызватьИсключение СтрШаблон("Получение записей из ЕРП по запросу с назначением <%1> в диапазоне <%2> завершилось с ошибкой. %3", НазначениеЗапроса, Диапазон, ОтветHTTP.ПолучитьТелоКакСтроку());
		КонецЕсли;
		
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());
		Данные1 = ПрочитатьJSON(Чтение); 
		//КемПродано,КоличествоОборот,СуммаОборот,СуммаСкидкиОборот 
		Для каждого эл Из Данные1 Цикл
			Строка=ТаблицаИтог.Добавить();
			Строка.КемПродано=эл.КемПродано;
			Строка.КоличествоОборот=эл.КоличествоОборот;
			Строка.СуммаОборот=эл.СуммаОборот;
		КонецЦикла;
		
		
	КонецЕсли;
	Возврат ТаблицаИтог;
	
КонецФункции // ПолучитьДанныеПродвиженияТоваровИзЕРП()

Функция ПолучитьДанныеМотивацииИзЕРП(Подразделение, ДатаНачала, ДатаОкончания) Экспорт
	
	ТаблицаИтог = Новый ТаблицаЗначений;
	ТаблицаИтог.Колонки.Добавить("КемПродано", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)));
	ТаблицаИтог.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	ТаблицаИтог.Колонки.Добавить("СуммаДТМ", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	ТаблицаИтог.Колонки.Добавить("СуммаОптика", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	ТаблицаИтог.Колонки.Добавить("КоличествоИнтернет", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	//КемПродано,Сумма,СуммаДТМ,СуммаОптика,КоличествоИнтернет
	
	//Получаем код аптеки					
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК Значение
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
	|ГДЕ
	|	ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Наименование =""Сокращенное наименование (Подразделения)""
	|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Подразделение);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	КодАптеки="";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КодАптеки=ВыборкаДетальныеЗаписи.Значение;
	КонецЦикла;
	//Получаем данные из ЕРП
	ПараметрыПодключения = ЗГ_ПроцедурыИФункцииСервер.ПолучитьПараметрыПодключения("ERP");
	Соединение = Новый HTTPСоединение(ПараметрыПодключения.Сервер,, ПараметрыПодключения.Пользователь, ПараметрыПодключения.Пароль);
	
	ЗапросHTTP = Новый HTTPЗапрос("/erp/hs/api/test");
	ОтветHTTP = Соединение.Получить(ЗапросHTTP);
	Если ОтветHTTP.КодСостояния <> 200 Тогда
		ВызватьИсключение СтрШаблон("Ошибка при подключении к базе ЕРП с параметрами: сервер <%1>, пользователь <%2>", ПараметрыПодключения.Сервер, ПараметрыПодключения.Пользователь);
	КонецЕсли;
	
	КлючЗапроса = Строка(Новый УникальныйИдентификатор);
	
	НазначениеЗапроса = "HTTP КОРП: Личная выручка";

	//!!!!!!!!!!!!!!!!!!!C 01-02-2024 А19 будет свой расчет с учетом АИА н_ 

	Если Подразделение=Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Аптека Здоровый Город №19",Истина) Тогда
		НазначениеЗапроса = "HTTP КОРП: Личная выручка2";	
	КонецЕсли;
	
	Если Подразделение=Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Интернет-аптека",Истина) Тогда
		НазначениеЗапроса = "HTTP КОРП: Личная выручка2";
		КодАптеки="А019"; //АИА берем по А19
	КонецЕсли;
	//_к
	
	ПараметрыЗапроса = Новый Структура();	
	ПараметрыЗапроса.Вставить("ДатаНачала", ДатаНачала);
	ПараметрыЗапроса.Вставить("ДатаОкончания",ДатаОкончания);
	ПараметрыЗапроса.Вставить("РозничнаяТочка", КодАптеки);
	//ПараметрыЗапроса.Вставить("Сегмент", "Ксеникал"); 
	
	ЗапросHTTP = Новый HTTPЗапрос(СтрШаблон("/erp/hs/api/query/%1?Назначение=%2", КлючЗапроса, НазначениеЗапроса));
	ЗапросHTTP.УстановитьТелоИзСтроки(ПолучитьПараметрыЗапросаСтрокойJSON(ПараметрыЗапроса));
	ОтветHTTP = Соединение.ОтправитьДляОбработки(ЗапросHTTP);
	Если ОтветHTTP.КодСостояния = 400 Тогда
		ВызватьИсключение СтрШаблон("Запрос в ЕРП с назначением <%1> завершился с ошибкой. %2", НазначениеЗапроса, ОтветHTTP.ПолучитьТелоКакСтроку());
	ИначеЕсли ОтветHTTP.КодСостояния = 404 Тогда
		КоличествоЗаписей = 0;
	ИначеЕсли ОтветHTTP.КодСостояния = 200 Тогда	
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());
		Данные = ПрочитатьJSON(Чтение);
		КоличествоЗаписей = Данные.Количество;
	КонецЕсли;
	Если КоличествоЗаписей <> 0 Тогда
		
		Диапазон=СтрШаблон("1-%1", Формат(КоличествоЗаписей, "ЧГ=0"));
		ЗапросHTTP = Новый HTTPЗапрос(СтрШаблон("/erp/hs/api/query/%1?Диапазон=%2", КлючЗапроса, Диапазон));
		ОтветHTTP = Соединение.Получить(ЗапросHTTP);
		Если ОтветHTTP.КодСостояния <> 200 Тогда
			ВызватьИсключение СтрШаблон("Получение записей из ЕРП по запросу с назначением <%1> в диапазоне <%2> завершилось с ошибкой. %3", НазначениеЗапроса, Диапазон, ОтветHTTP.ПолучитьТелоКакСтроку());
		КонецЕсли;
		
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());
		Данные1 = ПрочитатьJSON(Чтение); 
		//КемПродано,Сумма,СуммаДТМ,СуммаОптика,КоличествоИнтернет
		Для каждого эл Из Данные1 Цикл
			Строка=ТаблицаИтог.Добавить();
			Строка.КемПродано=эл.КемПродано;
			Строка.Сумма=эл.Сумма;
			Строка.СуммаДТМ=эл.СуммаДТМ;
			Строка.СуммаОптика=эл.СуммаОптика;
			Строка.КоличествоИнтернет=эл.КоличествоИнтернет;
		КонецЦикла;
		
		
	КонецЕсли;
	Возврат ТаблицаИтог;
	
КонецФункции 
Функция ПолучитьДанныеЗМЗИзЕРП(Подразделение, ДатаНачала, ДатаОкончания) Экспорт
	
	ТаблицаИтог = Новый ТаблицаЗначений;
	ТаблицаИтог.Колонки.Добавить("КемПродано", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)));
	ТаблицаИтог.Колонки.Добавить("Количество60", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	ТаблицаИтог.Колонки.Добавить("Сумма60", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	ТаблицаИтог.Колонки.Добавить("Количество365", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	ТаблицаИтог.Колонки.Добавить("Сумма365", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3)));
	//КемПродано,Количество60,Сумма60,Количество365,Сумма365,Количество1095,Сумма1095
	
	//Получаем код аптеки					
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК Значение
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
	|ГДЕ
	|	ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Наименование =""Сокращенное наименование (Подразделения)""
	|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Подразделение);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	КодАптеки="";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КодАптеки=ВыборкаДетальныеЗаписи.Значение;
	КонецЦикла;
	//Получаем данные из ЕРП
	ПараметрыПодключения = ЗГ_ПроцедурыИФункцииСервер.ПолучитьПараметрыПодключения("ERP");
	Соединение = Новый HTTPСоединение(ПараметрыПодключения.Сервер,, ПараметрыПодключения.Пользователь, ПараметрыПодключения.Пароль);
	
	ЗапросHTTP = Новый HTTPЗапрос("/erp/hs/api/test");
	ОтветHTTP = Соединение.Получить(ЗапросHTTP);
	Если ОтветHTTP.КодСостояния <> 200 Тогда
		ВызватьИсключение СтрШаблон("Ошибка при подключении к базе ЕРП с параметрами: сервер <%1>, пользователь <%2>", ПараметрыПодключения.Сервер, ПараметрыПодключения.Пользователь);
	КонецЕсли;
	
	КлючЗапроса = Строка(Новый УникальныйИдентификатор);
	
	НазначениеЗапроса = "HTTP КОРП: Сроки";
	
	ПараметрыЗапроса = Новый Структура();	
	ПараметрыЗапроса.Вставить("ДатаНачала", ДатаНачала);
	ПараметрыЗапроса.Вставить("ДатаОкончания",ДатаОкончания);
	ПараметрыЗапроса.Вставить("РозничнаяТочка", КодАптеки);
	//ПараметрыЗапроса.Вставить("Сегмент", "Ксеникал"); 
	
	ЗапросHTTP = Новый HTTPЗапрос(СтрШаблон("/erp/hs/api/query/%1?Назначение=%2", КлючЗапроса, НазначениеЗапроса));
	ЗапросHTTP.УстановитьТелоИзСтроки(ПолучитьПараметрыЗапросаСтрокойJSON(ПараметрыЗапроса));
	ОтветHTTP = Соединение.ОтправитьДляОбработки(ЗапросHTTP);
	Если ОтветHTTP.КодСостояния = 400 Тогда
		ВызватьИсключение СтрШаблон("Запрос в ЕРП с назначением <%1> завершился с ошибкой. %2", НазначениеЗапроса, ОтветHTTP.ПолучитьТелоКакСтроку());
	ИначеЕсли ОтветHTTP.КодСостояния = 404 Тогда
		КоличествоЗаписей = 0;
	ИначеЕсли ОтветHTTP.КодСостояния = 200 Тогда	
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());
		Данные = ПрочитатьJSON(Чтение);
		КоличествоЗаписей = Данные.Количество;
	КонецЕсли;
	Если КоличествоЗаписей <> 0 Тогда
		
		Диапазон=СтрШаблон("1-%1", Формат(КоличествоЗаписей, "ЧГ=0"));
		ЗапросHTTP = Новый HTTPЗапрос(СтрШаблон("/erp/hs/api/query/%1?Диапазон=%2", КлючЗапроса, Диапазон));
		ОтветHTTP = Соединение.Получить(ЗапросHTTP);
		Если ОтветHTTP.КодСостояния <> 200 Тогда
			ВызватьИсключение СтрШаблон("Получение записей из ЕРП по запросу с назначением <%1> в диапазоне <%2> завершилось с ошибкой. %3", НазначениеЗапроса, Диапазон, ОтветHTTP.ПолучитьТелоКакСтроку());
		КонецЕсли;
		
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());
		Данные1 = ПрочитатьJSON(Чтение); 
		//КемПродано,Количество60,Сумма60,Количество365,Сумма365,Количество1095,Сумма1095
		Для каждого эл Из Данные1 Цикл
			Строка=ТаблицаИтог.Добавить();
			Строка.КемПродано=эл.КемПродано;
			Строка.Количество60=эл.Количество60;
			Строка.Сумма60=эл.Сумма60;
			Строка.Количество365=эл.Количество365;
			Строка.Сумма365=эл.Сумма365;
		КонецЦикла;
		
		
	КонецЕсли;
	Возврат ТаблицаИтог;
	
КонецФункции
//Получает из ЕРП сумму продаж и данные ЗМЗ по все сотрудникам за пероид. Нужно для отчета
Функция ПолучитьВсеДанныеПродажИзЕРП(ДатаНачала, ДатаОкончания) Экспорт
	
	ТаблицаИтог = Новый ТаблицаЗначений;
	ТаблицаИтог.Колонки.Добавить("КемПродано", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)));
	ТаблицаИтог.Колонки.Добавить("КоличествоОборот", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	ТаблицаИтог.Колонки.Добавить("СуммаОборот", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	ТаблицаИтог.Колонки.Добавить("КоличествоЗМЗ", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	ТаблицаИтог.Колонки.Добавить("СуммаЗМЗ", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	//КемПродано,КоличествоОборот,СуммаОборот,КоличествоЗМЗ,СуммаЗМЗ
	
	
	//Получаем данные из ЕРП
	ПараметрыПодключения = ЗГ_ПроцедурыИФункцииСервер.ПолучитьПараметрыПодключения("ERP");
	Соединение = Новый HTTPСоединение(ПараметрыПодключения.Сервер,, ПараметрыПодключения.Пользователь, ПараметрыПодключения.Пароль);
	
	ЗапросHTTP = Новый HTTPЗапрос("/erp/hs/api/test");
	ОтветHTTP = Соединение.Получить(ЗапросHTTP);
	Если ОтветHTTP.КодСостояния <> 200 Тогда
		ВызватьИсключение СтрШаблон("Ошибка при подключении к базе ЕРП с параметрами: сервер <%1>, пользователь <%2>", ПараметрыПодключения.Сервер, ПараметрыПодключения.Пользователь);
	КонецЕсли;
	
	КлючЗапроса = Строка(Новый УникальныйИдентификатор);
	
	НазначениеЗапроса = "HTTP КОРП: Продажи ЗМЗ по всем сотрудникам";
	
	ПараметрыЗапроса = Новый Структура();	
	ПараметрыЗапроса.Вставить("ДатаНачала", ДатаНачала);
	ПараметрыЗапроса.Вставить("ДатаОкончания",ДатаОкончания);
		
	ЗапросHTTP = Новый HTTPЗапрос(СтрШаблон("/erp/hs/api/query/%1?Назначение=%2", КлючЗапроса, НазначениеЗапроса));
	ЗапросHTTP.УстановитьТелоИзСтроки(ПолучитьПараметрыЗапросаСтрокойJSON(ПараметрыЗапроса));
	ОтветHTTP = Соединение.ОтправитьДляОбработки(ЗапросHTTP);
	Если ОтветHTTP.КодСостояния = 400 Тогда
		ВызватьИсключение СтрШаблон("Запрос в ЕРП с назначением <%1> завершился с ошибкой. %2", НазначениеЗапроса, ОтветHTTP.ПолучитьТелоКакСтроку());
	ИначеЕсли ОтветHTTP.КодСостояния = 404 Тогда
		КоличествоЗаписей = 0;
	ИначеЕсли ОтветHTTP.КодСостояния = 200 Тогда	
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());
		Данные = ПрочитатьJSON(Чтение);
		КоличествоЗаписей = Данные.Количество;
	КонецЕсли;
	Если КоличествоЗаписей <> 0 Тогда
		
		Диапазон=СтрШаблон("1-%1", Формат(КоличествоЗаписей, "ЧГ=0"));
		ЗапросHTTP = Новый HTTPЗапрос(СтрШаблон("/erp/hs/api/query/%1?Диапазон=%2", КлючЗапроса, Диапазон));
		ОтветHTTP = Соединение.Получить(ЗапросHTTP);
		Если ОтветHTTP.КодСостояния <> 200 Тогда
			ВызватьИсключение СтрШаблон("Получение записей из ЕРП по запросу с назначением <%1> в диапазоне <%2> завершилось с ошибкой. %3", НазначениеЗапроса, Диапазон, ОтветHTTP.ПолучитьТелоКакСтроку());
		КонецЕсли;
		
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());
		Данные1 = ПрочитатьJSON(Чтение); 
		//КемПродано,КоличествоОборот,СуммаОборот,КоличествоЗМЗ,СуммаЗМЗ
		Для каждого эл Из Данные1 Цикл
			Строка=ТаблицаИтог.Добавить();
			Строка.КемПродано=эл.КемПродано;
			Строка.КоличествоОборот=эл.КоличествоОборот;
			Строка.СуммаОборот=эл.СуммаОборот;
			Строка.КоличествоЗМЗ=эл.КоличествоЗМЗ;
			Строка.СуммаЗМЗ=эл.СуммаЗМЗ;
		КонецЦикла;
	КонецЕсли;
	Возврат ТаблицаИтог;
	
КонецФункции
Функция ПолучитьПоказателиПоАптекам(ДатаНачала, ДатаОкончания) Экспорт
	
	ТаблицаИтог = Новый ТаблицаЗначений;
	ТаблицаИтог.Колонки.Добавить("Аптека", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)));
	ТаблицаИтог.Колонки.Добавить("СуммаВсего", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	ТаблицаИтог.Колонки.Добавить("СуммаОптики", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	ТаблицаИтог.Колонки.Добавить("МД1", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	ТаблицаИтог.Колонки.Добавить("КоличествоДТМ", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	ТаблицаИтог.Колонки.Добавить("СуммаДТМ", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	ТаблицаИтог.Колонки.Добавить("КоличествоПродвижение", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	ТаблицаИтог.Колонки.Добавить("СуммаПродвижение", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	ТаблицаИтог.Колонки.Добавить("ЗМЗ12месПроц", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	ТаблицаИтог.Колонки.Добавить("ЗМЗ12месПроцОптики", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3))); 
	ТаблицаИтог.Колонки.Добавить("КТЗ", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	//Аптека,СуммаВсего,СуммаОптики,МД1,КоличествоДТМ,СуммаДТМ,КоличествоПродвижение,СуммаПродвижение,ЗМЗ12месПроц,ЗМЗ12месПроцОптики,КТЗ
	
	
	//Получаем данные из ЕРП
	ПараметрыПодключения = ЗГ_ПроцедурыИФункцииСервер.ПолучитьПараметрыПодключения("ERP");
	Соединение = Новый HTTPСоединение(ПараметрыПодключения.Сервер,, ПараметрыПодключения.Пользователь, ПараметрыПодключения.Пароль);
	
	ЗапросHTTP = Новый HTTPЗапрос("/erp/hs/api/test");
	ОтветHTTP = Соединение.Получить(ЗапросHTTP);
	Если ОтветHTTP.КодСостояния <> 200 Тогда
		ВызватьИсключение СтрШаблон("Ошибка при подключении к базе ЕРП с параметрами: сервер <%1>, пользователь <%2>", ПараметрыПодключения.Сервер, ПараметрыПодключения.Пользователь);
	КонецЕсли;
	
	КлючЗапроса = Строка(Новый УникальныйИдентификатор);
	
	НазначениеЗапроса = "HTTP КОРП: Показатели по аптекам";
	
	ПараметрыЗапроса = Новый Структура();	
	ПараметрыЗапроса.Вставить("ДатаНачала", ДатаНачала);
	ПараметрыЗапроса.Вставить("ДатаОкончания",ДатаОкончания);
		
	ЗапросHTTP = Новый HTTPЗапрос(СтрШаблон("/erp/hs/api/query/%1?Назначение=%2", КлючЗапроса, НазначениеЗапроса));
	ЗапросHTTP.УстановитьТелоИзСтроки(ПолучитьПараметрыЗапросаСтрокойJSON(ПараметрыЗапроса));
	ОтветHTTP = Соединение.ОтправитьДляОбработки(ЗапросHTTP);
	Если ОтветHTTP.КодСостояния = 400 Тогда
		ВызватьИсключение СтрШаблон("Запрос в ЕРП с назначением <%1> завершился с ошибкой. %2", НазначениеЗапроса, ОтветHTTP.ПолучитьТелоКакСтроку());
	ИначеЕсли ОтветHTTP.КодСостояния = 404 Тогда
		КоличествоЗаписей = 0;
	ИначеЕсли ОтветHTTP.КодСостояния = 200 Тогда	
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());
		Данные = ПрочитатьJSON(Чтение);
		КоличествоЗаписей = Данные.Количество;
	КонецЕсли;
	Если КоличествоЗаписей <> 0 Тогда
		
		Диапазон=СтрШаблон("1-%1", Формат(КоличествоЗаписей, "ЧГ=0"));
		ЗапросHTTP = Новый HTTPЗапрос(СтрШаблон("/erp/hs/api/query/%1?Диапазон=%2", КлючЗапроса, Диапазон));
		ОтветHTTP = Соединение.Получить(ЗапросHTTP);
		Если ОтветHTTP.КодСостояния <> 200 Тогда
			ВызватьИсключение СтрШаблон("Получение записей из ЕРП по запросу с назначением <%1> в диапазоне <%2> завершилось с ошибкой. %3", НазначениеЗапроса, Диапазон, ОтветHTTP.ПолучитьТелоКакСтроку());
		КонецЕсли;
		
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(ОтветHTTP.ПолучитьТелоКакСтроку());
		Данные1 = ПрочитатьJSON(Чтение); 
		//Аптека,СуммаВсего,СуммаОптики,МД1,КоличествоДТМ,СуммаДТМ,КоличествоПродвижение,СуммаПродвижение,ЗМЗ12месПроц,ЗМЗ12месПроцОптики,КТЗ
		Для каждого эл Из Данные1 Цикл
			Строка=ТаблицаИтог.Добавить();
			Строка.Аптека=эл.Аптека;
			Строка.СуммаВсего=эл.СуммаВсего;
			Строка.СуммаОптики=эл.СуммаОптики;
			Строка.МД1=эл.МД1;
			Строка.КоличествоДТМ=эл.КоличествоДТМ;
			Строка.СуммаДТМ=эл.СуммаДТМ;
			Строка.КоличествоПродвижение=эл.КоличествоПродвижение;
			Строка.СуммаПродвижение=эл.СуммаПродвижение;
			Строка.ЗМЗ12месПроц=эл.ЗМЗ12месПроц;
			Строка.ЗМЗ12месПроцОптики=эл.ЗМЗ12месПроцОптики;
			Строка.КТЗ=эл.КТЗ;
		КонецЦикла;
	КонецЕсли;
	Возврат ТаблицаИтог;
	
КонецФункции

Функция ПолучитьПараметрыЗапросаСтрокойJSON(ПараметрыЗапроса)
	
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,,,Истина,Истина,Истина,Истина,Истина));
	Запись.ПроверятьСтруктуру = Ложь;
	ЗаписатьJSON(Запись, ПараметрыЗапроса);
	
	Возврат Запись.Закрыть();
	
КонецФункции

Функция ПолучитьРазмерПремии(Бонус,ВидПремии,Период) Экспорт
	запрос=новый запрос;
	запрос.УстановитьПараметр("Бонус",Бонус);
	запрос.УстановитьПараметр("ВидПремии",ВидПремии);
	запрос.УстановитьПараметр("ДатаС",Период);
	запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1 
	| 	ДПО_ПоказателиПремий.Период КАК Период,
	| 	ДПО_ПоказателиПремий.ВидыПремий КАК ВидыПремий,
	| 	ДПО_ПоказателиПремий.ДиапазонС КАК ДиапазонС,
	| 	ДПО_ПоказателиПремий.ДиапазонПо КАК ДиапазонПо,
	| 	ДПО_ПоказателиПремий.ВеличинаПремии КАК ВеличинаПремии
	| ИЗ
	| 	РегистрСведений.ДПО_ПоказателиПремий КАК ДПО_ПоказателиПремий
	| ГДЕ
	| 	&Бонус МЕЖДУ ДПО_ПоказателиПремий.ДиапазонС И ДПО_ПоказателиПремий.ДиапазонПо
	| 	И ДПО_ПоказателиПремий.Период <= &ДатаС
	|	И ДПО_ПоказателиПремий.ВидыПремий = &ВидПремии
	| УПОРЯДОЧИТЬ ПО
	| ДПО_ПоказателиПремий.Период УБЫВ"; 
	
	//СрезПоследних нельзя брать т.к. 	нужно в запросе задавать значения всех измерений
	
	//"ВЫБРАТЬ ПЕРВЫЕ 1
	//             |	ДПО_ПоказателиПремийСрезПоследних.ВеличинаПремии КАК ВеличинаПремии
	//             |ИЗ
	//             |	РегистрСведений.ДПО_ПоказателиПремий.СрезПоследних(&ДатаС, ВидыПремий = &ВидПремии) КАК ДПО_ПоказателиПремийСрезПоследних
	//             |ГДЕ
	//             |	&Бонус МЕЖДУ ДПО_ПоказателиПремийСрезПоследних.ДиапазонС И ДПО_ПоказателиПремийСрезПоследних.ДиапазонПо";
	РезультатЗапроса=запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	БонусМУ=0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		БонусМУ=ВыборкаДетальныеЗаписи.ВеличинаПремии;
	КонецЦикла;
	
	Возврат БонусМУ;
КонецФункции


